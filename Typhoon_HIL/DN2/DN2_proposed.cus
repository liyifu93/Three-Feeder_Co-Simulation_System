<ui_settings>
    <version>2.8</version>
    <model_locked>False</model_locked>
    <canvas_bg_color>#ffffff</canvas_bg_color>
    <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts.
# NOTE: This code is always executed prior to simulation start.

# The variable 'SETTINGS_DIR' holds the directory where the loaded Panel .cus file is located.
# Also you can call the 'get_settings_dir_path()' function in any
# Macro and Expression script to get the same directory.
SETTINGS_DIR = get_settings_dir_path()

# The 'add_to_python_path(folder)' function can be used to add a custom folder
# with Python files and packages to the PYTHONPATH. After a folder is added, all Python
# files and Python packages from it can be imported into the SCADA Namespace.

# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# Numpy module is imported as 'np'
# Scipy module is imported as 'sp'
# Schematic Editor model namespace is imported as 'scm'
# Function for printing to the HIL SCADA Message log is imported as 'printf'.

Vnom_ph_to_ph = 22e3

Vnom_ph_to_gnd = Vnom_ph_to_ph/np.sqrt(3)]]></initialization_code>
    <components>
        <component_data>
                <id>a8a859df78f411eeae580013eff25608</id>
                <name><![CDATA[UTC Time]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
import datetime
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
now = datetime.datetime.now()
utc_now = now.utcnow()
# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": str(utc_now),  # "text": "Text Value"

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>250</updateRate>
                <widget_settings>
                    <x>1024</x>
                    <y>8</y>
                    <width>504</width>
                    <height>64</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>b1f34bba78f411ee98f30013eff25608</id>
                <name><![CDATA[PTP Status]]></name>
                <type>TraceDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Signals</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing values that will be displayed
# specify data (one pairs of "names" and "values" parts are mandatory)
data = {
    # analog like signals/data names: ["Analog 1 name","Analog 2 name","Analog N name"]
    "analog_names": [],

    # analog data values: [aVal1,aVal2,aVal3]
    "analog_values": [],

    # digital like signals/data names: ["Digital 1 name","Digital 2 name","Digital 3 name"]
    "digital_names": [],

    # digital data values: [dVal1,dVal2,aVal3]
    "digital_values": [],
    }
displayValue = data
]]></code>
                <analog_signals><![CDATA[['ptp']]]></analog_signals>
                <digital_signals><![CDATA[[]]]></digital_signals>
                <streaming_analog_signals><![CDATA[[]]]></streaming_analog_signals>
                <streaming_digital_signals><![CDATA[[]]]></streaming_digital_signals>
                <analog_signals_scaling_factors><![CDATA[{'ptp': 1.0}]]></analog_signals_scaling_factors>
                <streaming_analog_signals_scaling_factors><![CDATA[{}]]></streaming_analog_signals_scaling_factors>
                <update_rate>250</update_rate>
                <execution_rate>None</execution_rate>
                <background_color>white</background_color>
                <widget_settings>
                    <x>1136</x>
                    <y>288</y>
                    <width>400</width>
                    <height>200</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <x_title><![CDATA[x axes]]></x_title>
                    <y_title><![CDATA[y axes]]></y_title>
                    <y_range_min>-100.0</y_range_min>
                    <y_range_max>100.0</y_range_max>
                    <time_window>10</time_window>
                    <auto_scale_enabled>True</auto_scale_enabled>
                    <legend_enabled>True</legend_enabled>
                    <x_axis_title_enabled>False</x_axis_title_enabled>
                    <y_axis_title_enabled>False</y_axis_title_enabled>
                    <use_reference_curve>False</use_reference_curve>
                    <reference_curve_code><![CDATA[# NOTE: Global namespace variables are available
# Selected time window is available through variable 'timeWindow'
# Selected update rate is available through variable 'updateRate'

# reference curve data point
curveData = 12.0

# specify curve options ('data' part is mandatory)
refCurveData1 = {
    # reference curve data point
    "data": curveData,

    # curve line style: 'solid', 'dashed', 'dashdot', 'dotted'
    "line_style": "dashed",

    # curve line color: 'red', 'green', 'blue', 'cyan', 'magenta', 'yellow'
    "line_color": 'red',

    # curve line width: float number
    "line_width": 2.0,
    
    # reference curve title
    "title": "Reference curve",

    # show a title in the legend
    "show_in_legend": True
}

# list of reference curves data: [ref1, ref2,...refN]
referenceCurves = [refCurveData1]

]]></reference_curve_code>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>b1f34bbb78f411eead3c0013eff25608</id>
                <name><![CDATA[GPS Status]]></name>
                <type>TraceDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Signals</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing values that will be displayed
# specify data (one pairs of "names" and "values" parts are mandatory)
data = {
    # analog like signals/data names: ["Analog 1 name","Analog 2 name","Analog N name"]
    "analog_names": [],

    # analog data values: [aVal1,aVal2,aVal3]
    "analog_values": [],

    # digital like signals/data names: ["Digital 1 name","Digital 2 name","Digital 3 name"]
    "digital_names": [],

    # digital data values: [dVal1,dVal2,aVal3]
    "digital_values": [],
    }
displayValue = data
]]></code>
                <analog_signals><![CDATA[['gps']]]></analog_signals>
                <digital_signals><![CDATA[[]]]></digital_signals>
                <streaming_analog_signals><![CDATA[[]]]></streaming_analog_signals>
                <streaming_digital_signals><![CDATA[[]]]></streaming_digital_signals>
                <analog_signals_scaling_factors><![CDATA[{'gps': 1.0}]]></analog_signals_scaling_factors>
                <streaming_analog_signals_scaling_factors><![CDATA[{}]]></streaming_analog_signals_scaling_factors>
                <update_rate>250</update_rate>
                <execution_rate>None</execution_rate>
                <background_color>white</background_color>
                <widget_settings>
                    <x>1136</x>
                    <y>80</y>
                    <width>400</width>
                    <height>200</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <x_title><![CDATA[x axes]]></x_title>
                    <y_title><![CDATA[y axes]]></y_title>
                    <y_range_min>-100.0</y_range_min>
                    <y_range_max>100.0</y_range_max>
                    <time_window>10</time_window>
                    <auto_scale_enabled>True</auto_scale_enabled>
                    <legend_enabled>True</legend_enabled>
                    <x_axis_title_enabled>False</x_axis_title_enabled>
                    <y_axis_title_enabled>False</y_axis_title_enabled>
                    <use_reference_curve>False</use_reference_curve>
                    <reference_curve_code><![CDATA[# NOTE: Global namespace variables are available
# Selected time window is available through variable 'timeWindow'
# Selected update rate is available through variable 'updateRate'

# reference curve data point
curveData = 12.0

# specify curve options ('data' part is mandatory)
refCurveData1 = {
    # reference curve data point
    "data": curveData,

    # curve line style: 'solid', 'dashed', 'dashdot', 'dotted'
    "line_style": "dashed",

    # curve line color: 'red', 'green', 'blue', 'cyan', 'magenta', 'yellow'
    "line_color": 'red',

    # curve line width: float number
    "line_width": 2.0,
    
    # reference curve title
    "title": "Reference curve",

    # show a title in the legend
    "show_in_legend": True
}

# list of reference curves data: [ref1, ref2,...refN]
referenceCurves = [refCurveData1]

]]></reference_curve_code>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>be2e644278ff11ee8001207918e0ad02</id>
                <name><![CDATA[NOP3]]></name>
                <type>ComboBoxMacro</type>
                <description><![CDATA[]]></description>
                <on_use_code active="True"><![CDATA[# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
# NOTE: entered value is available through variable 'inputValue'

if inputValue == 'ON':
    # do something when 'Case 1' is selected
    hil.set_scada_input_value('switch state 3', 1)
    pass
elif inputValue == 'OFF':
    # do something when 'Case 2' is selected
    hil.set_scada_input_value('switch state 3', 0)
    pass

]]></on_use_code>
                <on_start_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change the widget value by setting this variable.
# NOTE: If you do not specify a 'widgetValue' variable or assign 'None' to it,
# the widget value will not be changed.
widgetValue = None
]]></on_timer_code>
                <on_start_code_source><![CDATA[Custom code]]></on_start_code_source>
                <inputValue><![CDATA[OFF]]></inputValue>
                <availableValues><![CDATA[['ON', 'OFF']]]></availableValues>
                <unit><![CDATA[]]></unit>
                <widget_settings>
                    <x>928</x>
                    <y>968</y>
                    <width>136</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>617ca985791811eea6ce207918e0ad02</id>
                <name><![CDATA[NOP3 status]]></name>
                <type>LedDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Digital signal</data_type>
                <signal_name><![CDATA[NOP3_fb]]></signal_name>
                <hil_device>0</hil_device>
                <led_color>Green</led_color>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing LED indicator state
# True -> On, False -> Off
displayValue = False
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>1080</x>
                    <y>968</y>
                    <width>104</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>561ca09cca1611ee9071207918e0ad02</id>
                <name><![CDATA[BUS1]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['561ca09dca1611ee834c207918e0ad02', '561cc59bca1611ee80aa207918e0ad02', '561cc59cca1611eeb310207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "1"]]></initialization_code>
                <widget_settings>
                    <x>112</x>
                    <y>776</y>
                    <width>96</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>561ca09dca1611ee834c207918e0ad02</id>
                <name><![CDATA[Meter1_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000


]]></code>
                <signal_name><![CDATA[Meter701.Va_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>72</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>561cc59bca1611ee80aa207918e0ad02</id>
                <name><![CDATA[Meter1_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter701.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>96</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>561cc59cca1611eeb310207918e0ad02</id>
                <name><![CDATA[Sub-Panel]]></name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['561cc59dca1611eeba25207918e0ad02', '561cc5a0ca1611ee95eb207918e0ad02', '561cc5a4ca1611ee8092207918e0ad02', '561cc5a5ca1611ee9179207918e0ad02', '561cc5a6ca1611ee8f39207918e0ad02']]]></components_ids>
                <working_mode>Embedded</working_mode>
                <canvas_window_visible>False</canvas_window_visible>
                <canvas_window_geometry><![CDATA[None]]></canvas_window_geometry>
                <canvas_window_state><![CDATA[None]]></canvas_window_state>
                <canvas_window_in_fullscreen>False</canvas_window_in_fullscreen>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <use_background_image>True</use_background_image>
                <image><![CDATA[..\..\..\..\Program Files\Typhoon HIL Control Center 2024.1\examples\models\power systems\references\satisfaction-meter-md.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>72</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>561cc59dca1611eeba25207918e0ad02</id>
                <name><![CDATA[Current measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['561cc59eca1611eebc8a207918e0ad02', '561cc59fca1611ee9913207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>480</x>
                    <y>376</y>
                    <width>256</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>561cc59eca1611eebc8a207918e0ad02</id>
                <name><![CDATA[Ia RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter718.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>104</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>561cc59fca1611ee9913207918e0ad02</id>
                <name><![CDATA[Ia phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter718.Ia_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>120</x>
                    <y>8</y>
                    <width>120</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>561cc5a0ca1611ee95eb207918e0ad02</id>
                <name><![CDATA[Voltage measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['561cc5a1ca1611ee9dd7207918e0ad02', '561cc5a2ca1611ee8f67207918e0ad02', '561cc5a3ca1611eeaf0b207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>400</x>
                    <y>480</y>
                    <width>440</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>561cc5a1ca1611ee9dd7207918e0ad02</id>
                <name><![CDATA[Va RMS (pu)]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/Vnom_ph_to_gnd
]]></code>
                <signal_name><![CDATA[Bus675.V1_rms]]></signal_name>
                <unit><![CDATA[pu]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>144</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>561cc5a2ca1611ee8f67207918e0ad02</id>
                <name><![CDATA[Va phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(bus)]
]]></code>
                <signal_name><![CDATA[Meter718.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>288</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>561cc5a3ca1611eeaf0b207918e0ad02</id>
                <name><![CDATA[Va RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter718.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>561cc5a4ca1611ee8092207918e0ad02</id>
                <name><![CDATA[P load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed
global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


P= 3*VAn_rms*IA_rms*(np.cos(np.deg2rad(Va_ph-Ia_ph)))
displayValue = P/1e3]]></code>
                <signal_name><![CDATA[Meter717.Va_rms]]></signal_name>
                <unit><![CDATA[kW]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>432</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>150.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>561cc5a5ca1611ee9179207918e0ad02</id>
                <name><![CDATA[Q load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

import numpy as np
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed

global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


Q= 3*VAn_rms*IA_rms*(np.sin(np.deg2rad(Va_ph-Ia_ph)))
displayValue = Q/1e3]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[kVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>608</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>561cc5a6ca1611ee8f39207918e0ad02</id>
                <name><![CDATA[Text display]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": "Bus {} Load".format(bus),

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>512</x>
                    <y>176</y>
                    <width>160</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>b0c336e0ca1611ee8ddf207918e0ad02</id>
                <name><![CDATA[Set grid _ capture variables]]></name>
                <type>Macro</type>
                <description><![CDATA[]]></description>
                <on_click_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed on button click.
# HIL API is imported as 'hil'

]]></on_click_code>
                <on_start_code active="True"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
global Vdata_dict
global Idata_dict

hil.set_source_sine_waveform('Vs', rms=round(22e3/(3**0.5), 4), frequency=50.0, phase=0.0, harmonics_pu=())

Vkeys = ["Meter1.VAn_rms", "Meter1.Va_ph",
         "Meter2.VAn_rms", "Meter2.Va_ph",
         "Meter3.VAn_rms", "Meter3.Va_ph",
         "Meter4.VAn_rms", "Meter4.Va_ph",
         "Meter5.VAn_rms", "Meter5.Va_ph",
         "Meter6.VAn_rms", "Meter6.Va_ph",
         "Meter7.VAn_rms", "Meter7.Va_ph",
         "Meter15.VAn_rms", "Meter15.Va_ph",
         "Meter16.VAn_rms", "Meter16.Va_ph",
         "Meter17.VAn_rms", "Meter17.Va_ph",
         "Meter18.VAn_rms", "Meter18.Va_ph",
         "Meter19.VAn_rms", "Meter19.Va_ph",
         "Meter20.VAn_rms", "Meter20.Va_ph",
         "Meter21.VAn_rms", "Meter21.Va_ph",
         "Meter22.VAn_rms", "Meter22.Va_ph",
         "Meter22.VBn_rms", "Meter22.Vb_ph",
         "Meter22.VCn_rms", "Meter22.Vc_ph",
         "Meter23.VAn_rms", "Meter23.Va_ph",
         "Meter23.VBn_rms", "Meter23.Vb_ph",
         "Meter23.VCn_rms", "Meter23.Vc_ph"]

Vdata_array = hil.read_analog_signals(signals=Vkeys)
Vdata_dict = dict(zip(Vkeys, Vdata_array))

Ikeys = ["Meter1.IA_rms", "Meter1.Ia_ph",
         "Meter2.IA_rms", "Meter2.Ia_ph",
         "Meter3.IA_rms", "Meter3.Ia_ph",
         "Meter4.IA_rms", "Meter4.Ia_ph",
         "Meter5.IA_rms", "Meter5.Ia_ph",
         "Meter6.IA_rms", "Meter6.Ia_ph",
         "Meter7.IA_rms", "Meter7.Ia_ph",
         "Meter15.IA_rms", "Meter15.Ia_ph",
         "Meter16.IA_rms", "Meter16.Ia_ph",
         "Meter17.IA_rms", "Meter17.Ia_ph",
         "Meter18.IA_rms", "Meter18.Ia_ph",
         "Meter19.IA_rms", "Meter19.Ia_ph",
         "Meter20.IA_rms", "Meter20.Ia_ph",
         "Meter21.IA_rms", "Meter21.Ia_ph",
         "Meter22.IA_rms", "Meter22.Ia_ph",
         "Meter22.IB_rms", "Meter22.Ib_ph",
         "Meter22.IC_rms", "Meter22.Ic_ph",
         "Meter23.IA_rms", "Meter23.Ia_ph",
         "Meter23.IB_rms", "Meter23.Ib_ph",
         "Meter23.IC_rms", "Meter23.Ic_ph"]

Idata_array = hil.read_analog_signals(signals=Ikeys)
Idata_dict = dict(zip(Ikeys, Idata_array))

]]></on_start_code>
                <on_timer_code active="True"><![CDATA[# NOTE: The code specified in this handler will be executed on timer event.
# HIL API is imported as 'hil'

global Vdata_dict
global Idata_dict

Vkeys = ["Meter1.VAn_rms", "Meter1.Va_ph",
         "Meter2.VAn_rms", "Meter2.Va_ph",
         "Meter3.VAn_rms", "Meter3.Va_ph",
         "Meter4.VAn_rms", "Meter4.Va_ph",
         "Meter5.VAn_rms", "Meter5.Va_ph",
         "Meter6.VAn_rms", "Meter6.Va_ph",
         "Meter7.VAn_rms", "Meter7.Va_ph",
         "Meter15.VAn_rms", "Meter15.Va_ph",
         "Meter16.VAn_rms", "Meter16.Va_ph",
         "Meter17.VAn_rms", "Meter17.Va_ph",
         "Meter18.VAn_rms", "Meter18.Va_ph",
         "Meter19.VAn_rms", "Meter19.Va_ph",
         "Meter20.VAn_rms", "Meter20.Va_ph",
         "Meter21.VAn_rms", "Meter21.Va_ph",
         "Meter22.VAn_rms", "Meter22.Va_ph",
         "Meter22.VBn_rms", "Meter22.Vb_ph",
         "Meter22.VCn_rms", "Meter22.Vc_ph",
         "Meter23.VAn_rms", "Meter23.Va_ph",
         "Meter23.VBn_rms", "Meter23.Vb_ph",
         "Meter23.VCn_rms", "Meter23.Vc_ph"]

Vdata_array = hil.read_analog_signals(signals=Vkeys)
Vdata_dict = dict(zip(Vkeys, Vdata_array))

Ikeys = ["Meter1.IA_rms", "Meter1.Ia_ph",
         "Meter2.IA_rms", "Meter2.Ia_ph",
         "Meter3.IA_rms", "Meter3.Ia_ph",
         "Meter4.IA_rms", "Meter4.Ia_ph",
         "Meter5.IA_rms", "Meter5.Ia_ph",
         "Meter6.IA_rms", "Meter6.Ia_ph",
         "Meter7.IA_rms", "Meter7.Ia_ph",
         "Meter15.IA_rms", "Meter15.Ia_ph",
         "Meter16.IA_rms", "Meter16.Ia_ph",
         "Meter17.IA_rms", "Meter17.Ia_ph",
         "Meter18.IA_rms", "Meter18.Ia_ph",
         "Meter19.IA_rms", "Meter19.Ia_ph",
         "Meter20.IA_rms", "Meter20.Ia_ph",
         "Meter21.IA_rms", "Meter21.Ia_ph",
         "Meter22.IA_rms", "Meter22.Ia_ph",
         "Meter22.IB_rms", "Meter22.Ib_ph",
         "Meter22.IC_rms", "Meter22.Ic_ph",
         "Meter23.IA_rms", "Meter23.Ia_ph",
         "Meter23.IB_rms", "Meter23.Ib_ph",
         "Meter23.IC_rms", "Meter23.Ic_ph"]

Idata_array = hil.read_analog_signals(signals=Ikeys)
Idata_dict = dict(zip(Ikeys, Idata_array))]]></on_timer_code>
                <run_each>250</run_each>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'

]]></on_stop_code>
                <widget_settings>
                    <x>1632</x>
                    <y>40</y>
                    <width>176</width>
                    <height>40</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>3e6a8a50ca1711ee81bd207918e0ad02</id>
                <name><![CDATA[BUS2]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['3e6a8a51ca1711ee8abb207918e0ad02', '3e6a8a52ca1711eeaa71207918e0ad02', '3e6a8a53ca1711eeb572207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "2"]]></initialization_code>
                <widget_settings>
                    <x>224</x>
                    <y>776</y>
                    <width>96</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>3e6a8a51ca1711ee8abb207918e0ad02</id>
                <name><![CDATA[Meter2_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000


]]></code>
                <signal_name><![CDATA[Meter701.Va_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>72</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>3e6a8a52ca1711eeaa71207918e0ad02</id>
                <name><![CDATA[Meter2_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter701.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>96</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>3e6a8a53ca1711eeb572207918e0ad02</id>
                <name><![CDATA[Sub-Panel]]></name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['3e6a8a54ca1711ee8d00207918e0ad02', '3e6a8a57ca1711eeacbe207918e0ad02', '3e6ab154ca1711eeb784207918e0ad02', '3e6ab155ca1711eea28f207918e0ad02', '3e6ab156ca1711ee8860207918e0ad02']]]></components_ids>
                <working_mode>Embedded</working_mode>
                <canvas_window_visible>False</canvas_window_visible>
                <canvas_window_geometry><![CDATA[None]]></canvas_window_geometry>
                <canvas_window_state><![CDATA[None]]></canvas_window_state>
                <canvas_window_in_fullscreen>False</canvas_window_in_fullscreen>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <use_background_image>True</use_background_image>
                <image><![CDATA[..\..\..\..\Program Files\Typhoon HIL Control Center 2024.1\examples\models\power systems\references\satisfaction-meter-md.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>88</width>
                    <height>72</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>3e6a8a54ca1711ee8d00207918e0ad02</id>
                <name><![CDATA[Current measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['3e6a8a55ca1711ee938e207918e0ad02', '3e6a8a56ca1711eeb52f207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>480</x>
                    <y>376</y>
                    <width>256</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>3e6a8a55ca1711ee938e207918e0ad02</id>
                <name><![CDATA[Ia RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter718.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>104</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>3e6a8a56ca1711eeb52f207918e0ad02</id>
                <name><![CDATA[Ia phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter718.Ia_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>120</x>
                    <y>8</y>
                    <width>120</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>3e6a8a57ca1711eeacbe207918e0ad02</id>
                <name><![CDATA[Voltage measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['3e6ab151ca1711ee970b207918e0ad02', '3e6ab152ca1711ee8bba207918e0ad02', '3e6ab153ca1711ee964b207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>400</x>
                    <y>480</y>
                    <width>440</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>3e6ab151ca1711ee970b207918e0ad02</id>
                <name><![CDATA[Va RMS (pu)]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/Vnom_ph_to_gnd
]]></code>
                <signal_name><![CDATA[Bus675.V1_rms]]></signal_name>
                <unit><![CDATA[pu]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>144</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>3e6ab152ca1711ee8bba207918e0ad02</id>
                <name><![CDATA[Va phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(bus)]
]]></code>
                <signal_name><![CDATA[Meter718.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>288</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>3e6ab153ca1711ee964b207918e0ad02</id>
                <name><![CDATA[Va RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter718.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>3e6ab154ca1711eeb784207918e0ad02</id>
                <name><![CDATA[P load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed
global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


P= 3*VAn_rms*IA_rms*(np.cos(np.deg2rad(Va_ph-Ia_ph)))
displayValue = P/1e3]]></code>
                <signal_name><![CDATA[Meter717.Va_rms]]></signal_name>
                <unit><![CDATA[kW]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>432</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>150.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>3e6ab155ca1711eea28f207918e0ad02</id>
                <name><![CDATA[Q load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

import numpy as np
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed

global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


Q= 3*VAn_rms*IA_rms*(np.sin(np.deg2rad(Va_ph-Ia_ph)))
displayValue = Q/1e3]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[kVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>608</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>3e6ab156ca1711ee8860207918e0ad02</id>
                <name><![CDATA[Text display]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": "Bus {} Load".format(bus),

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>512</x>
                    <y>176</y>
                    <width>160</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>40a1b3a3ca1711eea8d4207918e0ad02</id>
                <name><![CDATA[BUS3]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['40a1b3a4ca1711eeaf6e207918e0ad02', '40a1b3a5ca1711ee9be2207918e0ad02', '40a1b3a6ca1711eeb5d5207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "3"]]></initialization_code>
                <widget_settings>
                    <x>336</x>
                    <y>776</y>
                    <width>96</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>40a1b3a4ca1711eeaf6e207918e0ad02</id>
                <name><![CDATA[Meter3_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000


]]></code>
                <signal_name><![CDATA[Meter701.Va_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>72</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>40a1b3a5ca1711ee9be2207918e0ad02</id>
                <name><![CDATA[Meter3_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter701.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>96</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>40a1b3a6ca1711eeb5d5207918e0ad02</id>
                <name><![CDATA[Sub-Panel]]></name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['40a1b3a7ca1711ee9dff207918e0ad02', '40a1b3aaca1711eeb36e207918e0ad02', '40a1b3aeca1711ee9c2e207918e0ad02', '40a1da9bca1711eebf96207918e0ad02', '40a1da9cca1711ee9ce3207918e0ad02']]]></components_ids>
                <working_mode>Embedded</working_mode>
                <canvas_window_visible>False</canvas_window_visible>
                <canvas_window_geometry><![CDATA[None]]></canvas_window_geometry>
                <canvas_window_state><![CDATA[None]]></canvas_window_state>
                <canvas_window_in_fullscreen>False</canvas_window_in_fullscreen>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <use_background_image>True</use_background_image>
                <image><![CDATA[..\..\..\..\Program Files\Typhoon HIL Control Center 2024.1\examples\models\power systems\references\satisfaction-meter-md.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>72</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>40a1b3a7ca1711ee9dff207918e0ad02</id>
                <name><![CDATA[Current measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['40a1b3a8ca1711ee9012207918e0ad02', '40a1b3a9ca1711eebd39207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>480</x>
                    <y>376</y>
                    <width>256</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>40a1b3a8ca1711ee9012207918e0ad02</id>
                <name><![CDATA[Ia RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter718.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>104</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>40a1b3a9ca1711eebd39207918e0ad02</id>
                <name><![CDATA[Ia phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter718.Ia_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>120</x>
                    <y>8</y>
                    <width>120</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>40a1b3aaca1711eeb36e207918e0ad02</id>
                <name><![CDATA[Voltage measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['40a1b3abca1711ee9301207918e0ad02', '40a1b3acca1711ee816e207918e0ad02', '40a1b3adca1711eea7f7207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>400</x>
                    <y>480</y>
                    <width>440</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>40a1b3abca1711ee9301207918e0ad02</id>
                <name><![CDATA[Va RMS (pu)]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/Vnom_ph_to_gnd
]]></code>
                <signal_name><![CDATA[Bus675.V1_rms]]></signal_name>
                <unit><![CDATA[pu]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>144</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>40a1b3acca1711ee816e207918e0ad02</id>
                <name><![CDATA[Va phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(bus)]
]]></code>
                <signal_name><![CDATA[Meter718.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>288</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>40a1b3adca1711eea7f7207918e0ad02</id>
                <name><![CDATA[Va RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter718.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>40a1b3aeca1711ee9c2e207918e0ad02</id>
                <name><![CDATA[P load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed
global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


P= 3*VAn_rms*IA_rms*(np.cos(np.deg2rad(Va_ph-Ia_ph)))
displayValue = P/1e3]]></code>
                <signal_name><![CDATA[Meter717.Va_rms]]></signal_name>
                <unit><![CDATA[kW]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>432</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>150.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>40a1da9bca1711eebf96207918e0ad02</id>
                <name><![CDATA[Q load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

import numpy as np
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed

global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


Q= 3*VAn_rms*IA_rms*(np.sin(np.deg2rad(Va_ph-Ia_ph)))
displayValue = Q/1e3]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[kVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>608</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>40a1da9cca1711ee9ce3207918e0ad02</id>
                <name><![CDATA[Text display]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": "Bus {} Load".format(bus),

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>512</x>
                    <y>176</y>
                    <width>160</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>43e0db24ca1711ee8a74207918e0ad02</id>
                <name><![CDATA[BUS4]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['43e0db25ca1711ee8115207918e0ad02', '43e0db26ca1711ee8d57207918e0ad02', '43e0db27ca1711eea1aa207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "4"]]></initialization_code>
                <widget_settings>
                    <x>448</x>
                    <y>776</y>
                    <width>96</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>43e0db25ca1711ee8115207918e0ad02</id>
                <name><![CDATA[Meter4_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000


]]></code>
                <signal_name><![CDATA[Meter701.Va_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>72</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>43e0db26ca1711ee8d57207918e0ad02</id>
                <name><![CDATA[Meter4_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter701.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>96</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>43e0db27ca1711eea1aa207918e0ad02</id>
                <name><![CDATA[Sub-Panel]]></name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['43e0db28ca1711ee8dd9207918e0ad02', '43e0db2bca1711ee94db207918e0ad02', '43e10219ca1711eeb8cb207918e0ad02', '43e1021aca1711ee8c06207918e0ad02', '43e1021bca1711ee9744207918e0ad02']]]></components_ids>
                <working_mode>Embedded</working_mode>
                <canvas_window_visible>False</canvas_window_visible>
                <canvas_window_geometry><![CDATA[None]]></canvas_window_geometry>
                <canvas_window_state><![CDATA[None]]></canvas_window_state>
                <canvas_window_in_fullscreen>False</canvas_window_in_fullscreen>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <use_background_image>True</use_background_image>
                <image><![CDATA[..\..\..\..\Program Files\Typhoon HIL Control Center 2024.1\examples\models\power systems\references\satisfaction-meter-md.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>72</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>43e0db28ca1711ee8dd9207918e0ad02</id>
                <name><![CDATA[Current measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['43e0db29ca1711ee942f207918e0ad02', '43e0db2aca1711eea65b207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>480</x>
                    <y>376</y>
                    <width>256</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>43e0db29ca1711ee942f207918e0ad02</id>
                <name><![CDATA[Ia RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter718.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>104</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>43e0db2aca1711eea65b207918e0ad02</id>
                <name><![CDATA[Ia phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter718.Ia_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>120</x>
                    <y>8</y>
                    <width>120</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>43e0db2bca1711ee94db207918e0ad02</id>
                <name><![CDATA[Voltage measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['43e0db2cca1711eea05e207918e0ad02', '43e0db2dca1711eea44d207918e0ad02', '43e0db2eca1711eeb7af207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>400</x>
                    <y>480</y>
                    <width>440</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>43e0db2cca1711eea05e207918e0ad02</id>
                <name><![CDATA[Va RMS (pu)]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/Vnom_ph_to_gnd
]]></code>
                <signal_name><![CDATA[Bus675.V1_rms]]></signal_name>
                <unit><![CDATA[pu]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>144</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>43e0db2dca1711eea44d207918e0ad02</id>
                <name><![CDATA[Va phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(bus)]
]]></code>
                <signal_name><![CDATA[Meter718.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>288</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>43e0db2eca1711eeb7af207918e0ad02</id>
                <name><![CDATA[Va RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter718.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>43e10219ca1711eeb8cb207918e0ad02</id>
                <name><![CDATA[P load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed
global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


P= 3*VAn_rms*IA_rms*(np.cos(np.deg2rad(Va_ph-Ia_ph)))
displayValue = P/1e3]]></code>
                <signal_name><![CDATA[Meter717.Va_rms]]></signal_name>
                <unit><![CDATA[kW]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>432</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>150.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>43e1021aca1711ee8c06207918e0ad02</id>
                <name><![CDATA[Q load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

import numpy as np
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed

global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


Q= 3*VAn_rms*IA_rms*(np.sin(np.deg2rad(Va_ph-Ia_ph)))
displayValue = Q/1e3]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[kVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>608</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>43e1021bca1711ee9744207918e0ad02</id>
                <name><![CDATA[Text display]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": "Bus {} Load".format(bus),

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>512</x>
                    <y>176</y>
                    <width>160</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>4688b071ca1711eeb585207918e0ad02</id>
                <name><![CDATA[BUS5]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['4688b072ca1711eeaf5c207918e0ad02', '4688b073ca1711eea708207918e0ad02', '4688b074ca1711ee9588207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "5"]]></initialization_code>
                <widget_settings>
                    <x>560</x>
                    <y>776</y>
                    <width>96</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>4688b072ca1711eeaf5c207918e0ad02</id>
                <name><![CDATA[Meter5_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000


]]></code>
                <signal_name><![CDATA[Meter701.Va_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>72</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>4688b073ca1711eea708207918e0ad02</id>
                <name><![CDATA[Meter5_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter701.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>96</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>4688b074ca1711ee9588207918e0ad02</id>
                <name><![CDATA[Sub-Panel]]></name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['4688b075ca1711ee98cd207918e0ad02', '4688b078ca1711ee8375207918e0ad02', '4688b07cca1711ee8995207918e0ad02', '4688b07dca1711ee99c3207918e0ad02', '4688b07eca1711eeaac2207918e0ad02']]]></components_ids>
                <working_mode>Embedded</working_mode>
                <canvas_window_visible>False</canvas_window_visible>
                <canvas_window_geometry><![CDATA[None]]></canvas_window_geometry>
                <canvas_window_state><![CDATA[None]]></canvas_window_state>
                <canvas_window_in_fullscreen>False</canvas_window_in_fullscreen>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <use_background_image>True</use_background_image>
                <image><![CDATA[..\..\..\..\Program Files\Typhoon HIL Control Center 2024.1\examples\models\power systems\references\satisfaction-meter-md.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>72</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>4688b075ca1711ee98cd207918e0ad02</id>
                <name><![CDATA[Current measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['4688b076ca1711eebdbf207918e0ad02', '4688b077ca1711eea7ec207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>480</x>
                    <y>376</y>
                    <width>256</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>4688b076ca1711eebdbf207918e0ad02</id>
                <name><![CDATA[Ia RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter718.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>104</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>4688b077ca1711eea7ec207918e0ad02</id>
                <name><![CDATA[Ia phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter718.Ia_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>120</x>
                    <y>8</y>
                    <width>120</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>4688b078ca1711ee8375207918e0ad02</id>
                <name><![CDATA[Voltage measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['4688b079ca1711ee822f207918e0ad02', '4688b07aca1711ee8652207918e0ad02', '4688b07bca1711eeb345207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>400</x>
                    <y>480</y>
                    <width>440</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>4688b079ca1711ee822f207918e0ad02</id>
                <name><![CDATA[Va RMS (pu)]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/Vnom_ph_to_gnd
]]></code>
                <signal_name><![CDATA[Bus675.V1_rms]]></signal_name>
                <unit><![CDATA[pu]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>144</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>4688b07aca1711ee8652207918e0ad02</id>
                <name><![CDATA[Va phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(bus)]
]]></code>
                <signal_name><![CDATA[Meter718.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>288</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>4688b07bca1711eeb345207918e0ad02</id>
                <name><![CDATA[Va RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter718.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>4688b07cca1711ee8995207918e0ad02</id>
                <name><![CDATA[P load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed
global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


P= 3*VAn_rms*IA_rms*(np.cos(np.deg2rad(Va_ph-Ia_ph)))
displayValue = P/1e3]]></code>
                <signal_name><![CDATA[Meter717.Va_rms]]></signal_name>
                <unit><![CDATA[kW]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>432</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>150.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>4688b07dca1711ee99c3207918e0ad02</id>
                <name><![CDATA[Q load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

import numpy as np
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed

global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


Q= 3*VAn_rms*IA_rms*(np.sin(np.deg2rad(Va_ph-Ia_ph)))
displayValue = Q/1e3]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[kVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>608</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>4688b07eca1711eeaac2207918e0ad02</id>
                <name><![CDATA[Text display]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": "Bus {} Load".format(bus),

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>512</x>
                    <y>176</y>
                    <width>160</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>48244542ca1711eea612207918e0ad02</id>
                <name><![CDATA[BUS6]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['48244543ca1711ee835e207918e0ad02', '48244544ca1711ee8982207918e0ad02', '48246a83ca1711ee8bdc207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "6"]]></initialization_code>
                <widget_settings>
                    <x>672</x>
                    <y>776</y>
                    <width>96</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>48244543ca1711ee835e207918e0ad02</id>
                <name><![CDATA[Meter6_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000


]]></code>
                <signal_name><![CDATA[Meter701.Va_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>72</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>48244544ca1711ee8982207918e0ad02</id>
                <name><![CDATA[Meter6_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter701.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>96</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>48246a83ca1711ee8bdc207918e0ad02</id>
                <name><![CDATA[Sub-Panel]]></name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['48246a84ca1711ee8413207918e0ad02', '48246a87ca1711eeace3207918e0ad02', '48246a8bca1711eeb8a2207918e0ad02', '48246a8cca1711eebc46207918e0ad02', '48246a8dca1711ee8512207918e0ad02']]]></components_ids>
                <working_mode>Embedded</working_mode>
                <canvas_window_visible>False</canvas_window_visible>
                <canvas_window_geometry><![CDATA[None]]></canvas_window_geometry>
                <canvas_window_state><![CDATA[None]]></canvas_window_state>
                <canvas_window_in_fullscreen>False</canvas_window_in_fullscreen>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <use_background_image>True</use_background_image>
                <image><![CDATA[..\..\..\..\Program Files\Typhoon HIL Control Center 2024.1\examples\models\power systems\references\satisfaction-meter-md.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>72</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>48246a84ca1711ee8413207918e0ad02</id>
                <name><![CDATA[Current measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['48246a85ca1711ee84a5207918e0ad02', '48246a86ca1711eeb370207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>480</x>
                    <y>376</y>
                    <width>256</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>48246a85ca1711ee84a5207918e0ad02</id>
                <name><![CDATA[Ia RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter718.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>104</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>48246a86ca1711eeb370207918e0ad02</id>
                <name><![CDATA[Ia phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter718.Ia_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>120</x>
                    <y>8</y>
                    <width>120</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>48246a87ca1711eeace3207918e0ad02</id>
                <name><![CDATA[Voltage measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['48246a88ca1711eeabfd207918e0ad02', '48246a89ca1711eeb8d2207918e0ad02', '48246a8aca1711ee9ad0207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>400</x>
                    <y>480</y>
                    <width>440</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>48246a88ca1711eeabfd207918e0ad02</id>
                <name><![CDATA[Va RMS (pu)]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/Vnom_ph_to_gnd
]]></code>
                <signal_name><![CDATA[Bus675.V1_rms]]></signal_name>
                <unit><![CDATA[pu]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>144</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>48246a89ca1711eeb8d2207918e0ad02</id>
                <name><![CDATA[Va phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(bus)]
]]></code>
                <signal_name><![CDATA[Meter718.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>288</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>48246a8aca1711ee9ad0207918e0ad02</id>
                <name><![CDATA[Va RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter718.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>48246a8bca1711eeb8a2207918e0ad02</id>
                <name><![CDATA[P load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed
global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


P= 3*VAn_rms*IA_rms*(np.cos(np.deg2rad(Va_ph-Ia_ph)))
displayValue = P/1e3]]></code>
                <signal_name><![CDATA[Meter717.Va_rms]]></signal_name>
                <unit><![CDATA[kW]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>432</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>150.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>48246a8cca1711eebc46207918e0ad02</id>
                <name><![CDATA[Q load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

import numpy as np
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed

global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


Q= 3*VAn_rms*IA_rms*(np.sin(np.deg2rad(Va_ph-Ia_ph)))
displayValue = Q/1e3]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[kVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>608</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>48246a8dca1711ee8512207918e0ad02</id>
                <name><![CDATA[Text display]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": "Bus {} Load".format(bus),

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>512</x>
                    <y>176</y>
                    <width>160</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>4e5e3cd6ca1711ee998c207918e0ad02</id>
                <name><![CDATA[BUS7]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['4e5e3cd7ca1711eeb50b207918e0ad02', '4e5e3cd8ca1711eeabed207918e0ad02', '4e5e3cd9ca1711eeaac0207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "7"]]></initialization_code>
                <widget_settings>
                    <x>784</x>
                    <y>776</y>
                    <width>96</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>4e5e3cd7ca1711eeb50b207918e0ad02</id>
                <name><![CDATA[Meter7_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000


]]></code>
                <signal_name><![CDATA[Meter701.Va_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>72</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>4e5e3cd8ca1711eeabed207918e0ad02</id>
                <name><![CDATA[Meter7_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter701.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>96</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>4e5e3cd9ca1711eeaac0207918e0ad02</id>
                <name><![CDATA[Sub-Panel]]></name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['4e5e3cdaca1711ee821e207918e0ad02', '4e5e3cddca1711ee9982207918e0ad02', '4e5e3ce1ca1711ee825f207918e0ad02', '4e5e3ce2ca1711ee9b7e207918e0ad02', '4e5e3ce3ca1711eeafe5207918e0ad02']]]></components_ids>
                <working_mode>Embedded</working_mode>
                <canvas_window_visible>False</canvas_window_visible>
                <canvas_window_geometry><![CDATA[None]]></canvas_window_geometry>
                <canvas_window_state><![CDATA[None]]></canvas_window_state>
                <canvas_window_in_fullscreen>False</canvas_window_in_fullscreen>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <use_background_image>True</use_background_image>
                <image><![CDATA[..\..\..\..\Program Files\Typhoon HIL Control Center 2024.1\examples\models\power systems\references\satisfaction-meter-md.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>72</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>4e5e3cdaca1711ee821e207918e0ad02</id>
                <name><![CDATA[Current measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['4e5e3cdbca1711eea98a207918e0ad02', '4e5e3cdcca1711eeba7c207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>480</x>
                    <y>376</y>
                    <width>256</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>4e5e3cdbca1711eea98a207918e0ad02</id>
                <name><![CDATA[Ia RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter718.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>104</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>4e5e3cdcca1711eeba7c207918e0ad02</id>
                <name><![CDATA[Ia phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter718.Ia_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>120</x>
                    <y>8</y>
                    <width>120</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>4e5e3cddca1711ee9982207918e0ad02</id>
                <name><![CDATA[Voltage measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['4e5e3cdeca1711ee83a4207918e0ad02', '4e5e3cdfca1711eea514207918e0ad02', '4e5e3ce0ca1711eeb357207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>400</x>
                    <y>480</y>
                    <width>440</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>4e5e3cdeca1711ee83a4207918e0ad02</id>
                <name><![CDATA[Va RMS (pu)]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/Vnom_ph_to_gnd
]]></code>
                <signal_name><![CDATA[Bus675.V1_rms]]></signal_name>
                <unit><![CDATA[pu]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>144</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>4e5e3cdfca1711eea514207918e0ad02</id>
                <name><![CDATA[Va phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(bus)]
]]></code>
                <signal_name><![CDATA[Meter718.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>288</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>4e5e3ce0ca1711eeb357207918e0ad02</id>
                <name><![CDATA[Va RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter718.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>4e5e3ce1ca1711ee825f207918e0ad02</id>
                <name><![CDATA[P load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed
global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


P= 3*VAn_rms*IA_rms*(np.cos(np.deg2rad(Va_ph-Ia_ph)))
displayValue = P/1e3]]></code>
                <signal_name><![CDATA[Meter717.Va_rms]]></signal_name>
                <unit><![CDATA[kW]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>432</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>150.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>4e5e3ce2ca1711ee9b7e207918e0ad02</id>
                <name><![CDATA[Q load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

import numpy as np
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed

global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


Q= 3*VAn_rms*IA_rms*(np.sin(np.deg2rad(Va_ph-Ia_ph)))
displayValue = Q/1e3]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[kVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>608</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>4e5e3ce3ca1711eeafe5207918e0ad02</id>
                <name><![CDATA[Text display]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": "Bus {} Load".format(bus),

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>512</x>
                    <y>176</y>
                    <width>160</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>531706bcca1711eeb5a6207918e0ad02</id>
                <name><![CDATA[BUS15]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['531706bdca1711eebd4a207918e0ad02', '531706beca1711ee8774207918e0ad02', '531706bfca1711ee976f207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "15"]]></initialization_code>
                <widget_settings>
                    <x>112</x>
                    <y>968</y>
                    <width>96</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>531706bdca1711eebd4a207918e0ad02</id>
                <name><![CDATA[Meter15_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000


]]></code>
                <signal_name><![CDATA[Meter701.Va_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>72</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>531706beca1711ee8774207918e0ad02</id>
                <name><![CDATA[Meter15_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter701.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>96</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>531706bfca1711ee976f207918e0ad02</id>
                <name><![CDATA[Sub-Panel]]></name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['531706c0ca1711ee9a44207918e0ad02', '531706c3ca1711ee858c207918e0ad02', '531706c7ca1711ee9301207918e0ad02', '531706c8ca1711eea20b207918e0ad02', '531706c9ca1711ee952c207918e0ad02']]]></components_ids>
                <working_mode>Embedded</working_mode>
                <canvas_window_visible>False</canvas_window_visible>
                <canvas_window_geometry><![CDATA[None]]></canvas_window_geometry>
                <canvas_window_state><![CDATA[None]]></canvas_window_state>
                <canvas_window_in_fullscreen>False</canvas_window_in_fullscreen>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <use_background_image>True</use_background_image>
                <image><![CDATA[..\..\..\..\Program Files\Typhoon HIL Control Center 2024.1\examples\models\power systems\references\satisfaction-meter-md.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>72</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>531706c0ca1711ee9a44207918e0ad02</id>
                <name><![CDATA[Current measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['531706c1ca1711ee9712207918e0ad02', '531706c2ca1711ee8d17207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>480</x>
                    <y>376</y>
                    <width>256</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>531706c1ca1711ee9712207918e0ad02</id>
                <name><![CDATA[Ia RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter718.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>104</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>531706c2ca1711ee8d17207918e0ad02</id>
                <name><![CDATA[Ia phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter718.Ia_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>120</x>
                    <y>8</y>
                    <width>120</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>531706c3ca1711ee858c207918e0ad02</id>
                <name><![CDATA[Voltage measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['531706c4ca1711ee814c207918e0ad02', '531706c5ca1711ee95a1207918e0ad02', '531706c6ca1711eeb80c207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>400</x>
                    <y>480</y>
                    <width>440</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>531706c4ca1711ee814c207918e0ad02</id>
                <name><![CDATA[Va RMS (pu)]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/Vnom_ph_to_gnd
]]></code>
                <signal_name><![CDATA[Bus675.V1_rms]]></signal_name>
                <unit><![CDATA[pu]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>144</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>531706c5ca1711ee95a1207918e0ad02</id>
                <name><![CDATA[Va phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(bus)]
]]></code>
                <signal_name><![CDATA[Meter718.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>288</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>531706c6ca1711eeb80c207918e0ad02</id>
                <name><![CDATA[Va RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter718.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>531706c7ca1711ee9301207918e0ad02</id>
                <name><![CDATA[P load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed
global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


P= 3*VAn_rms*IA_rms*(np.cos(np.deg2rad(Va_ph-Ia_ph)))
displayValue = P/1e3]]></code>
                <signal_name><![CDATA[Meter717.Va_rms]]></signal_name>
                <unit><![CDATA[kW]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>432</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>150.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>531706c8ca1711eea20b207918e0ad02</id>
                <name><![CDATA[Q load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

import numpy as np
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed

global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


Q= 3*VAn_rms*IA_rms*(np.sin(np.deg2rad(Va_ph-Ia_ph)))
displayValue = Q/1e3]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[kVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>608</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>531706c9ca1711ee952c207918e0ad02</id>
                <name><![CDATA[Text display]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": "Bus {} Load".format(bus),

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>512</x>
                    <y>176</y>
                    <width>160</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>724028eeca1711eebc75207918e0ad02</id>
                <name><![CDATA[BUS16]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['724028efca1711eea3ac207918e0ad02', '72404decca1711eea83e207918e0ad02', '72404dedca1711ee9228207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "16"]]></initialization_code>
                <widget_settings>
                    <x>224</x>
                    <y>968</y>
                    <width>96</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>724028efca1711eea3ac207918e0ad02</id>
                <name><![CDATA[Meter16_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000


]]></code>
                <signal_name><![CDATA[Meter701.Va_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>72</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>72404decca1711eea83e207918e0ad02</id>
                <name><![CDATA[Meter16_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter701.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>96</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>72404dedca1711ee9228207918e0ad02</id>
                <name><![CDATA[Sub-Panel]]></name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['72404deeca1711eeb5e5207918e0ad02', '724074f0ca1711ee8b81207918e0ad02', '724074f4ca1711ee90aa207918e0ad02', '724074f5ca1711eea956207918e0ad02', '724074f6ca1711ee835d207918e0ad02']]]></components_ids>
                <working_mode>Embedded</working_mode>
                <canvas_window_visible>False</canvas_window_visible>
                <canvas_window_geometry><![CDATA[None]]></canvas_window_geometry>
                <canvas_window_state><![CDATA[None]]></canvas_window_state>
                <canvas_window_in_fullscreen>False</canvas_window_in_fullscreen>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <use_background_image>True</use_background_image>
                <image><![CDATA[..\..\..\..\Program Files\Typhoon HIL Control Center 2024.1\examples\models\power systems\references\satisfaction-meter-md.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>72</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>72404deeca1711eeb5e5207918e0ad02</id>
                <name><![CDATA[Current measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['72404defca1711ee88bf207918e0ad02', '724074efca1711ee944d207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>480</x>
                    <y>376</y>
                    <width>256</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>72404defca1711ee88bf207918e0ad02</id>
                <name><![CDATA[Ia RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter718.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>104</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>724074efca1711ee944d207918e0ad02</id>
                <name><![CDATA[Ia phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter718.Ia_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>120</x>
                    <y>8</y>
                    <width>120</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>724074f0ca1711ee8b81207918e0ad02</id>
                <name><![CDATA[Voltage measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['724074f1ca1711eebca5207918e0ad02', '724074f2ca1711ee801e207918e0ad02', '724074f3ca1711ee9503207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>400</x>
                    <y>480</y>
                    <width>440</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>724074f1ca1711eebca5207918e0ad02</id>
                <name><![CDATA[Va RMS (pu)]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/Vnom_ph_to_gnd
]]></code>
                <signal_name><![CDATA[Bus675.V1_rms]]></signal_name>
                <unit><![CDATA[pu]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>144</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>724074f2ca1711ee801e207918e0ad02</id>
                <name><![CDATA[Va phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(bus)]
]]></code>
                <signal_name><![CDATA[Meter718.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>288</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>724074f3ca1711ee9503207918e0ad02</id>
                <name><![CDATA[Va RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter718.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>724074f4ca1711ee90aa207918e0ad02</id>
                <name><![CDATA[P load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed
global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


P= 3*VAn_rms*IA_rms*(np.cos(np.deg2rad(Va_ph-Ia_ph)))
displayValue = P/1e3]]></code>
                <signal_name><![CDATA[Meter717.Va_rms]]></signal_name>
                <unit><![CDATA[kW]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>432</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>150.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>724074f5ca1711eea956207918e0ad02</id>
                <name><![CDATA[Q load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

import numpy as np
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed

global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


Q= 3*VAn_rms*IA_rms*(np.sin(np.deg2rad(Va_ph-Ia_ph)))
displayValue = Q/1e3]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[kVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>608</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>724074f6ca1711ee835d207918e0ad02</id>
                <name><![CDATA[Text display]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": "Bus {} Load".format(bus),

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>512</x>
                    <y>176</y>
                    <width>160</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>745ab236ca1711eeb4a9207918e0ad02</id>
                <name><![CDATA[BUS17]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['745ab237ca1711ee959d207918e0ad02', '745ab238ca1711ee9dea207918e0ad02', '745ab239ca1711eeb8fd207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "17"]]></initialization_code>
                <widget_settings>
                    <x>336</x>
                    <y>968</y>
                    <width>96</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>745ab237ca1711ee959d207918e0ad02</id>
                <name><![CDATA[Meter17_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000


]]></code>
                <signal_name><![CDATA[Meter701.Va_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>72</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>745ab238ca1711ee9dea207918e0ad02</id>
                <name><![CDATA[Meter17_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter701.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>96</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>745ab239ca1711eeb8fd207918e0ad02</id>
                <name><![CDATA[Sub-Panel]]></name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['745ab23aca1711ee8d1f207918e0ad02', '745ad92fca1711ee8e08207918e0ad02', '745ad933ca1711ee8645207918e0ad02', '745ad934ca1711eeba96207918e0ad02', '745ad935ca1711eea1d2207918e0ad02']]]></components_ids>
                <working_mode>Embedded</working_mode>
                <canvas_window_visible>False</canvas_window_visible>
                <canvas_window_geometry><![CDATA[None]]></canvas_window_geometry>
                <canvas_window_state><![CDATA[None]]></canvas_window_state>
                <canvas_window_in_fullscreen>False</canvas_window_in_fullscreen>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <use_background_image>True</use_background_image>
                <image><![CDATA[..\..\..\..\Program Files\Typhoon HIL Control Center 2024.1\examples\models\power systems\references\satisfaction-meter-md.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>72</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>745ab23aca1711ee8d1f207918e0ad02</id>
                <name><![CDATA[Current measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['745ad92dca1711ee9f95207918e0ad02', '745ad92eca1711eeb564207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>480</x>
                    <y>376</y>
                    <width>256</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>745ad92dca1711ee9f95207918e0ad02</id>
                <name><![CDATA[Ia RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter718.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>104</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>745ad92eca1711eeb564207918e0ad02</id>
                <name><![CDATA[Ia phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter718.Ia_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>120</x>
                    <y>8</y>
                    <width>120</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>745ad92fca1711ee8e08207918e0ad02</id>
                <name><![CDATA[Voltage measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['745ad930ca1711ee990c207918e0ad02', '745ad931ca1711eeb726207918e0ad02', '745ad932ca1711eebd5b207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>400</x>
                    <y>480</y>
                    <width>440</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>745ad930ca1711ee990c207918e0ad02</id>
                <name><![CDATA[Va RMS (pu)]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/Vnom_ph_to_gnd
]]></code>
                <signal_name><![CDATA[Bus675.V1_rms]]></signal_name>
                <unit><![CDATA[pu]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>144</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>745ad931ca1711eeb726207918e0ad02</id>
                <name><![CDATA[Va phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(bus)]
]]></code>
                <signal_name><![CDATA[Meter718.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>288</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>745ad932ca1711eebd5b207918e0ad02</id>
                <name><![CDATA[Va RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter718.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>745ad933ca1711ee8645207918e0ad02</id>
                <name><![CDATA[P load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed
global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


P= 3*VAn_rms*IA_rms*(np.cos(np.deg2rad(Va_ph-Ia_ph)))
displayValue = P/1e3]]></code>
                <signal_name><![CDATA[Meter717.Va_rms]]></signal_name>
                <unit><![CDATA[kW]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>432</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>150.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>745ad934ca1711eeba96207918e0ad02</id>
                <name><![CDATA[Q load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

import numpy as np
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed

global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


Q= 3*VAn_rms*IA_rms*(np.sin(np.deg2rad(Va_ph-Ia_ph)))
displayValue = Q/1e3]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[kVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>608</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>745ad935ca1711eea1d2207918e0ad02</id>
                <name><![CDATA[Text display]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": "Bus {} Load".format(bus),

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>512</x>
                    <y>176</y>
                    <width>160</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>7607ff0bca1711eea07a207918e0ad02</id>
                <name><![CDATA[BUS18]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['7607ff0cca1711eeb58e207918e0ad02', '7607ff0dca1711eeaeff207918e0ad02', '76082601ca1711eea049207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "18"]]></initialization_code>
                <widget_settings>
                    <x>448</x>
                    <y>968</y>
                    <width>96</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>7607ff0cca1711eeb58e207918e0ad02</id>
                <name><![CDATA[Meter18_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000


]]></code>
                <signal_name><![CDATA[Meter701.Va_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>72</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7607ff0dca1711eeaeff207918e0ad02</id>
                <name><![CDATA[Meter18_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter701.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>96</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>76082601ca1711eea049207918e0ad02</id>
                <name><![CDATA[Sub-Panel]]></name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['76082602ca1711ee9980207918e0ad02', '76082605ca1711ee8886207918e0ad02', '76082609ca1711eeb6b2207918e0ad02', '7608260aca1711ee92dd207918e0ad02', '7608260bca1711ee8033207918e0ad02']]]></components_ids>
                <working_mode>Embedded</working_mode>
                <canvas_window_visible>False</canvas_window_visible>
                <canvas_window_geometry><![CDATA[None]]></canvas_window_geometry>
                <canvas_window_state><![CDATA[None]]></canvas_window_state>
                <canvas_window_in_fullscreen>False</canvas_window_in_fullscreen>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <use_background_image>True</use_background_image>
                <image><![CDATA[..\..\..\..\Program Files\Typhoon HIL Control Center 2024.1\examples\models\power systems\references\satisfaction-meter-md.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>72</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>76082602ca1711ee9980207918e0ad02</id>
                <name><![CDATA[Current measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['76082603ca1711ee8de1207918e0ad02', '76082604ca1711eea36e207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>480</x>
                    <y>376</y>
                    <width>256</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>76082603ca1711ee8de1207918e0ad02</id>
                <name><![CDATA[Ia RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter718.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>104</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>76082604ca1711eea36e207918e0ad02</id>
                <name><![CDATA[Ia phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter718.Ia_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>120</x>
                    <y>8</y>
                    <width>120</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>76082605ca1711ee8886207918e0ad02</id>
                <name><![CDATA[Voltage measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['76082606ca1711eea18c207918e0ad02', '76082607ca1711eebf46207918e0ad02', '76082608ca1711ee978c207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>400</x>
                    <y>480</y>
                    <width>440</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>76082606ca1711eea18c207918e0ad02</id>
                <name><![CDATA[Va RMS (pu)]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/Vnom_ph_to_gnd
]]></code>
                <signal_name><![CDATA[Bus675.V1_rms]]></signal_name>
                <unit><![CDATA[pu]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>144</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>76082607ca1711eebf46207918e0ad02</id>
                <name><![CDATA[Va phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(bus)]
]]></code>
                <signal_name><![CDATA[Meter718.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>288</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>76082608ca1711ee978c207918e0ad02</id>
                <name><![CDATA[Va RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter718.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>76082609ca1711eeb6b2207918e0ad02</id>
                <name><![CDATA[P load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed
global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


P= 3*VAn_rms*IA_rms*(np.cos(np.deg2rad(Va_ph-Ia_ph)))
displayValue = P/1e3]]></code>
                <signal_name><![CDATA[Meter717.Va_rms]]></signal_name>
                <unit><![CDATA[kW]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>432</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>150.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7608260aca1711ee92dd207918e0ad02</id>
                <name><![CDATA[Q load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

import numpy as np
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed

global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


Q= 3*VAn_rms*IA_rms*(np.sin(np.deg2rad(Va_ph-Ia_ph)))
displayValue = Q/1e3]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[kVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>608</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7608260bca1711ee8033207918e0ad02</id>
                <name><![CDATA[Text display]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": "Bus {} Load".format(bus),

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>512</x>
                    <y>176</y>
                    <width>160</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>795331e9ca1711ee896b207918e0ad02</id>
                <name><![CDATA[BUS19]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['795331eaca1711eeb6a0207918e0ad02', '795359ccca1711ee8e73207918e0ad02', '795359cdca1711ee8b1e207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "19"]]></initialization_code>
                <widget_settings>
                    <x>560</x>
                    <y>968</y>
                    <width>96</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>795331eaca1711eeb6a0207918e0ad02</id>
                <name><![CDATA[Meter19_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000


]]></code>
                <signal_name><![CDATA[Meter701.Va_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>72</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>795359ccca1711ee8e73207918e0ad02</id>
                <name><![CDATA[Meter19_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter701.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>96</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>795359cdca1711ee8b1e207918e0ad02</id>
                <name><![CDATA[Sub-Panel]]></name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['795359ceca1711eeb1d4207918e0ad02', '795359d1ca1711ee92cf207918e0ad02', '795359d5ca1711eeac60207918e0ad02', '795359d6ca1711eeb3a0207918e0ad02', '795359d7ca1711eeaf0b207918e0ad02']]]></components_ids>
                <working_mode>Embedded</working_mode>
                <canvas_window_visible>False</canvas_window_visible>
                <canvas_window_geometry><![CDATA[None]]></canvas_window_geometry>
                <canvas_window_state><![CDATA[None]]></canvas_window_state>
                <canvas_window_in_fullscreen>False</canvas_window_in_fullscreen>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <use_background_image>True</use_background_image>
                <image><![CDATA[..\..\..\..\Program Files\Typhoon HIL Control Center 2024.1\examples\models\power systems\references\satisfaction-meter-md.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>72</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>795359ceca1711eeb1d4207918e0ad02</id>
                <name><![CDATA[Current measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['795359cfca1711ee94e2207918e0ad02', '795359d0ca1711eeac69207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>480</x>
                    <y>376</y>
                    <width>256</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>795359cfca1711ee94e2207918e0ad02</id>
                <name><![CDATA[Ia RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter718.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>104</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>795359d0ca1711eeac69207918e0ad02</id>
                <name><![CDATA[Ia phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter718.Ia_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>120</x>
                    <y>8</y>
                    <width>120</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>795359d1ca1711ee92cf207918e0ad02</id>
                <name><![CDATA[Voltage measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['795359d2ca1711eea4b4207918e0ad02', '795359d3ca1711ee9427207918e0ad02', '795359d4ca1711ee8264207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>400</x>
                    <y>480</y>
                    <width>440</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>795359d2ca1711eea4b4207918e0ad02</id>
                <name><![CDATA[Va RMS (pu)]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/Vnom_ph_to_gnd
]]></code>
                <signal_name><![CDATA[Bus675.V1_rms]]></signal_name>
                <unit><![CDATA[pu]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>144</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>795359d3ca1711ee9427207918e0ad02</id>
                <name><![CDATA[Va phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(bus)]
]]></code>
                <signal_name><![CDATA[Meter718.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>288</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>795359d4ca1711ee8264207918e0ad02</id>
                <name><![CDATA[Va RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter718.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>795359d5ca1711eeac60207918e0ad02</id>
                <name><![CDATA[P load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed
global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


P= 3*VAn_rms*IA_rms*(np.cos(np.deg2rad(Va_ph-Ia_ph)))
displayValue = P/1e3]]></code>
                <signal_name><![CDATA[Meter717.Va_rms]]></signal_name>
                <unit><![CDATA[kW]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>432</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>150.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>795359d6ca1711eeb3a0207918e0ad02</id>
                <name><![CDATA[Q load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

import numpy as np
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed

global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


Q= 3*VAn_rms*IA_rms*(np.sin(np.deg2rad(Va_ph-Ia_ph)))
displayValue = Q/1e3]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[kVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>608</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>795359d7ca1711eeaf0b207918e0ad02</id>
                <name><![CDATA[Text display]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": "Bus {} Load".format(bus),

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>512</x>
                    <y>176</y>
                    <width>160</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>7c092292ca1711ee8588207918e0ad02</id>
                <name><![CDATA[BUS20]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['7c092293ca1711eea169207918e0ad02', '7c092294ca1711ee833a207918e0ad02', '7c092295ca1711eeaa67207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "20"]]></initialization_code>
                <widget_settings>
                    <x>672</x>
                    <y>968</y>
                    <width>96</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>7c092293ca1711eea169207918e0ad02</id>
                <name><![CDATA[Meter20_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000


]]></code>
                <signal_name><![CDATA[Meter701.Va_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>72</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7c092294ca1711ee833a207918e0ad02</id>
                <name><![CDATA[Meter20_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter701.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>96</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7c092295ca1711eeaa67207918e0ad02</id>
                <name><![CDATA[Sub-Panel]]></name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['7c092296ca1711ee93f8207918e0ad02', '7c092299ca1711eea332207918e0ad02', '7c09229dca1711ee9543207918e0ad02', '7c09229eca1711ee8d0f207918e0ad02', '7c09229fca1711eeb07d207918e0ad02']]]></components_ids>
                <working_mode>Embedded</working_mode>
                <canvas_window_visible>False</canvas_window_visible>
                <canvas_window_geometry><![CDATA[None]]></canvas_window_geometry>
                <canvas_window_state><![CDATA[None]]></canvas_window_state>
                <canvas_window_in_fullscreen>False</canvas_window_in_fullscreen>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <use_background_image>True</use_background_image>
                <image><![CDATA[..\..\..\..\Program Files\Typhoon HIL Control Center 2024.1\examples\models\power systems\references\satisfaction-meter-md.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>72</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>7c092296ca1711ee93f8207918e0ad02</id>
                <name><![CDATA[Current measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['7c092297ca1711eeb06c207918e0ad02', '7c092298ca1711ee99d2207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>480</x>
                    <y>376</y>
                    <width>256</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>7c092297ca1711eeb06c207918e0ad02</id>
                <name><![CDATA[Ia RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter718.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>104</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7c092298ca1711ee99d2207918e0ad02</id>
                <name><![CDATA[Ia phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter718.Ia_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>120</x>
                    <y>8</y>
                    <width>120</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7c092299ca1711eea332207918e0ad02</id>
                <name><![CDATA[Voltage measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['7c09229aca1711ee9b82207918e0ad02', '7c09229bca1711eeb9a2207918e0ad02', '7c09229cca1711ee8ae3207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>400</x>
                    <y>480</y>
                    <width>440</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>7c09229aca1711ee9b82207918e0ad02</id>
                <name><![CDATA[Va RMS (pu)]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/Vnom_ph_to_gnd
]]></code>
                <signal_name><![CDATA[Bus675.V1_rms]]></signal_name>
                <unit><![CDATA[pu]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>144</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7c09229bca1711eeb9a2207918e0ad02</id>
                <name><![CDATA[Va phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(bus)]
]]></code>
                <signal_name><![CDATA[Meter718.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>288</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7c09229cca1711ee8ae3207918e0ad02</id>
                <name><![CDATA[Va RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter718.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7c09229dca1711ee9543207918e0ad02</id>
                <name><![CDATA[P load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed
global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


P= 3*VAn_rms*IA_rms*(np.cos(np.deg2rad(Va_ph-Ia_ph)))
displayValue = P/1e3]]></code>
                <signal_name><![CDATA[Meter717.Va_rms]]></signal_name>
                <unit><![CDATA[kW]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>432</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>150.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7c09229eca1711ee8d0f207918e0ad02</id>
                <name><![CDATA[Q load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

import numpy as np
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed

global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


Q= 3*VAn_rms*IA_rms*(np.sin(np.deg2rad(Va_ph-Ia_ph)))
displayValue = Q/1e3]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[kVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>608</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7c09229fca1711eeb07d207918e0ad02</id>
                <name><![CDATA[Text display]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": "Bus {} Load".format(bus),

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>512</x>
                    <y>176</y>
                    <width>160</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>7e078b58ca1711ee9083207918e0ad02</id>
                <name><![CDATA[BUS21]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['7e078b59ca1711ee820c207918e0ad02', '7e078b5aca1711ee91fb207918e0ad02', '7e078b5bca1711ee8052207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "21"]]></initialization_code>
                <widget_settings>
                    <x>784</x>
                    <y>968</y>
                    <width>96</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>7e078b59ca1711ee820c207918e0ad02</id>
                <name><![CDATA[Meter21_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000


]]></code>
                <signal_name><![CDATA[Meter701.Va_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>72</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7e078b5aca1711ee91fb207918e0ad02</id>
                <name><![CDATA[Meter21_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter701.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>96</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7e078b5bca1711ee8052207918e0ad02</id>
                <name><![CDATA[Sub-Panel]]></name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['7e078b5cca1711eeb7c2207918e0ad02', '7e078b5fca1711eebb60207918e0ad02', '7e078b63ca1711eebb54207918e0ad02', '7e078b64ca1711eea513207918e0ad02', '7e078b65ca1711eeb0b4207918e0ad02']]]></components_ids>
                <working_mode>Embedded</working_mode>
                <canvas_window_visible>False</canvas_window_visible>
                <canvas_window_geometry><![CDATA[None]]></canvas_window_geometry>
                <canvas_window_state><![CDATA[None]]></canvas_window_state>
                <canvas_window_in_fullscreen>False</canvas_window_in_fullscreen>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <use_background_image>True</use_background_image>
                <image><![CDATA[..\..\..\..\Program Files\Typhoon HIL Control Center 2024.1\examples\models\power systems\references\satisfaction-meter-md.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>72</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>7e078b5cca1711eeb7c2207918e0ad02</id>
                <name><![CDATA[Current measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['7e078b5dca1711eeb6a2207918e0ad02', '7e078b5eca1711eebd91207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>480</x>
                    <y>376</y>
                    <width>256</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>7e078b5dca1711eeb6a2207918e0ad02</id>
                <name><![CDATA[Ia RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter718.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>104</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7e078b5eca1711eebd91207918e0ad02</id>
                <name><![CDATA[Ia phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter718.Ia_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>120</x>
                    <y>8</y>
                    <width>120</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7e078b5fca1711eebb60207918e0ad02</id>
                <name><![CDATA[Voltage measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['7e078b60ca1711eeb2ae207918e0ad02', '7e078b61ca1711eeae41207918e0ad02', '7e078b62ca1711eeaee9207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>400</x>
                    <y>480</y>
                    <width>440</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>7e078b60ca1711eeb2ae207918e0ad02</id>
                <name><![CDATA[Va RMS (pu)]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/Vnom_ph_to_gnd
]]></code>
                <signal_name><![CDATA[Bus675.V1_rms]]></signal_name>
                <unit><![CDATA[pu]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>144</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7e078b61ca1711eeae41207918e0ad02</id>
                <name><![CDATA[Va phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(bus)]
]]></code>
                <signal_name><![CDATA[Meter718.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>288</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7e078b62ca1711eeaee9207918e0ad02</id>
                <name><![CDATA[Va RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter718.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7e078b63ca1711eebb54207918e0ad02</id>
                <name><![CDATA[P load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed
global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


P= 3*VAn_rms*IA_rms*(np.cos(np.deg2rad(Va_ph-Ia_ph)))
displayValue = P/1e3]]></code>
                <signal_name><![CDATA[Meter717.Va_rms]]></signal_name>
                <unit><![CDATA[kW]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>432</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>150.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7e078b64ca1711eea513207918e0ad02</id>
                <name><![CDATA[Q load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

import numpy as np
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed

global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


Q= 3*VAn_rms*IA_rms*(np.sin(np.deg2rad(Va_ph-Ia_ph)))
displayValue = Q/1e3]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[kVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>608</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7e078b65ca1711eeb0b4207918e0ad02</id>
                <name><![CDATA[Text display]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": "Bus {} Load".format(bus),

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>512</x>
                    <y>176</y>
                    <width>160</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>9a0bca0fca1711ee82ba207918e0ad02</id>
                <name><![CDATA[Signal data logger]]></name>
                <type>SignalDataLogger</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <expression_code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
import datetime
# mandatory variable used for storing values that will be logged into the data file
# specify logging data ("names" and "values" parts are mandatory)
global Idata_dict

# DN2 Time
utc_time = datetime.datetime.now(datetime.timezone.utc)
utc_Year2 = utc_time.strftime("%Y")
utc_Month2 = utc_time.strftime("%m")
utc_Day2 = utc_time.strftime("%d")
utc_Hour2 = utc_time.strftime("%H")
utc_Minute2 = utc_time.strftime("%M")
utc_Second2 = utc_time.strftime("%S.%f")

utc_Year_float2 = float(utc_Year2)
utc_Month_float2 = float(utc_Month2)
utc_Day_float2 = float(utc_Day2)
utc_Hour_float2 = float(utc_Hour2)
utc_Minute_float2 = float(utc_Minute2)
utc_Second_float2 = float(utc_Second2)

utc_Year_widget = panel.get_widget_by_fqn("utc_Year")
panel.set_property_value(utc_Year_widget, api_const.PROP_WIDGET_VALUE, utc_Year_float2)
hil.model_write('utc_Year', utc_Year_float2)

utc_Month_widget = panel.get_widget_by_fqn("utc_Month")
panel.set_property_value(utc_Month_widget, api_const.PROP_WIDGET_VALUE, utc_Month_float2)
hil.model_write('utc_Month', utc_Month_float2)

utc_Day_widget = panel.get_widget_by_fqn("utc_Day")
panel.set_property_value(utc_Day_widget, api_const.PROP_WIDGET_VALUE, utc_Day_float2)
hil.model_write('utc_Day', utc_Day_float2)

utc_Hour_widget = panel.get_widget_by_fqn("utc_Hour")
panel.set_property_value(utc_Hour_widget, api_const.PROP_WIDGET_VALUE, utc_Hour_float2)
hil.model_write('utc_Hour', utc_Hour_float2)

utc_Minute_widget = panel.get_widget_by_fqn("utc_Minute")
panel.set_property_value(utc_Minute_widget, api_const.PROP_WIDGET_VALUE, utc_Minute_float2)
hil.model_write('utc_Minute', utc_Minute_float2)

utc_Second_widget = panel.get_widget_by_fqn("utc_Second")
panel.set_property_value(utc_Second_widget, api_const.PROP_WIDGET_VALUE, utc_Second_float2)
hil.model_write('utc_Second', utc_Second_float2)

# DN2 Data
data_name = list(Idata_dict.keys())
data_value = list(Idata_dict.values())

Relay2_Ia = hil.read_analog_signal(name = "Relay2_Ia")
Relay2_Ib = hil.read_analog_signal(name = "Relay2_Ib")
Relay2_Ic = hil.read_analog_signal(name = "Relay2_Ic")
Relay4_Ia = hil.read_analog_signal(name = "Relay4_Ia")
Relay4_Ib = hil.read_analog_signal(name = "Relay4_Ib")
Relay4_Ic = hil.read_analog_signal(name = "Relay4_Ic")

# DN1 Time
utc_Year1 = hil.read_analog_signal(name = "utc_Year1")
utc_Month1 = hil.read_analog_signal(name = "utc_Month1")
utc_Day1 = hil.read_analog_signal(name = "utc_Day1")
utc_Hour1 = hil.read_analog_signal(name = "utc_Hour1")
utc_Minute1 = hil.read_analog_signal(name = "utc_Minute1")
utc_Second1 = hil.read_analog_signal(name = "utc_Second1")

# DN1 Data
Meter14_IaM = hil.read_analog_signal(name = "Meter14_IaM")
Meter14_IaP = hil.read_analog_signal(name = "Meter14_IaP")
Meter13_IaM = hil.read_analog_signal(name = "Meter13_IaM")
Meter13_IaP = hil.read_analog_signal(name = "Meter13_IaP")
Meter12_IaM = hil.read_analog_signal(name = "Meter12_IaM")
Meter12_IaP = hil.read_analog_signal(name = "Meter12_IaP")
Meter11_IaM = hil.read_analog_signal(name = "Meter11_IaM")
Meter11_IaP = hil.read_analog_signal(name = "Meter11_IaP")
Meter10_IaM = hil.read_analog_signal(name = "Meter10_IaM")
Meter10_IaP = hil.read_analog_signal(name = "Meter10_IaP")
Meter9_IaM = hil.read_analog_signal(name = "Meter9_IaM")
Meter9_IaP = hil.read_analog_signal(name = "Meter9_IaP")
Meter8_IaM = hil.read_analog_signal(name = "Meter8_IaM")
Meter8_IaP = hil.read_analog_signal(name = "Meter8_IaP")

data = {
    # signals/data names: ["Signal 1 name","Signal 2 name","Signal 3 name"]
    "names": ["Year2", "Month2", "Day2", "Hour2", "Minute2", "Second2",
    data_name[0], data_name[1], data_name[2], data_name[3], data_name[4], data_name[5],
    data_name[6], data_name[7], data_name[8], data_name[9], data_name[10], data_name[11],
    data_name[12], data_name[13], data_name[14], data_name[15], data_name[16], data_name[17],
    data_name[18], data_name[19], data_name[20], data_name[21], data_name[22], data_name[23],
    data_name[24], data_name[25], data_name[26], data_name[27],
    "Relay2.Ia", "Relay2.Ib", "Relay2.Ic", "Relay4.Ia", "Relay4.Ib", "Relay4.Ic",
    "Year1", "Month1", "Day1", "Hour1", "Minute1", "Second1",
    "Meter14.IA_rms", "Meter14.Ia_ph", "Meter13.IA_rms", "Meter13.Ia_ph", "Meter12.IA_rms", "Meter12.Ia_ph",
    "Meter11.IA_rms", "Meter11.Ia_ph", "Meter10.IA_rms", "Meter10.Ia_ph", "Meter9.IA_rms", "Meter9.Ia_ph",
    "Meter8.IA_rms", "Meter8.Ia_ph"],

    # signals/data values: [sigVal1,sigVal2,sigVal3]
    "values": [utc_Year_float2, utc_Month_float2, utc_Day_float2,
    utc_Hour_float2, utc_Minute_float2, utc_Second_float2,
    data_value[0], data_value[1], data_value[2], data_value[3], data_value[4], data_value[5],
    data_value[6], data_value[7], data_value[8], data_value[9], data_value[10], data_value[11],
    data_value[12], data_value[13], data_value[14], data_value[15], data_value[16], data_value[17],
    data_value[18], data_value[19], data_value[20], data_value[21], data_value[22], data_value[23],
    data_value[24], data_value[25], data_value[26], data_value[27],
    Relay2_Ia, Relay2_Ib, Relay2_Ic, Relay4_Ia, Relay4_Ib, Relay4_Ic,
    utc_Year1, utc_Month1, utc_Day1, utc_Hour1, utc_Minute1, utc_Second1,
    Meter14_IaM, Meter14_IaP, Meter13_IaM, Meter13_IaP, Meter12_IaM, Meter12_IaP,
    Meter11_IaM, Meter11_IaP, Meter10_IaM, Meter10_IaP, Meter9_IaM, Meter9_IaP, Meter8_IaM, Meter8_IaP],
    }]]></expression_code>
                <analog_signals><![CDATA[[]]]></analog_signals>
                <digital_signals><![CDATA[[]]]></digital_signals>
                <update_rate>250</update_rate>
                <use_slower_update_rate>False</use_slower_update_rate>
                <slower_update_rate>2</slower_update_rate>
                <widget_settings>
                    <x>1664</x>
                    <y>120</y>
                    <width>120</width>
                    <height>120</height>
                    <appearance><![CDATA[Raised]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <data_file_settings>
                    <data_file_dir><![CDATA[ ]]></data_file_dir>
                    <data_file_name><![CDATA[DN2_test]]></data_file_name>
                    <use_panel_file_dir>True</use_panel_file_dir>
                    <data_file_format><![CDATA[csv]]></data_file_format>
                    <use_file_name_suffix><![CDATA[True]]></use_file_name_suffix>
                    <start_logging_on_sim_start><![CDATA[False]]></start_logging_on_sim_start>
                </data_file_settings>
            </component_data>
        <component_data>
                <id>4e947fabcc3411ee9aeb207918e0ad02</id>
                <name><![CDATA[Image]]></name>
                <type>Image</type>
                <description><![CDATA[]]></description>
                <image><![CDATA[ThreeFeeder.jpg]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <widget_settings>
                    <x>0</x>
                    <y>112</y>
                    <width>1200</width>
                    <height>800</height>
                    <background_color><![CDATA[#f0f0f0]]></background_color>
                    <background_type><![CDATA[Transparent]]></background_type>
                    <is_background>True</is_background>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>58ad8a22cc5311eebe52207918e0ad02</id>
                <name><![CDATA[BUS14]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['58ad8a23cc5311eea28f207918e0ad02', '58ad8a24cc5311ee801c207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "14"]]></initialization_code>
                <widget_settings>
                    <x>224</x>
                    <y>64</y>
                    <width>96</width>
                    <height>88</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>58ad8a23cc5311eea28f207918e0ad02</id>
                <name><![CDATA[Meter14_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]


]]></code>
                <signal_name><![CDATA[Meter14_IaM]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>58ad8a24cc5311ee801c207918e0ad02</id>
                <name><![CDATA[Meter14_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter14_IaP]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>24</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>bf42946fcc5311ee882b207918e0ad02</id>
                <name><![CDATA[BUS13]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['bf429470cc5311eea884207918e0ad02', 'bf429471cc5311eeb91e207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "13"]]></initialization_code>
                <widget_settings>
                    <x>320</x>
                    <y>64</y>
                    <width>96</width>
                    <height>88</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>bf429470cc5311eea884207918e0ad02</id>
                <name><![CDATA[Meter13_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]


]]></code>
                <signal_name><![CDATA[Meter13_IaM]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>bf429471cc5311eeb91e207918e0ad02</id>
                <name><![CDATA[Meter13_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter13_IaP]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>24</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>abf66d8ecc5411ee97c7207918e0ad02</id>
                <name><![CDATA[BUS12]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['abf66d8fcc5411ee9b0a207918e0ad02', 'abf66d90cc5411ee9c73207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "12"]]></initialization_code>
                <widget_settings>
                    <x>416</x>
                    <y>64</y>
                    <width>96</width>
                    <height>88</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>abf66d8fcc5411ee9b0a207918e0ad02</id>
                <name><![CDATA[Meter12_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]


]]></code>
                <signal_name><![CDATA[Meter12_IaM]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>abf66d90cc5411ee9c73207918e0ad02</id>
                <name><![CDATA[Meter12_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter12_IaP]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>24</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>dfbdb2c8cc5411ee8791207918e0ad02</id>
                <name><![CDATA[BUS11]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['dfbdd9bbcc5411ee8251207918e0ad02', 'dfbdd9bccc5411eea57e207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "11"]]></initialization_code>
                <widget_settings>
                    <x>512</x>
                    <y>64</y>
                    <width>96</width>
                    <height>88</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>dfbdd9bbcc5411ee8251207918e0ad02</id>
                <name><![CDATA[Meter11_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]


]]></code>
                <signal_name><![CDATA[Meter11_IaM]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>dfbdd9bccc5411eea57e207918e0ad02</id>
                <name><![CDATA[Meter11_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter11_IaP]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>24</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>fc355907cc5411ee8c2a207918e0ad02</id>
                <name><![CDATA[BUS10]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['fc355908cc5411eeaec1207918e0ad02', 'fc355909cc5411ee82ba207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "10"]]></initialization_code>
                <widget_settings>
                    <x>608</x>
                    <y>64</y>
                    <width>96</width>
                    <height>88</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>fc355908cc5411eeaec1207918e0ad02</id>
                <name><![CDATA[Meter10_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]


]]></code>
                <signal_name><![CDATA[Meter10_IaM]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>fc355909cc5411ee82ba207918e0ad02</id>
                <name><![CDATA[Meter10_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter10_IaP]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>24</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>0f1c2871cc5511ee95ba207918e0ad02</id>
                <name><![CDATA[BUS9]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['0f1c2872cc5511eea73c207918e0ad02', '0f1c2873cc5511ee8b5b207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "9"]]></initialization_code>
                <widget_settings>
                    <x>704</x>
                    <y>64</y>
                    <width>96</width>
                    <height>88</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>0f1c2872cc5511eea73c207918e0ad02</id>
                <name><![CDATA[Meter9_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]


]]></code>
                <signal_name><![CDATA[Meter9_IaM]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>0f1c2873cc5511ee8b5b207918e0ad02</id>
                <name><![CDATA[Meter9_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter9_IaP]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>24</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>2608706ecc5511eeaa06207918e0ad02</id>
                <name><![CDATA[BUS8]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['2608706fcc5511eead68207918e0ad02', '26087070cc5511eebcd3207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "8"]]></initialization_code>
                <widget_settings>
                    <x>800</x>
                    <y>64</y>
                    <width>96</width>
                    <height>88</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>2608706fcc5511eead68207918e0ad02</id>
                <name><![CDATA[Meter8_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]


]]></code>
                <signal_name><![CDATA[Meter8_IaM]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>26087070cc5511eebcd3207918e0ad02</id>
                <name><![CDATA[Meter8_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter8_IaP]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>24</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>89427075d10011eea1ae207918e0ad02</id>
                <name><![CDATA[re2]]></name>
                <type>ComboBoxMacro</type>
                <description><![CDATA[]]></description>
                <on_use_code active="True"><![CDATA[# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
# NOTE: entered value is available through variable 'inputValue'

if inputValue == 'ON':
    # breaker colse
    hil.set_scada_input_value('relay state 2', 1)
    pass
elif inputValue == 'OFF':
    # break open
    hil.set_scada_input_value('relay state 2', 0)
    pass

]]></on_use_code>
                <on_start_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change the widget value by setting this variable.
# NOTE: If you do not specify a 'widgetValue' variable or assign 'None' to it,
# the widget value will not be changed.
widgetValue = None
]]></on_timer_code>
                <on_start_code_source><![CDATA[Custom code]]></on_start_code_source>
                <inputValue><![CDATA[OFF]]></inputValue>
                <availableValues><![CDATA[['ON', 'OFF']]]></availableValues>
                <unit><![CDATA[]]></unit>
                <widget_settings>
                    <x>928</x>
                    <y>1040</y>
                    <width>136</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>a59d277ad10011ee829f207918e0ad02</id>
                <name><![CDATA[re4]]></name>
                <type>ComboBoxMacro</type>
                <description><![CDATA[]]></description>
                <on_use_code active="True"><![CDATA[# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
# NOTE: entered value is available through variable 'inputValue'

if inputValue == 'ON':
    # breaker colse
    hil.set_scada_input_value('relay state 4', 1)
    pass
elif inputValue == 'OFF':
    # breaker open
    hil.set_scada_input_value('relay state 4', 0)
    pass

]]></on_use_code>
                <on_start_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change the widget value by setting this variable.
# NOTE: If you do not specify a 'widgetValue' variable or assign 'None' to it,
# the widget value will not be changed.
widgetValue = None
]]></on_timer_code>
                <on_start_code_source><![CDATA[Custom code]]></on_start_code_source>
                <inputValue><![CDATA[OFF]]></inputValue>
                <availableValues><![CDATA[['ON', 'OFF']]]></availableValues>
                <unit><![CDATA[]]></unit>
                <widget_settings>
                    <x>928</x>
                    <y>1080</y>
                    <width>136</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>9cf68c6ed6ad11ee9131207918e0ad02</id>
                <name><![CDATA[Fault Type]]></name>
                <type>ComboBoxMacro</type>
                <description><![CDATA[]]></description>
                <on_use_code active="True"><![CDATA[# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
# NOTE: entered value is available through variable 'inputValue'

if inputValue == 'No Fault':
    hil.set_scada_input_value('input1', 0)
    pass
elif inputValue == 'A-N':
    hil.set_scada_input_value('input1', 5)
    pass
elif inputValue == 'B-N':
    hil.set_scada_input_value('input1', 2)
    pass
elif inputValue == 'C-N':
    hil.set_scada_input_value('input1', 1)
    pass
elif inputValue == 'A-B':
    hil.set_scada_input_value('input1', 8)
    pass
elif inputValue == 'A-C':
    hil.set_scada_input_value('input1', 6)
    pass
elif inputValue == 'B-C':
    hil.set_scada_input_value('input1', 3)
    pass
elif inputValue == 'A-B-N':
    hil.set_scada_input_value('input1', 9)
    pass
elif inputValue == 'A-C-N':
    hil.set_scada_input_value('input1', 7)
    pass
elif inputValue == 'B-C-N':
    hil.set_scada_input_value('input1', 4)
    pass
elif inputValue == 'A-B-C':
    hil.set_scada_input_value('input1', 10)
    pass
elif inputValue == 'A-B-C-N':
    hil.set_scada_input_value('input1', 11)
    pass]]></on_use_code>
                <on_start_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change the widget value by setting this variable.
# NOTE: If you do not specify a 'widgetValue' variable or assign 'None' to it,
# the widget value will not be changed.
widgetValue = None
]]></on_timer_code>
                <on_start_code_source><![CDATA[Custom code]]></on_start_code_source>
                <inputValue><![CDATA[No Fault]]></inputValue>
                <availableValues><![CDATA[['No Fault', 'A-N', 'B-N', 'C-N', 'A-B', 'A-C', 'B-C', 'A-B-N', 'A-C-N', 'B-C-N', 'A-B-C-N']]]></availableValues>
                <unit><![CDATA[]]></unit>
                <widget_settings>
                    <x>976</x>
                    <y>896</y>
                    <width>136</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>498a9c17db3911ee96b8207918e0ad02</id>
                <name><![CDATA[MV2]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['7200558bdb3911ee8dde207918e0ad02', '7770c9a5db3911ee92f4207918e0ad02', '7efbcf14db3911eea490207918e0ad02', '7efbcf15db3911eeb4b0207918e0ad02', '7efbcf16db3911ee9785207918e0ad02', '7efbcf17db3911eea677207918e0ad02', '7efbcf18db3911ee963d207918e0ad02', '7efbcf19db3911ee9db7207918e0ad02', '7efbf721db3911eeb420207918e0ad02', '7efbf722db3911ee994f207918e0ad02', '7efc1e16db3911eeb801207918e0ad02', '7efc1e17db3911eeabd7207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be available for use in
# all Macro, Expression and handlers codes of components owned by this widget.
# This code is always executed prior simulation start. In case this is a
# Library Widget, this code is also executed on drag and drop, Panel load
# and widget paste.
#
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

bus = "22"]]></initialization_code>
                <widget_settings>
                    <x>1200</x>
                    <y>632</y>
                    <width>328</width>
                    <height>400</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>7200558bdb3911ee8dde207918e0ad02</id>
                <name><![CDATA[Ia_rms]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(22)]/1000

]]></code>
                <signal_name><![CDATA[Relay2.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>8</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7770c9a5db3911ee92f4207918e0ad02</id>
                <name><![CDATA[Ia_phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(22)]

]]></code>
                <signal_name><![CDATA[Relay2.Ia_phase]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>168</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7efbcf14db3911eea490207918e0ad02</id>
                <name><![CDATA[Vb_phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.Vb_ph".format(22)]

]]></code>
                <signal_name><![CDATA[Relay2.Vb_phase]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>168</x>
                    <y>248</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7efbcf15db3911eeb4b0207918e0ad02</id>
                <name><![CDATA[Va_rms]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(22)]/1000

]]></code>
                <signal_name><![CDATA[Relay2.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>500</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>8</x>
                    <y>192</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7efbcf16db3911ee9785207918e0ad02</id>
                <name><![CDATA[Ic_phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ic_ph".format(22)]

]]></code>
                <signal_name><![CDATA[Relay2.Ic_phase]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>168</x>
                    <y>128</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7efbcf17db3911eea677207918e0ad02</id>
                <name><![CDATA[Va_phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(22)]

]]></code>
                <signal_name><![CDATA[Relay2.Va_phase]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>168</x>
                    <y>192</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7efbcf18db3911ee963d207918e0ad02</id>
                <name><![CDATA[Ib_rms]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IB_rms".format(22)]/1000

]]></code>
                <signal_name><![CDATA[Relay2.Ib_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>8</x>
                    <y>64</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7efbcf19db3911ee9db7207918e0ad02</id>
                <name><![CDATA[Ib_phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ib_ph".format(22)]

]]></code>
                <signal_name><![CDATA[Relay2.Ib_phase]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>168</x>
                    <y>64</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7efbf721db3911eeb420207918e0ad02</id>
                <name><![CDATA[Vc_phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.Vc_ph".format(22)]

]]></code>
                <signal_name><![CDATA[Relay2.Vc_phase]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>168</x>
                    <y>304</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7efbf722db3911ee994f207918e0ad02</id>
                <name><![CDATA[Vc_rms]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VCn_rms".format(22)]/1000

]]></code>
                <signal_name><![CDATA[Relay2.Vc_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>8</x>
                    <y>304</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7efc1e16db3911eeb801207918e0ad02</id>
                <name><![CDATA[Vb_rms]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VBn_rms".format(22)]/1000

]]></code>
                <signal_name><![CDATA[Relay2.Vb_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>8</x>
                    <y>248</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7efc1e17db3911eeabd7207918e0ad02</id>
                <name><![CDATA[Ic_rms]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IC_rms".format(22)]/1000

]]></code>
                <signal_name><![CDATA[Relay2.Ic_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>8</x>
                    <y>128</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>91cacea4db3911ee9086207918e0ad02</id>
                <name><![CDATA[MV4]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['99832e2cdb3911ee9ce9207918e0ad02', '99832e2ddb3911eeb280207918e0ad02', '99832e2edb3911eeb945207918e0ad02', '99832e2fdb3911ee87f2207918e0ad02', '99832e30db3911ee9adb207918e0ad02', '99832e31db3911eeb66f207918e0ad02', '99832e32db3911eea6b6207918e0ad02', '99832e33db3911ee8d5a207918e0ad02', '99832e34db3911eebf97207918e0ad02', '998354e8db3911ee8dbd207918e0ad02', '998354e9db3911eeae93207918e0ad02', '998354e7db3911ee86eb207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be available for use in
# all Macro, Expression and handlers codes of components owned by this widget.
# This code is always executed prior simulation start. In case this is a
# Library Widget, this code is also executed on drag and drop, Panel load
# and widget paste.
#
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

relay = "4"]]></initialization_code>
                <widget_settings>
                    <x>1536</x>
                    <y>632</y>
                    <width>336</width>
                    <height>400</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>99832e2cdb3911ee9ce9207918e0ad02</id>
                <name><![CDATA[Ib_rms]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IB_rms".format(23)]/1000

]]></code>
                <signal_name><![CDATA[Relay4.Ib_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>8</x>
                    <y>64</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>99832e2ddb3911eeb280207918e0ad02</id>
                <name><![CDATA[Vc_rms]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VCn_rms".format(23)]/1000

]]></code>
                <signal_name><![CDATA[Relay4.Vc_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>8</x>
                    <y>296</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>99832e2edb3911eeb945207918e0ad02</id>
                <name><![CDATA[Ic_phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ic_ph".format(23)]

]]></code>
                <signal_name><![CDATA[Relay4.Ic_phase]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>168</x>
                    <y>120</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>99832e2fdb3911ee87f2207918e0ad02</id>
                <name><![CDATA[Vb_phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.Vb_ph".format(23)]

]]></code>
                <signal_name><![CDATA[Relay4.Vb_phase]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>168</x>
                    <y>240</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>99832e30db3911ee9adb207918e0ad02</id>
                <name><![CDATA[Ib_phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ib_ph".format(23)]

]]></code>
                <signal_name><![CDATA[Relay4.Ib_phase]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>168</x>
                    <y>64</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>99832e31db3911eeb66f207918e0ad02</id>
                <name><![CDATA[Vb_rms]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VBn_rms".format(23)]/1000

]]></code>
                <signal_name><![CDATA[Relay4.Vb_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>8</x>
                    <y>240</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>99832e32db3911eea6b6207918e0ad02</id>
                <name><![CDATA[Va_rms]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(23)]/1000

]]></code>
                <signal_name><![CDATA[Relay4.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>8</x>
                    <y>184</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>99832e33db3911ee8d5a207918e0ad02</id>
                <name><![CDATA[Ic_rms]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IC_rms".format(23)]/1000

]]></code>
                <signal_name><![CDATA[Relay4.Ic_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>8</x>
                    <y>120</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>99832e34db3911eebf97207918e0ad02</id>
                <name><![CDATA[Va_phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(23)]

]]></code>
                <signal_name><![CDATA[Relay4.Va_phase]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>168</x>
                    <y>184</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>998354e8db3911ee8dbd207918e0ad02</id>
                <name><![CDATA[Ia_rms]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(23)]/1000

]]></code>
                <signal_name><![CDATA[Relay4.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>8</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>998354e9db3911eeae93207918e0ad02</id>
                <name><![CDATA[Vc_phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.Vc_ph".format(23)]

]]></code>
                <signal_name><![CDATA[Relay4.Vc_phase]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>168</x>
                    <y>296</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>998354e7db3911ee86eb207918e0ad02</id>
                <name><![CDATA[Ia_phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(23)]

]]></code>
                <signal_name><![CDATA[Relay4.Ia_phase]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>168</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>44b8adb9eba611ee9574207918e0ad02</id>
                <name><![CDATA[V_ref_RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
displayValue = 0.0

]]></code>
                <signal_name><![CDATA[Vref_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>1216</x>
                    <y>568</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>8a2365f1ec9511eea3c3207918e0ad02</id>
                <name><![CDATA[V_ref]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
displayValue = 0.0

]]></code>
                <signal_name><![CDATA[V_ref]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>1368</x>
                    <y>568</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>a7dc79afefaf11ee81a9207918e0ad02</id>
                <name><![CDATA[Capture/Scope]]></name>
                <type>Capture/Scope</type>
                <description><![CDATA[]]></description>
                <working_mode>embedded</working_mode>
                <widget_settings>
                    <x>56</x>
                    <y>1152</y>
                    <width>1816</width>
                    <height>592</height>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                    <appearance><![CDATA[Flat]]></appearance>
                    <state>Scope</state>
                    <layout>None</layout>
                    <virtual_signals_definitions>
                    </virtual_signals_definitions>
                    <presets>
                        <active_capture_preset><![CDATA[Default]]></active_capture_preset>
                        <active_scope_preset><![CDATA[Default]]></active_scope_preset>
                        <capture name="Default">
                            <time_interval>0.01</time_interval>
                            <sample_rate>1000000.0</sample_rate>
                            <background_color>white</background_color>
                            <layout>Vertical</layout>
                            <legend>True</legend>
                            <analog_signals>
                            </analog_signals>
                            <digital_signals>
                            </digital_signals>
                            <virtual_signals>
                            </virtual_signals>
                            <trigger>
                                <device>-1</device>
                                <is_force>False</is_force>
                                <type>Analog</type>
                                <source><![CDATA[None]]></source>
                                <edge>Rising edge</edge>
                                <treshold>0.0</treshold>
                                <offset>0.0</offset>
                                <useFirstTrigger>False</useFirstTrigger>
                            </trigger>
                            <plotting_options in_use="False">
                                <subplots>
                                    </subplots>
                            </plotting_options>
                        </capture>
                        <scope name="Default">
                            <background_color>white</background_color>
                            <layout>Grid</layout>
                            <legend>True</legend>
                            <show_viewports>2</show_viewports>
                            <decimation>6</decimation>
                            <time_base>0.01</time_base>
                            <analog_signals>
                                <analog>
                                    <channel>0</channel>
                                    <name><![CDATA[Meter22.Ia]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>0</row>
                                    <viewports>
                                        <num_viewport>1</num_viewport>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>1</channel>
                                    <name><![CDATA[Meter22.Ib]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>1</row>
                                    <viewports>
                                        <num_viewport>1</num_viewport>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>2</channel>
                                    <name><![CDATA[Meter22.Ic]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>2</row>
                                    <viewports>
                                        <num_viewport>1</num_viewport>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>3</channel>
                                    <name><![CDATA[Meter23.Ia]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>3</row>
                                    <viewports>
                                        <num_viewport>2</num_viewport>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>4</channel>
                                    <name><![CDATA[Meter23.Ib]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>4</row>
                                    <viewports>
                                        <num_viewport>2</num_viewport>
                                   </viewports>
                               </analog>
                                <analog>
                                    <channel>5</channel>
                                    <name><![CDATA[Meter23.Ic]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>5</row>
                                    <viewports>
                                        <num_viewport>2</num_viewport>
                                   </viewports>
                               </analog>
                            </analog_signals>
                            <digital_signals>
                            </digital_signals>
                            <trigger>
                                <device>0</device>
                                <is_force>False</is_force>
                                <type>Analog</type>
                                <source>Meter22.Ia</source>
                                <edge>Rising edge</edge>
                                <treshold>0.0</treshold>
                                <offset>50.0</offset>
                                <useFirstTrigger>False</useFirstTrigger>
                            </trigger>
                        </scope>
                        </presets>
                    <capture>
                        <time_interval>0.01</time_interval>
                        <sample_rate>1000000.0</sample_rate>
                        <background_color>white</background_color>
                        <layout>Vertical</layout>
                        <legend>True</legend>
                        <trigger>
                            <type>Analog</type>
                            <source>None</source>
                            <edge>Rising edge</edge>
                            <treshold>0.0</treshold>
                            <offset>0.0</offset>
                            <useFirstTrigger>False</useFirstTrigger>
                        </trigger>
                        <analog_signals>
                        </analog_signals>
                         <digital_signals>
                         </digital_signals>
                    </capture>
                    <scope>
                        <time_base>0.01 </time_base>
                        <background_color>white</background_color>
                        <layout>Grid</layout>
                        <legend>True</legend>
                        <trigger>
                            <mode>Auto</mode>
                            <type>Analog</type>
                            <source>Meter22.Ia</source>
                            <edge>Rising edge</edge>
                            <treshold>0.0</treshold>
                            <offset>50.0</offset>
                        </trigger>
                         <analog_signals>
                            <analog>
                                    <channel>0</channel>
                                    <name><![CDATA[Meter22.Ia]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>0</row>
                                    <viewports>
                                        <num_viewport>1</num_viewport>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>1</channel>
                                    <name><![CDATA[Meter22.Ib]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>1</row>
                                    <viewports>
                                        <num_viewport>1</num_viewport>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>2</channel>
                                    <name><![CDATA[Meter22.Ic]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>2</row>
                                    <viewports>
                                        <num_viewport>1</num_viewport>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>3</channel>
                                    <name><![CDATA[Meter23.Ia]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>3</row>
                                    <viewports>
                                        <num_viewport>2</num_viewport>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>4</channel>
                                    <name><![CDATA[Meter23.Ib]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>4</row>
                                    <viewports>
                                        <num_viewport>2</num_viewport>
                                   </viewports>
                               </analog>
                            <analog>
                                    <channel>5</channel>
                                    <name><![CDATA[Meter23.Ic]]></name>
                                    <is_locked>False</is_locked>
                                    <vertical_scale>Auto</vertical_scale>
                                    <vertical_offset>0.0</vertical_offset>
                                    <coupling>False</coupling>
                                    <row>5</row>
                                    <viewports>
                                        <num_viewport>2</num_viewport>
                                   </viewports>
                               </analog>
                        </analog_signals>
                        <digital_signals>
                        </digital_signals>
                    </scope>
                    <plotting_options in_use="False">
                    
                        <subplots>
                            </subplots>
                    </plotting_options>
                </widget_settings>

            </component_data>
        <component_data>
                <id>a29a93d7efb511ee84ea207918e0ad02</id>
                <name><![CDATA[Relay Logic]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['ab4f5b09efb511eeaee5207918e0ad02', 'aebeee51efb511eebde3207918e0ad02', 'b8263873efb511eeab66207918e0ad02', 'be6cd144efb511eea477207918e0ad02', 'c117171befb511ee8e6d207918e0ad02', 'cff94ac6efb511ee890e207918e0ad02', 'd5eaf1f2efb511ee9fd6207918e0ad02']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be available for use in
# all Macro, Expression and handlers codes of components owned by this widget.
# This code is always executed prior simulation start. In case this is a
# Library Widget, this code is also executed on drag and drop, Panel load
# and widget paste.
#
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
]]></initialization_code>
                <widget_settings>
                    <x>1208</x>
                    <y>1040</y>
                    <width>664</width>
                    <height>168</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>True</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>ab4f5b09efb511eeaee5207918e0ad02</id>
                <name><![CDATA[Probe1]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
displayValue = 0.0

]]></code>
                <signal_name><![CDATA[Meter22.Probe1]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>500</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>160</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>aebeee51efb511eebde3207918e0ad02</id>
                <name><![CDATA[Probe2]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
displayValue = 0.0

]]></code>
                <signal_name><![CDATA[Meter22.Probe2]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>500</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>160</x>
                    <y>72</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>b8263873efb511eeab66207918e0ad02</id>
                <name><![CDATA[Probe4]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
displayValue = 0.0

]]></code>
                <signal_name><![CDATA[Meter22.Probe4]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>500</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>464</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>be6cd144efb511eea477207918e0ad02</id>
                <name><![CDATA[Probe5]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
displayValue = 0.0

]]></code>
                <signal_name><![CDATA[Meter22.Probe5]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>500</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>8</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>c117171befb511ee8e6d207918e0ad02</id>
                <name><![CDATA[Probe6]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
displayValue = 0.0

]]></code>
                <signal_name><![CDATA[Meter22.Probe6]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>500</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>8</x>
                    <y>72</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>cff94ac6efb511ee890e207918e0ad02</id>
                <name><![CDATA[Probe3]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
displayValue = 0.0

]]></code>
                <signal_name><![CDATA[Meter22.Probe3]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>500</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>312</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>d5eaf1f2efb511ee9fd6207918e0ad02</id>
                <name><![CDATA[Probe7]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing value that will be displayed
displayValue = 0.0

]]></code>
                <signal_name><![CDATA[Meter22.Probe7]]></signal_name>
                <unit><![CDATA[]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>500</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>312</x>
                    <y>72</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>a937e392f11511ee8b8e207918e0ad02</id>
                <name><![CDATA[utc_Year]]></name>
                <type>TextBoxMacro</type>
                <description><![CDATA[]]></description>
                <on_use_code active="True"><![CDATA[# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
# NOTE: entered value is available through variable 'inputValue'

hil.model_write('utc_Year', inputValue)]]></on_use_code>
                <on_start_code active="True"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change the widget value by setting this variable.
# NOTE: If you do not specify a 'widgetValue' variable or assign 'None' to it,
# the widget value will not be changed.
widgetValue = None
]]></on_timer_code>
                <on_start_code_source><![CDATA[Macro code]]></on_start_code_source>
                <inputValue><![CDATA[2024.0]]></inputValue>
                <inputValueType>float</inputValueType>
                <unit><![CDATA[]]></unit>
                <widget_settings>
                    <x>1616</x>
                    <y>280</y>
                    <width>144</width>
                    <height>32</height>
                    <inputWidgetWidth>80</inputWidgetWidth>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>c92fcd52f11511ee8102207918e0ad02</id>
                <name><![CDATA[utc_Month]]></name>
                <type>TextBoxMacro</type>
                <description><![CDATA[]]></description>
                <on_use_code active="True"><![CDATA[# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
# NOTE: entered value is available through variable 'inputValue'

hil.model_write('utc_Month', inputValue)]]></on_use_code>
                <on_start_code active="True"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change the widget value by setting this variable.
# NOTE: If you do not specify a 'widgetValue' variable or assign 'None' to it,
# the widget value will not be changed.
widgetValue = None
]]></on_timer_code>
                <on_start_code_source><![CDATA[Macro code]]></on_start_code_source>
                <inputValue><![CDATA[4.0]]></inputValue>
                <inputValueType>float</inputValueType>
                <unit><![CDATA[]]></unit>
                <widget_settings>
                    <x>1608</x>
                    <y>320</y>
                    <width>144</width>
                    <height>32</height>
                    <inputWidgetWidth>80</inputWidgetWidth>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>d7ea42eff11511eebd7e207918e0ad02</id>
                <name><![CDATA[utc_Day]]></name>
                <type>TextBoxMacro</type>
                <description><![CDATA[]]></description>
                <on_use_code active="True"><![CDATA[# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
# NOTE: entered value is available through variable 'inputValue'

hil.model_write('utc_Day', inputValue)]]></on_use_code>
                <on_start_code active="True"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change the widget value by setting this variable.
# NOTE: If you do not specify a 'widgetValue' variable or assign 'None' to it,
# the widget value will not be changed.
widgetValue = None
]]></on_timer_code>
                <on_start_code_source><![CDATA[Macro code]]></on_start_code_source>
                <inputValue><![CDATA[2.0]]></inputValue>
                <inputValueType>float</inputValueType>
                <unit><![CDATA[]]></unit>
                <widget_settings>
                    <x>1616</x>
                    <y>360</y>
                    <width>144</width>
                    <height>32</height>
                    <inputWidgetWidth>80</inputWidgetWidth>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>f26a7d85f11511ee8ade207918e0ad02</id>
                <name><![CDATA[utc_Hour]]></name>
                <type>TextBoxMacro</type>
                <description><![CDATA[]]></description>
                <on_use_code active="True"><![CDATA[# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
# NOTE: entered value is available through variable 'inputValue'

hil.model_write('utc_Hour', inputValue)]]></on_use_code>
                <on_start_code active="True"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change the widget value by setting this variable.
# NOTE: If you do not specify a 'widgetValue' variable or assign 'None' to it,
# the widget value will not be changed.
widgetValue = None
]]></on_timer_code>
                <on_start_code_source><![CDATA[Macro code]]></on_start_code_source>
                <inputValue><![CDATA[23.0]]></inputValue>
                <inputValueType>float</inputValueType>
                <unit><![CDATA[]]></unit>
                <widget_settings>
                    <x>1616</x>
                    <y>400</y>
                    <width>144</width>
                    <height>32</height>
                    <inputWidgetWidth>80</inputWidgetWidth>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>fde34d11f11511ee9edd207918e0ad02</id>
                <name><![CDATA[utc_Minute]]></name>
                <type>TextBoxMacro</type>
                <description><![CDATA[]]></description>
                <on_use_code active="True"><![CDATA[# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
# NOTE: entered value is available through variable 'inputValue'

hil.model_write('utc_Minute', inputValue)]]></on_use_code>
                <on_start_code active="True"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change the widget value by setting this variable.
# NOTE: If you do not specify a 'widgetValue' variable or assign 'None' to it,
# the widget value will not be changed.
widgetValue = None
]]></on_timer_code>
                <on_start_code_source><![CDATA[Macro code]]></on_start_code_source>
                <inputValue><![CDATA[35.0]]></inputValue>
                <inputValueType>float</inputValueType>
                <unit><![CDATA[]]></unit>
                <widget_settings>
                    <x>1608</x>
                    <y>440</y>
                    <width>144</width>
                    <height>32</height>
                    <inputWidgetWidth>80</inputWidgetWidth>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>0a8463def11611eeb128207918e0ad02</id>
                <name><![CDATA[utc_Second]]></name>
                <type>TextBoxMacro</type>
                <description><![CDATA[]]></description>
                <on_use_code active="True"><![CDATA[# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
# NOTE: entered value is available through variable 'inputValue'

hil.model_write('utc_Second', inputValue)]]></on_use_code>
                <on_start_code active="True"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change the widget value by setting this variable.
# NOTE: If you do not specify a 'widgetValue' variable or assign 'None' to it,
# the widget value will not be changed.
widgetValue = None
]]></on_timer_code>
                <on_start_code_source><![CDATA[Macro code]]></on_start_code_source>
                <inputValue><![CDATA[50.53537]]></inputValue>
                <inputValueType>float</inputValueType>
                <unit><![CDATA[]]></unit>
                <widget_settings>
                    <x>1608</x>
                    <y>480</y>
                    <width>144</width>
                    <height>32</height>
                    <inputWidgetWidth>80</inputWidgetWidth>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        </components>
</ui_settings>