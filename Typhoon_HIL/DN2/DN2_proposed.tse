version = 4.2

//
// Saved by sw version: 2024.1
//

model "dn2_proposed" {
    configuration {
        hil_device = "HIL604"
        hil_configuration_id = 1
        simulation_method = exact
        simulation_time_step = auto
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = False
        reset_analog_outputs_on_sim_stop = True
        reset_analog_outputs_on_sim_stop_mode = Offset values
        reset_digital_outputs_on_sim_stop = True
        vhil_adio_loopback = False
        cpl_stb = True
        enb_dep_sw_detect = False
        code_section = "external memory"
        data_section = "external memory"
        sys_sp_rate_1 = 0.0001
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
        user_cpu_part_option = "default"
        matrix_based_reduction = True
        cpl_dynamics_analysis = False
        export_ss_to_pickle = False
        ground_scope_core = True
        dss_num_tol = 1e-15
        cce_platform = "generic"
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_platform = "generic"
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_directory = ""
        cce_custom_type_int = ""
        cce_custom_type_uint = ""
        cce_custom_type_real = ""
        tunable_params = "component defined"
        sp_compiler_type = "C compiler"
        sig_stim = "off"
        export_resource_list = ""
        export_dependency_list = ""
        excluded_resource_list = ""
        export_out_file = ""
        export_lock_top_level = True
        export_encrypt_library = True
        export_encrypt_resources = True
        dae_solver = "BDF"
        max_sim_step = 1e-4
        simulation_time = 1.0
        abs_tol = 1e-3
        rel_tol = 1e-3
        init_sim_step = 1e-6
        r_on_sw = 1e-3
        v_on_diode = 0.2
        data_sampling_rate = 0
        feedthrough_validation_error_level = error
    }

    component Subsystem Root {
        component "core/Three Phase Voltage Source" HV1 {
            init_frequency = "f"
            init_rms_value = "HV1_H"
        }
        [
            position = 2472, 8368
            size = 62, 256
        ]

        component "core/Three Phase Two Winding Transformer" Substation_D-Yg1 {
            L1 = "0.001"
            L2 = "0.001"
            Lm = "500"
            Poc1 = "50000.0"
            Psc1 = "50000.0"
            R1 = "1"
            R2 = "1"
            Rm = "500"
            Sn = "S_TR1"
            V1 = "HV1_H"
            V2 = "V_ln"
            clock_number = "11"
            current_vals_SCOC = "[0.0024, 1]"
            current_vals_SI = "[0.04919003695210766, 20.49584873000387]"
            current_vals_pu = "[0.002399999999999626, 0.9999999999978111]"
            f = "f"
            flux_vals_SCOC = "[1.2, 1.52]"
            flux_vals_SI = "[517.681881790336, 655.7303836010923]"
            flux_vals_pu = "[1.199999999999221, 1.5199999999997857]"
            input = "pu"
            ioc1 = "2.23606797749"
            l1 = "0.01"
            l2 = "0.01"
            lm = "150"
            r1 = "0.02"
            r2 = "0.02"
            rm = "350"
            usc1 = "8.0622577483"
            winding_1_connection = "D"
        }
        [
            position = 2656, 8368
            size = 126, 256
        ]

        component "core/Time Synchronization Status" "Time Synchronization Status1" {
            execution_rate = "ex_rate"
        }
        [
            position = 3080, 7320
            size = 80, 64
        ]

        component "core/Probe" gps {
        }
        [
            position = 3224, 7304
        ]

        component "core/Probe" ptp {
        }
        [
            position = 3224, 7384
        ]

        component "core/Three Phase Voltage Source" HV3 {
            init_frequency = "f"
            init_rms_value = "HV3_H"
        }
        [
            position = 5040, 9720
            size = 62, 256
        ]

        component "core/Three Phase Two Winding Transformer" Substation_D-Yg2 {
            L1 = "100"
            L2 = "1"
            Lm = "4e5"
            Poc1 = "50000.0"
            Psc1 = "50000.0"
            R1 = "600"
            R2 = "10"
            Rm = "1e8"
            Sn = "S_TR3"
            V1 = "HV3_H"
            V2 = "V_ln"
            clock_number = "11"
            current_vals_SCOC = "[0.0024, 1]"
            current_vals_SI = "[0.04919003695210766, 20.49584873000387]"
            current_vals_pu = "[0.002399999999999626, 0.9999999999978111]"
            f = "f"
            flux_vals_SCOC = "[1.2, 1.52]"
            flux_vals_SI = "[517.681881790336, 655.7303836010923]"
            flux_vals_pu = "[1.199999999999221, 1.5199999999997857]"
            input = "pu"
            ioc1 = "2.23606797749"
            l1 = "0.01"
            l2 = "0.01"
            lm = "150"
            r1 = "0.02"
            r2 = "0.02"
            rm = "350"
            usc1 = "8.0622577483"
            winding_1_connection = "D"
        }
        [
            position = 5248, 9720
            size = 126, 256
        ]

        component "core/Triple Pole Single Throw Contactor" NOP3 {
            ctrl_src = "Model"
        }
        [
            position = 8144, 9176
            size = 64, 256
        ]

        component "core/SCADA Input" "switch state 3" {
            addr = "1426063424"
            execution_rate = "ex_rate"
            unit = ""
        }
        [
            position = 8144, 8992
            rotation = right
        ]

        component "core/ETH VE Setup" "ETH VE Setup" {
            device_id = "1"
            eth_port = "2"
            eth_port0 = "2"
            eth_port1 = "2"
            eth_port10 = "2"
            eth_port11 = "2"
            eth_port12 = "2"
            eth_port13 = "2"
            eth_port14 = "2"
            eth_port15 = "2"
            eth_port2 = "2"
            eth_port3 = "2"
            eth_port4 = "2"
            eth_port5 = "2"
            eth_port6 = "2"
            eth_port7 = "2"
            eth_port8 = "2"
            eth_port9 = "2"
            ethernet_port_per_device = "{\'HIL100\': {}, \'HIL104\': {}, \'HIL402\': {}, \'HIL404\': {\'0\': \'2\', \'1\': \'2\', \'2\': \'2\', \'3\': \'2\', \'4\': \'2\', \'5\': \'2\', \'6\': \'2\', \'7\': \'2\', \'8\': \'2\', \'9\': \'2\', \'10\': \'2\', \'11\': \'2\', \'12\': \'2\', \'13\': \'2\', \'14\': \'2\', \'15\': \'2\'}, \'HIL602+\': {}, \'HIL603\': {}, \'HIL604\': {\'0\': \'2\', \'1\': \'2\', \'2\': \'2\', \'3\': \'2\', \'4\': \'2\', \'5\': \'2\', \'6\': \'2\', \'7\': \'2\', \'8\': \'2\', \'9\': \'2\', \'10\': \'2\', \'11\': \'2\', \'12\': \'2\', \'13\': \'2\', \'14\': \'2\', \'15\': \'2\'}, \'HIL606\': {}, \'VHIL+\': {}}"
            execution_rate = "ex_rate"
            ip_addr = "192.168.0.103"
            override_device_id = "True"
        }
        [
            position = 3400, 7320
        ]

        component "core/ETH VE Send" "ETH VE Send1" {
            configuration = "[{\'signal_name\': \'Meter1_IaM\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter2_IaM\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter3_IaM\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter4_IaM\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter5_IaM\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter6_IaM\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter7_IaM\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter15_IaM\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter16_IaM\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter17_IaM\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter18_IaM\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter19_IaM\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter20_IaM\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter21_IaM\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}]"
            dest_ip = "192.168.0.101"
            destination_port = "33000"
            local_send_port = "33033"
            protocol = "TCP/IP"
            sample_time = "0.01"
            stream_source_id = "1003"
        }
        [
            position = 4552, 7480
            size = 88, 240
        ]

        component "core/Probe" Meter14_IaM {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "Meter14_IaM"
            streaming_en = "True"
        }
        [
            position = 3720, 7280
        ]

        component "core/ETH VE Receive" "ETH VE Receive1" {
            configuration = "[{\'signal_name\': \'Meter14_IaM\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter13_IaM\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter12_IaM\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter11_IaM\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter10_IaM\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter9_IaM\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter8_IaM\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}]"
            execution_rate = "ex_rate"
            local_receive_port = "11000"
            protocol = "TCP/IP"
            remote_connection_port = "11011"
            signal_names_dict = ""
            src_ip = "192.168.0.101"
        }
        [
            position = 3624, 7368
            size = 80, 144
        ]

        component "core/Ground" gnd1 {
        }
        [
            position = 2384, 8888
        ]

        component "core/Triple Pole Single Throw Contactor" relay4 {
            ctrl_src = "Model"
            execution_rate = "ex_rate"
            off_delay = "0.5"
            on_delay = "0.5"
            signal_access = "Inherit"
        }
        [
            position = 6928, 8368
            size = 64, 256
        ]

        component "core/Ground" gnd2 {
        }
        [
            position = 4952, 10008
        ]

        component "core/SCADA Input" input1 {
            execution_rate = "ex_rate"
            unit = ""
        }
        [
            position = 5952, 8272
        ]

        component "core/Dynamic Grid Fault" fault1 {
            ctrl_method = "Signal input"
            execution_rate = "ex_rate"
        }
        [
            position = 6024, 8368
            size = 64, 64
        ]

        component "core/Ground" gnd3 {
        }
        [
            position = 6024, 8520
        ]

        component "core/RL Section" L15-16 {
            embedded_coupling = "True"
            inductance_per_l = "branch[\"15-16\"][\"L\"]"
            length = "line_len"
            resistance_per_l = "branch[\"15-16\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 6056, 9720
            size = 256, 56
        ]

        component "core/RL Section" L16-17 {
            inductance_per_l = "branch[\"16-17\"][\"L\"]"
            length = "line_len"
            resistance_per_l = "branch[\"16-17\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 6816, 9720
            size = 256, 56
        ]

        component "core/RL Section" L17-18 {
            inductance_per_l = "branch[\"17-18\"][\"L\"]"
            length = "line_len"
            resistance_per_l = "branch[\"17-18\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 7584, 9720
            size = 256, 56
        ]

        component "core/RL Section" L18-19 {
            embedded_coupling = "True"
            inductance_per_l = "branch[\"18-19\"][\"L\"]"
            length = "line_len"
            resistance_per_l = "branch[\"18-19\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 8400, 9720
            size = 256, 56
        ]

        component "core/RL Section" L19-20 {
            inductance_per_l = "branch[\"19-20\"][\"L\"]"
            length = "line_len"
            resistance_per_l = "branch[\"19-20\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 9392, 9720
            size = 256, 56
        ]

        component "core/RL Section" L20-21 {
            inductance_per_l = "branch[\"20-21\"][\"L\"]"
            length = "line_len"
            resistance_per_l = "branch[\"20-21\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 10104, 9720
            size = 256, 56
        ]

        component "core/RL Section" L5-19 {
            embedded_coupling = "True"
            inductance_per_l = "branch[\"5-19\"][\"L\"]"
            length = "line_len"
            resistance_per_l = "branch[\"5-19\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 8392, 9176
            size = 256, 56
        ]

        component "core/RL Section" L1-2 {
            inductance_per_l = "branch[\"1-2\"][\"L\"]"
            length = "line_len"
            resistance_per_l = "branch[\"1-2\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 3488, 8368
            size = 256, 56
        ]

        component "core/RL Section" L2-3 {
            embedded_coupling = "True"
            inductance_per_l = "branch[\"2-3\"][\"L\"]"
            length = "line_len"
            resistance_per_l = "branch[\"2-3\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 4776, 8368
            size = 256, 56
        ]

        component "core/RL Section" L3-4_1 {
            inductance_per_l = "branch[\"3-4\"][\"L\"]"
            length = "line_len/2"
            resistance_per_l = "branch[\"3-4\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 5720, 8368
            size = 256, 56
        ]

        component "core/RL Section" L3-4_2 {
            inductance_per_l = "branch[\"3-4\"][\"L\"]"
            length = "line_len/2"
            resistance_per_l = "branch[\"3-4\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 6336, 8368
            size = 256, 56
        ]

        component "core/RL Section" L4-5 {
            embedded_coupling = "True"
            inductance_per_l = "branch[\"4-5\"][\"L\"]"
            length = "line_len"
            resistance_per_l = "branch[\"4-5\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 7656, 8368
            size = 256, 56
        ]

        component "core/RL Section" L5-6 {
            inductance_per_l = "branch[\"5-6\"][\"L\"]"
            length = "line_len"
            resistance_per_l = "branch[\"5-6\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 8856, 8368
            size = 256, 56
        ]

        component "core/RL Section" L6-7 {
            inductance_per_l = "branch[\"6-7\"][\"L\"]"
            length = "line_len"
            resistance_per_l = "branch[\"6-7\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 9552, 8368
            size = 256, 56
        ]

        component "core/Voltage Measurement" Vref {
            addr = "51"
            execution_rate = "ex_rate"
            sig_output = "True"
            signal_access = "Inherit"
        }
        [
            position = 2800, 8024
            scale = -1, 1
            size = 64, 32
        ]

        component "core/RMS value" "RMS value1" {
        }
        [
            position = 2848, 7912
            hide_name = True
        ]

        component "core/Probe" Vref_rms {
            signal_access = "Inherit"
        }
        [
            position = 2936, 7912
        ]

        component Subsystem Meter1 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter1_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter1_VaP"
                streaming_en = "True"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter1_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter1_VaM"
                signal_type = "voltage"
                streaming_en = "True"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "Meter1_IaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8248, 8136
                hide_name = True
                size = 68, 20
            ]

            tag Goto2 {
                value = "Meter1_IaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9032, 8056
                hide_name = True
                size = 68, 20
            ]

            junction Junction1 sp
            [
                position = 8112, 8096
            ]

            junction Junction2 sp
            [
                position = 8856, 8024
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect IA_rms.in Junction1 as Connection595
            connect Junction1 "Meter Split2.IA_RMS" as Connection596
            connect Goto1 Junction1 as Connection597
            connect "Bus Split.out3" Junction2 as Connection598
            connect Junction2 Ia_ph.in as Connection599
            connect Goto2 Junction2 as Connection600
            connect Va_ph.in "Bus Split.out" as Connection607
            [
                breakpoints = 8840, 7856
            ]
            connect VAn_rms.in "Meter Split1.VAn_RMS" as Connection608
            [
                breakpoints = 7728, 8096
            ]
        }
        [
            position = 3080, 8720
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter1 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 3080, 8464
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg1 {
            SAB = "load[\"1\"][\"S\"]/3"
            SAn = "load[\"1\"][\"S\"]/3"
            SBC = "load[\"1\"][\"S\"]/3"
            SBn = "load[\"1\"][\"S\"]/3"
            SCA = "load[\"1\"][\"S\"]/3"
            SCn = "load[\"1\"][\"S\"]/3"
            Sn_3ph = "load[\"1\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/np.sqrt(3)"
            VBC = "V_ll"
            VBn = "V_ll/np.sqrt(3)"
            VCA = "V_ll"
            VCn = "V_ll/np.sqrt(3)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"1\"][\"pf\"]"
            pfB = "load[\"1\"][\"pf\"]"
            pfC = "load[\"1\"][\"pf\"]"
            pf_3ph = "load[\"1\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 3080, 8608
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter2 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter2_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter2_VaP"
                streaming_en = "True"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter2_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter2_VaM"
                signal_type = "voltage"
                streaming_en = "True"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "Meter2_IaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8248, 8136
                hide_name = True
                size = 68, 20
            ]

            tag Goto2 {
                value = "Meter2_IaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9024, 8056
                hide_name = True
                size = 68, 20
            ]

            tag Goto3 {
                value = "Meter2_VaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 7848, 8144
                hide_name = True
                size = 68, 20
            ]

            tag Goto4 {
                value = "Meter2_VaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9024, 7888
                hide_name = True
                size = 68, 20
            ]

            junction Junction1 sp
            [
                position = 8104, 8096
            ]

            junction Junction2 sp
            [
                position = 8856, 8024
            ]

            junction Junction3 sp
            [
                position = 7728, 8096
            ]

            junction Junction4 sp
            [
                position = 8856, 7856
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect IA_rms.in Junction1 as Connection595
            connect Junction1 "Meter Split2.IA_RMS" as Connection596
            connect Goto1 Junction1 as Connection597
            connect "Bus Split.out3" Junction2 as Connection598
            connect Junction2 Ia_ph.in as Connection599
            connect Goto2 Junction2 as Connection600
            connect "Meter Split1.VAn_RMS" Junction3 as Connection601
            connect Junction3 VAn_rms.in as Connection602
            connect Goto3 Junction3 as Connection603
            connect "Bus Split.out" Junction4 as Connection604
            connect Junction4 Va_ph.in as Connection605
            connect Goto4 Junction4 as Connection606
        }
        [
            position = 4336, 8720
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter2 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 4336, 8464
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg2 {
            SAB = "load[\"2\"][\"S\"]/3"
            SAn = "load[\"2\"][\"S\"]/3"
            SBC = "load[\"2\"][\"S\"]/3"
            SBn = "load[\"2\"][\"S\"]/3"
            SCA = "load[\"2\"][\"S\"]/3"
            SCn = "load[\"2\"][\"S\"]/3"
            Sn_3ph = "load[\"2\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/np.sqrt(3)"
            VBC = "V_ll"
            VBn = "V_ll/np.sqrt(3)"
            VCA = "V_ll"
            VCn = "V_ll/np.sqrt(3)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"2\"][\"pf\"]"
            pfB = "load[\"2\"][\"pf\"]"
            pfC = "load[\"2\"][\"pf\"]"
            pf_3ph = "load[\"2\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 4336, 8608
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter3 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter3_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter3_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "Meter3_IaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8248, 8144
                hide_name = True
                size = 68, 20
            ]

            tag Goto2 {
                value = "Meter3_IaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9056, 8056
                hide_name = True
                size = 68, 20
            ]

            junction Junction1 sp
            [
                position = 8112, 8096
            ]

            junction Junction2 sp
            [
                position = 8848, 8024
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect IA_rms.in Junction1 as Connection595
            connect Junction1 "Meter Split2.IA_RMS" as Connection596
            connect Goto1 Junction1 as Connection597
            connect "Bus Split.out3" Junction2 as Connection598
            connect Junction2 Ia_ph.in as Connection599
            connect Goto2 Junction2 as Connection600
        }
        [
            position = 5288, 8720
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter3 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 5288, 8464
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg3 {
            SAB = "load[\"3\"][\"S\"]/3"
            SAn = "load[\"3\"][\"S\"]/3"
            SBC = "load[\"3\"][\"S\"]/3"
            SBn = "load[\"3\"][\"S\"]/3"
            SCA = "load[\"3\"][\"S\"]/3"
            SCn = "load[\"3\"][\"S\"]/3"
            Sn_3ph = "load[\"3\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/np.sqrt(3)"
            VBC = "V_ll"
            VBn = "V_ll/np.sqrt(3)"
            VCA = "V_ll"
            VCn = "V_ll/np.sqrt(3)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"3\"][\"pf\"]"
            pfB = "load[\"3\"][\"pf\"]"
            pfC = "load[\"3\"][\"pf\"]"
            pf_3ph = "load[\"3\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 5288, 8608
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter4 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter4_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter4_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "Meter4_IaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8264, 8144
                hide_name = True
                size = 68, 20
            ]

            tag Goto2 {
                value = "Meter4_IaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9016, 8056
                hide_name = True
                size = 68, 20
            ]

            junction Junction1 sp
            [
                position = 8112, 8096
            ]

            junction Junction2 sp
            [
                position = 8856, 8024
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect IA_rms.in Junction1 as Connection595
            connect Junction1 "Meter Split2.IA_RMS" as Connection596
            connect Goto1 Junction1 as Connection597
            connect "Bus Split.out3" Junction2 as Connection598
            connect Junction2 Ia_ph.in as Connection599
            connect Goto2 Junction2 as Connection600
        }
        [
            position = 7240, 8720
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter4 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 7240, 8464
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg4 {
            SAB = "load[\"4\"][\"S\"]/3"
            SAn = "load[\"4\"][\"S\"]/3"
            SBC = "load[\"4\"][\"S\"]/3"
            SBn = "load[\"4\"][\"S\"]/3"
            SCA = "load[\"4\"][\"S\"]/3"
            SCn = "load[\"4\"][\"S\"]/3"
            Sn_3ph = "load[\"4\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/np.sqrt(3)"
            VBC = "V_ll"
            VBn = "V_ll/np.sqrt(3)"
            VCA = "V_ll"
            VCn = "V_ll/np.sqrt(3)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"4\"][\"pf\"]"
            pfB = "load[\"4\"][\"pf\"]"
            pfC = "load[\"4\"][\"pf\"]"
            pf_3ph = "load[\"4\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 7240, 8608
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter5 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter5_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter5_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "Meter5_IaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8248, 8144
                hide_name = True
                size = 68, 20
            ]

            tag Goto2 {
                value = "Meter5_IaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9024, 8056
                hide_name = True
                size = 68, 20
            ]

            junction Junction1 sp
            [
                position = 8112, 8096
            ]

            junction Junction2 sp
            [
                position = 8848, 8024
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect IA_rms.in Junction1 as Connection595
            connect Junction1 "Meter Split2.IA_RMS" as Connection596
            connect Goto1 Junction1 as Connection597
            connect "Bus Split.out3" Junction2 as Connection598
            connect Junction2 Ia_ph.in as Connection599
            connect Goto2 Junction2 as Connection600
        }
        [
            position = 8328, 8720
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter5 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 8328, 8464
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg5 {
            SAB = "load[\"5\"][\"S\"]/3"
            SAn = "load[\"5\"][\"S\"]/3"
            SBC = "load[\"5\"][\"S\"]/3"
            SBn = "load[\"5\"][\"S\"]/3"
            SCA = "load[\"5\"][\"S\"]/3"
            SCn = "load[\"5\"][\"S\"]/3"
            Sn_3ph = "load[\"5\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/np.sqrt(3)"
            VBC = "V_ll"
            VBn = "V_ll/np.sqrt(3)"
            VCA = "V_ll"
            VCn = "V_ll/np.sqrt(3)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"5\"][\"pf\"]"
            pfB = "load[\"5\"][\"pf\"]"
            pfC = "load[\"5\"][\"pf\"]"
            pf_3ph = "load[\"5\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 8328, 8608
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter6 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter6_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter6_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "Meter6_IaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8248, 8144
                hide_name = True
                size = 68, 20
            ]

            tag Goto2 {
                value = "Meter6_IaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9024, 8056
                hide_name = True
                size = 68, 20
            ]

            junction Junction1 sp
            [
                position = 8104, 8096
            ]

            junction Junction2 sp
            [
                position = 8840, 8024
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect IA_rms.in Junction1 as Connection595
            connect Junction1 "Meter Split2.IA_RMS" as Connection596
            connect Goto1 Junction1 as Connection597
            connect "Bus Split.out3" Junction2 as Connection598
            connect Junction2 Ia_ph.in as Connection599
            connect Goto2 Junction2 as Connection600
        }
        [
            position = 9224, 8720
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter6 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 9224, 8464
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg6 {
            SAB = "load[\"6\"][\"S\"]/3"
            SAn = "load[\"6\"][\"S\"]/3"
            SBC = "load[\"6\"][\"S\"]/3"
            SBn = "load[\"6\"][\"S\"]/3"
            SCA = "load[\"6\"][\"S\"]/3"
            SCn = "load[\"6\"][\"S\"]/3"
            Sn_3ph = "load[\"6\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/np.sqrt(3)"
            VBC = "V_ll"
            VBn = "V_ll/np.sqrt(3)"
            VCA = "V_ll"
            VCn = "V_ll/np.sqrt(3)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"6\"][\"pf\"]"
            pfB = "load[\"6\"][\"pf\"]"
            pfC = "load[\"6\"][\"pf\"]"
            pf_3ph = "load[\"6\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 9224, 8608
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter7 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter7_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter7_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "Meter7_IaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8256, 8144
                hide_name = True
                size = 68, 20
            ]

            tag Goto2 {
                value = "Meter7_IaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9032, 8056
                hide_name = True
                size = 68, 20
            ]

            junction Junction1 sp
            [
                position = 8112, 8096
            ]

            junction Junction2 sp
            [
                position = 8848, 8024
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect IA_rms.in Junction1 as Connection595
            connect Junction1 "Meter Split2.IA_RMS" as Connection596
            connect Goto1 Junction1 as Connection597
            connect "Bus Split.out3" Junction2 as Connection598
            connect Junction2 Ia_ph.in as Connection599
            connect Goto2 Junction2 as Connection600
        }
        [
            position = 9936, 8720
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter7 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 9936, 8464
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg7 {
            SAB = "load[\"7\"][\"S\"]/3"
            SAn = "load[\"7\"][\"S\"]/3"
            SBC = "load[\"7\"][\"S\"]/3"
            SBn = "load[\"7\"][\"S\"]/3"
            SCA = "load[\"7\"][\"S\"]/3"
            SCn = "load[\"7\"][\"S\"]/3"
            Sn_3ph = "load[\"7\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/np.sqrt(3)"
            VBC = "V_ll"
            VBn = "V_ll/np.sqrt(3)"
            VCA = "V_ll"
            VCn = "V_ll/np.sqrt(3)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"7\"][\"pf\"]"
            pfB = "load[\"7\"][\"pf\"]"
            pfC = "load[\"7\"][\"pf\"]"
            pf_3ph = "load[\"7\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 9936, 8608
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter15 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter15_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter15_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "Meter15_IaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8240, 8144
                hide_name = True
                size = 68, 20
            ]

            tag Goto2 {
                value = "Meter15_IaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9024, 8056
                hide_name = True
                size = 68, 20
            ]

            junction Junction1 sp
            [
                position = 8112, 8096
            ]

            junction Junction2 sp
            [
                position = 8848, 8024
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect IA_rms.in Junction1 as Connection595
            connect Junction1 "Meter Split2.IA_RMS" as Connection596
            connect Goto1 Junction1 as Connection597
            connect "Bus Split.out3" Junction2 as Connection598
            connect Junction2 Ia_ph.in as Connection599
            connect Goto2 Junction2 as Connection600
        }
        [
            position = 5552, 10080
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter15 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 5552, 9824
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg15 {
            SAB = "load[\"15\"][\"S\"]/3"
            SAn = "load[\"15\"][\"S\"]/3"
            SBC = "load[\"15\"][\"S\"]/3"
            SBn = "load[\"15\"][\"S\"]/3"
            SCA = "load[\"15\"][\"S\"]/3"
            SCn = "load[\"15\"][\"S\"]/3"
            Sn_3ph = "load[\"15\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/np.sqrt(3)"
            VBC = "V_ll"
            VBn = "V_ll/np.sqrt(3)"
            VCA = "V_ll"
            VCn = "V_ll/np.sqrt(3)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"15\"][\"pf\"]"
            pfB = "load[\"15\"][\"pf\"]"
            pfC = "load[\"15\"][\"pf\"]"
            pf_3ph = "load[\"15\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 5552, 9968
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter16 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter16_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter16_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "Meter16_IaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8248, 8144
                hide_name = True
                size = 68, 20
            ]

            tag Goto2 {
                value = "Meter16_IaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9016, 8056
                hide_name = True
                size = 68, 20
            ]

            junction Junction1 sp
            [
                position = 8112, 8096
            ]

            junction Junction2 sp
            [
                position = 8840, 8024
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect IA_rms.in Junction1 as Connection595
            connect Junction1 "Meter Split2.IA_RMS" as Connection596
            connect Goto1 Junction1 as Connection597
            connect "Bus Split.out3" Junction2 as Connection598
            connect Junction2 Ia_ph.in as Connection599
            connect Goto2 Junction2 as Connection600
        }
        [
            position = 6432, 10080
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter16 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 6432, 9824
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg16 {
            SAB = "load[\"16\"][\"S\"]/3"
            SAn = "load[\"16\"][\"S\"]/3"
            SBC = "load[\"16\"][\"S\"]/3"
            SBn = "load[\"16\"][\"S\"]/3"
            SCA = "load[\"16\"][\"S\"]/3"
            SCn = "load[\"16\"][\"S\"]/3"
            Sn_3ph = "load[\"16\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/np.sqrt(3)"
            VBC = "V_ll"
            VBn = "V_ll/np.sqrt(3)"
            VCA = "V_ll"
            VCn = "V_ll/np.sqrt(3)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"16\"][\"pf\"]"
            pfB = "load[\"16\"][\"pf\"]"
            pfC = "load[\"16\"][\"pf\"]"
            pf_3ph = "load[\"16\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 6432, 9968
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter17 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter17_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter17_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "Meter17_IaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8256, 8144
                hide_name = True
                size = 68, 20
            ]

            tag Goto2 {
                value = "Meter17_IaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9016, 8056
                hide_name = True
                size = 68, 20
            ]

            junction Junction1 sp
            [
                position = 8104, 8096
            ]

            junction Junction2 sp
            [
                position = 8848, 8024
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect IA_rms.in Junction1 as Connection595
            connect Junction1 "Meter Split2.IA_RMS" as Connection596
            connect Goto1 Junction1 as Connection597
            connect "Bus Split.out3" Junction2 as Connection598
            connect Junction2 Ia_ph.in as Connection599
            connect Goto2 Junction2 as Connection600
        }
        [
            position = 7200, 10080
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter17 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 7200, 9824
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg17 {
            SAB = "load[\"17\"][\"S\"]/3"
            SAn = "load[\"17\"][\"S\"]/3"
            SBC = "load[\"17\"][\"S\"]/3"
            SBn = "load[\"17\"][\"S\"]/3"
            SCA = "load[\"17\"][\"S\"]/3"
            SCn = "load[\"17\"][\"S\"]/3"
            Sn_3ph = "load[\"17\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/np.sqrt(3)"
            VBC = "V_ll"
            VBn = "V_ll/np.sqrt(3)"
            VCA = "V_ll"
            VCn = "V_ll/np.sqrt(3)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"17\"][\"pf\"]"
            pfB = "load[\"17\"][\"pf\"]"
            pfC = "load[\"17\"][\"pf\"]"
            pf_3ph = "load[\"17\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 7200, 9968
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter18 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter18_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter18_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "Meter18_IaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8248, 8136
                hide_name = True
                size = 68, 20
            ]

            tag Goto2 {
                value = "Meter18_IaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9008, 8056
                hide_name = True
                size = 68, 20
            ]

            junction Junction1 sp
            [
                position = 8112, 8096
            ]

            junction Junction2 sp
            [
                position = 8840, 8024
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect IA_rms.in Junction1 as Connection595
            connect Junction1 "Meter Split2.IA_RMS" as Connection596
            connect Goto1 Junction1 as Connection597
            connect "Bus Split.out3" Junction2 as Connection598
            connect Junction2 Ia_ph.in as Connection599
            connect Goto2 Junction2 as Connection600
        }
        [
            position = 7976, 10080
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter18 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 7976, 9824
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg18 {
            SAB = "load[\"18\"][\"S\"]/3"
            SAn = "load[\"18\"][\"S\"]/3"
            SBC = "load[\"18\"][\"S\"]/3"
            SBn = "load[\"18\"][\"S\"]/3"
            SCA = "load[\"18\"][\"S\"]/3"
            SCn = "load[\"18\"][\"S\"]/3"
            Sn_3ph = "load[\"18\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/np.sqrt(3)"
            VBC = "V_ll"
            VBn = "V_ll/np.sqrt(3)"
            VCA = "V_ll"
            VCn = "V_ll/np.sqrt(3)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"18\"][\"pf\"]"
            pfB = "load[\"18\"][\"pf\"]"
            pfC = "load[\"18\"][\"pf\"]"
            pf_3ph = "load[\"18\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 7976, 9968
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter19 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter19_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter19_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "Meter19_IaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8256, 8144
                hide_name = True
                size = 68, 20
            ]

            tag Goto2 {
                value = "Meter19_IaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9016, 8056
                hide_name = True
                size = 68, 20
            ]

            junction Junction1 sp
            [
                position = 8112, 8096
            ]

            junction Junction2 sp
            [
                position = 8848, 8024
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect IA_rms.in Junction1 as Connection595
            connect Junction1 "Meter Split2.IA_RMS" as Connection596
            connect Goto1 Junction1 as Connection597
            connect "Bus Split.out3" Junction2 as Connection598
            connect Junction2 Ia_ph.in as Connection599
            connect Goto2 Junction2 as Connection600
        }
        [
            position = 8960, 10080
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter19 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 8960, 9824
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg19 {
            SAB = "load[\"19\"][\"S\"]/3"
            SAn = "load[\"19\"][\"S\"]/3"
            SBC = "load[\"19\"][\"S\"]/3"
            SBn = "load[\"19\"][\"S\"]/3"
            SCA = "load[\"19\"][\"S\"]/3"
            SCn = "load[\"19\"][\"S\"]/3"
            Sn_3ph = "load[\"19\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/np.sqrt(3)"
            VBC = "V_ll"
            VBn = "V_ll/np.sqrt(3)"
            VCA = "V_ll"
            VCn = "V_ll/np.sqrt(3)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"19\"][\"pf\"]"
            pfB = "load[\"19\"][\"pf\"]"
            pfC = "load[\"19\"][\"pf\"]"
            pf_3ph = "load[\"19\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 8960, 9968
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter20 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter20_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter20_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "Meter20_IaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8256, 8144
                hide_name = True
                size = 68, 20
            ]

            tag Goto2 {
                value = "Meter20_IaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9016, 8056
                hide_name = True
                size = 68, 20
            ]

            junction Junction1 sp
            [
                position = 8104, 8096
            ]

            junction Junction2 sp
            [
                position = 8840, 8024
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect IA_rms.in Junction1 as Connection595
            connect Junction1 "Meter Split2.IA_RMS" as Connection596
            connect Goto1 Junction1 as Connection597
            connect "Bus Split.out3" Junction2 as Connection598
            connect Junction2 Ia_ph.in as Connection599
            connect Goto2 Junction2 as Connection600
        }
        [
            position = 9744, 10080
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter20 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 9744, 9824
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg20 {
            SAB = "load[\"20\"][\"S\"]/3"
            SAn = "load[\"20\"][\"S\"]/3"
            SBC = "load[\"20\"][\"S\"]/3"
            SBn = "load[\"20\"][\"S\"]/3"
            SCA = "load[\"20\"][\"S\"]/3"
            SCn = "load[\"20\"][\"S\"]/3"
            Sn_3ph = "load[\"20\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/np.sqrt(3)"
            VBC = "V_ll"
            VBn = "V_ll/np.sqrt(3)"
            VCA = "V_ll"
            VCn = "V_ll/np.sqrt(3)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"20\"][\"pf\"]"
            pfB = "load[\"20\"][\"pf\"]"
            pfC = "load[\"20\"][\"pf\"]"
            pf_3ph = "load[\"20\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 9744, 9968
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter21 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter21_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter21_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "Meter21_IaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8256, 8136
                hide_name = True
                size = 68, 20
            ]

            tag Goto2 {
                value = "Meter21_IaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9024, 8056
                hide_name = True
                size = 68, 20
            ]

            junction Junction1 sp
            [
                position = 8112, 8096
            ]

            junction Junction2 sp
            [
                position = 8848, 8024
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect IA_rms.in Junction1 as Connection595
            connect Junction1 "Meter Split2.IA_RMS" as Connection596
            connect Goto1 Junction1 as Connection597
            connect "Bus Split.out3" Junction2 as Connection598
            connect Junction2 Ia_ph.in as Connection599
            connect Goto2 Junction2 as Connection600
        }
        [
            position = 10432, 10080
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter21 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 10432, 9824
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg21 {
            SAB = "load[\"21\"][\"S\"]/3"
            SAn = "load[\"21\"][\"S\"]/3"
            SBC = "load[\"21\"][\"S\"]/3"
            SBn = "load[\"21\"][\"S\"]/3"
            SCA = "load[\"21\"][\"S\"]/3"
            SCn = "load[\"21\"][\"S\"]/3"
            Sn_3ph = "load[\"21\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/np.sqrt(3)"
            VBC = "V_ll"
            VBn = "V_ll/np.sqrt(3)"
            VCA = "V_ll"
            VCn = "V_ll/np.sqrt(3)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"21\"][\"pf\"]"
            pfB = "load[\"21\"][\"pf\"]"
            pfC = "load[\"21\"][\"pf\"]"
            pf_3ph = "load[\"21\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 10432, 9968
            scale = -1, 1
            size = 96, 80
        ]

        component "core/Probe" Meter13_IaM {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "Meter13_IaM"
            streaming_en = "True"
        }
        [
            position = 3800, 7280
        ]

        component "core/Probe" Meter12_IaM {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "Meter12_IaM"
            streaming_en = "True"
        }
        [
            position = 3880, 7280
        ]

        component "core/Probe" Meter11_IaM {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "Meter11_IaM"
            streaming_en = "True"
        }
        [
            position = 3960, 7280
        ]

        component "core/Probe" Meter10_IaM {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "Meter10_IaM"
            streaming_en = "True"
        }
        [
            position = 4040, 7280
        ]

        component "core/Probe" Meter9_IaM {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "Meter9_IaM"
            streaming_en = "True"
        }
        [
            position = 4120, 7280
        ]

        component "core/Probe" Meter8_IaM {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "Meter8_IaM"
            streaming_en = "True"
        }
        [
            position = 4200, 7280
        ]

        component "core/Probe" Meter14_IaP {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "Meter14_IaP"
            streaming_en = "True"
        }
        [
            position = 3720, 7528
        ]

        component "core/ETH VE Receive" "ETH VE Receive2" {
            configuration = "[{\'signal_name\': \'Meter14_IaP\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter13_IaP\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter12_IaP\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter11_IaP\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter10_IaP\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter9_IaP\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter8_IaP\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}]"
            execution_rate = "ex_rate"
            local_receive_port = "22000"
            protocol = "TCP/IP"
            remote_connection_port = "22022"
            signal_names_dict = ""
            src_ip = "192.168.0.101"
        }
        [
            position = 3624, 7616
            size = 80, 144
        ]

        component "core/Probe" Meter13_IaP {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "Meter13_IaP"
            streaming_en = "True"
        }
        [
            position = 3800, 7528
        ]

        component "core/Probe" Meter12_IaP {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "Meter12_IaP"
            streaming_en = "True"
        }
        [
            position = 3880, 7528
        ]

        component "core/Probe" Meter11_IaP {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "Meter11_IaP"
            streaming_en = "True"
        }
        [
            position = 3960, 7528
        ]

        component "core/Probe" Meter10_IaP {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "Meter10_IaP"
            streaming_en = "True"
        }
        [
            position = 4040, 7528
        ]

        component "core/Probe" Meter9_IaP {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "Meter9_IaP"
            streaming_en = "True"
        }
        [
            position = 4120, 7528
        ]

        component "core/Probe" Meter8_IaP {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "Meter8_IaP"
            streaming_en = "True"
        }
        [
            position = 4200, 7528
        ]

        component "core/ETH VE Send" "ETH VE Send2" {
            configuration = "[{\'signal_name\': \'Meter1_IaP\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter2_IaP\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter3_IaP\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter4_IaP\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter5_IaP\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter6_IaP\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter7_IaP\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter15_IaP\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter16_IaP\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter17_IaP\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter18_IaP\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter19_IaP\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter20_IaP\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter21_IaP\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}]"
            dest_ip = "192.168.0.101"
            destination_port = "44000"
            local_send_port = "44044"
            protocol = "TCP/IP"
            sample_time = "0.01"
            stream_source_id = "1004"
        }
        [
            position = 4920, 7480
            size = 88, 240
        ]

        component "core/Triple Pole Single Throw Contactor" relay2 {
            ctrl_src = "Model"
            execution_rate = "ex_rate"
            off_delay = "0.5"
            on_delay = "0.5"
            signal_access = "Inherit"
        }
        [
            position = 3888, 8368
            size = 64, 256
        ]

        component "core/Three-phase Meter" 3ph_Meter22 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 3720, 8368
            hide_name = True
            size = 48, 184
        ]

        component Subsystem Meter22 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter1_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter1_VaP"
                streaming_en = "True"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter1_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter1_VaM"
                signal_type = "voltage"
                streaming_en = "True"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            component "core/Logical operator" "Logical operator1" {
                operator = "NAND"
            }
            [
                position = 9608, 7928
                hide_name = True
            ]

            component "core/Constant" Constant1 {
                execution_rate = "inherit"
                value = "2"
            }
            [
                position = 9336, 7944
                hide_name = True
            ]

            component "core/Constant" Constant2 {
                execution_rate = "inherit"
            }
            [
                position = 9336, 8032
                hide_name = True
            ]

            component "core/Relational operator" "Relational operator1" {
                relational_op = ">="
            }
            [
                position = 9408, 7912
                hide_name = True
            ]

            component "core/Relational operator" "Relational operator2" {
                relational_op = ">="
            }
            [
                position = 9408, 8000
                hide_name = True
            ]

            component "core/Abs" Abs1 {
            }
            [
                position = 9336, 7904
                hide_name = True
            ]

            component "core/Abs" Abs2 {
            }
            [
                position = 9336, 7992
                hide_name = True
            ]

            component "core/Logical operator" "Logical operator2" {
                operator = "OR"
            }
            [
                position = 9488, 7920
                hide_name = True
            ]

            component "core/Constant" Constant3 {
                execution_rate = "inherit"
                value = "4.675"
            }
            [
                position = 9176, 7944
                hide_name = True
            ]

            component "core/Sum" Sum1 {
                signs = "+-"
            }
            [
                position = 9256, 7904
                hide_name = True
            ]

            component "core/Gain" Gain1 {
                gain = "0.001"
                multiplication = "Matrix(K*u)"
            }
            [
                position = 9176, 7896
                hide_name = True
            ]

            component "core/Sum" Sum2 {
                signs = "+-"
            }
            [
                position = 9256, 7992
                hide_name = True
            ]

            component "core/Constant" Constant4 {
                execution_rate = "inherit"
                value = "-4.29"
            }
            [
                position = 9176, 8024
                hide_name = True
            ]

            component "core/Probe" Probe1 {
            }
            [
                position = 9416, 7832
            ]

            component "core/Probe" Probe2 {
            }
            [
                position = 9424, 8064
            ]

            component "core/Probe" Probe3 {
            }
            [
                position = 9600, 7848
            ]

            component "core/Probe" Probe4 {
            }
            [
                position = 9712, 7856
            ]

            component "core/Probe" Probe5 {
            }
            [
                position = 9248, 7808
            ]

            component "core/Probe" Probe6 {
            }
            [
                position = 9264, 8072
            ]

            component "core/Probe" Probe7 {
            }
            [
                position = 9648, 8016
            ]

            component "core/Probe" Ia {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Relay2_Ia"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 7856
            ]

            component "core/Probe" Ib {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Relay2_Ib"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 7936
            ]

            component "core/Probe" Ic {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Relay2_Ic"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8016
            ]

            component "core/Probe" Va {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Relay2_Va"
                signal_type = "voltage"
                streaming_en = "True"
            }
            [
                position = 7768, 7856
            ]

            component "core/Probe" Vb {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Relay2_Vb"
                signal_type = "voltage"
                streaming_en = "True"
            }
            [
                position = 7768, 7936
            ]

            component "core/Probe" Vc {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Relay2_Vc"
                signal_type = "voltage"
                streaming_en = "True"
            }
            [
                position = 7768, 8016
            ]

            port meter_data {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 7920
            ]

            port Brk_cmd {
                label = "Brk_cmd"
                position = bottom:1
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 9704, 7928
            ]

            port scada_input {
                position = top:3
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8104
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7832, 7912
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7832, 7992
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7832, 7832
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8224, 7912
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8224, 7832
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8224, 7992
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 7920
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from12 {
                value = "Meter1_IaM"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9096, 7896
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto1 {
                value = "Meter1_IaM"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8224, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto2 {
                value = "Meter1_IaP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8992, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from13 {
                value = "Meter1_IaP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9160, 7984
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto3 {
                value = "input"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8104
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from14 {
                value = "input"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9520, 7992
                hide_name = True
                size = 60, 20
            ]

            junction Junction1 sp
            [
                position = 8112, 8096
            ]

            junction Junction3 sp
            [
                position = 9368, 7904
            ]

            junction Junction4 sp
            [
                position = 9368, 7992
            ]

            junction Junction5 sp
            [
                position = 9536, 7920
            ]

            junction Junction6 sp
            [
                position = 9656, 7928
            ]

            junction Junction7 sp
            [
                position = 9200, 7896
            ]

            junction Junction8 sp
            [
                position = 9200, 7984
            ]

            junction Junction9 sp
            [
                position = 9568, 7992
            ]

            junction Junction10 sp
            [
                position = 8104, 7856
            ]

            junction Junction11 sp
            [
                position = 8104, 7936
            ]

            junction Junction12 sp
            [
                position = 8104, 8016
            ]

            junction Junction13 sp
            [
                position = 8856, 8024
            ]

            junction Junction14 sp
            [
                position = 7728, 7856
            ]

            junction Junction15 sp
            [
                position = 7728, 7936
            ]

            junction Junction16 sp
            [
                position = 7728, 8016
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect Va_ph.in "Bus Split.out" as Connection607
            [
                breakpoints = 8840, 7856
            ]
            connect VAn_rms.in "Meter Split1.VAn_RMS" as Connection608
            [
                breakpoints = 7728, 8096
            ]
            connect Constant1.out "Relational operator1.in1" as Connection613
            connect Constant2.out "Relational operator2.in1" as Connection614
            connect "Logical operator2.in" "Relational operator1.out" as Connection617
            connect "Relational operator2.out" "Logical operator2.in1" as Connection618
            connect Sum1.out Abs1.in as Connection620
            connect Constant3.out Sum1.in1 as Connection621
            connect IA_rms.in Junction1 as Connection622
            connect Junction1 "Meter Split2.IA_RMS" as Connection623
            [
                breakpoints = 8112, 8096
            ]
            connect Ia_goto1 Junction1 as Connection624
            connect V_REF_from12 Gain1.in as Connection625
            connect Sum2.out Abs2.in as Connection627
            connect Constant4.out Sum2.in1 as Connection628
            connect Abs1.out Junction3 as Connection633
            connect Junction3 "Relational operator1.in" as Connection634
            connect Probe1.in Junction3 as Connection635
            connect Abs2.out Junction4 as Connection636
            connect Junction4 "Relational operator2.in" as Connection637
            connect Probe2.in Junction4 as Connection638
            connect "Logical operator2.out" Junction5 as Connection639
            connect Junction5 "Logical operator1.in" as Connection640
            connect Probe3.in Junction5 as Connection641
            connect "Logical operator1.out" Junction6 as Connection642
            connect Junction6 Brk_cmd as Connection643
            connect Probe4.in Junction6 as Connection644
            connect Gain1.out Junction7 as Connection645
            connect Junction7 Sum1.in as Connection646
            connect Probe5.in Junction7 as Connection647
            connect V_REF_from13 Junction8 as Connection648
            connect Junction8 Sum2.in as Connection649
            connect Probe6.in Junction8 as Connection650
            connect scada_input Ic_goto3 as Connection654
            connect "Logical operator1.in1" Junction9 as Connection656
            [
                breakpoints = 9568, 7976
            ]
            connect Junction9 Probe7.in as Connection657
            connect V_REF_from14 Junction9 as Connection658
            connect Ia.in Junction10 as Connection660
            connect Junction10 "Meter Split2.IA" as Connection661
            connect Ia_goto Junction10 as Connection662
            connect Ib.in Junction11 as Connection664
            connect Junction11 "Meter Split2.IB" as Connection665
            connect Ib_goto Junction11 as Connection666
            connect Ic.in Junction12 as Connection668
            connect Junction12 "Meter Split2.IC" as Connection669
            connect Ic_goto Junction12 as Connection670
            connect "Bus Split.out3" Junction13 as Connection672
            connect Junction13 Ia_ph.in as Connection673
            connect Ia_goto2 Junction13 as Connection674
            connect Va.in Junction14 as Connection676
            connect Junction14 "Meter Split1.VAn" as Connection677
            connect Va_goto Junction14 as Connection678
            connect "Meter Split1.VBn" Junction15 as Connection684
            connect Junction15 Vb.in as Connection685
            [
                breakpoints = 7728, 7936
            ]
            connect Vb_goto Junction15 as Connection686
            connect Vc.in Junction16 as Connection688
            connect Junction16 "Meter Split1.VCn" as Connection689
            connect Vc_goto Junction16 as Connection690
        }
        [
            position = 3888, 8120
            hide_name = True
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter23 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 6792, 8368
            hide_name = True
            size = 48, 184
        ]

        component Subsystem Meter23 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter1_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter1_VaP"
                streaming_en = "True"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter1_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter1_VaM"
                signal_type = "voltage"
                streaming_en = "True"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            component "core/Logical operator" "Logical operator1" {
                operator = "NAND"
            }
            [
                position = 9576, 7936
                hide_name = True
            ]

            component "core/Constant" Constant1 {
                execution_rate = "inherit"
                value = "2"
            }
            [
                position = 9304, 7952
                hide_name = True
            ]

            component "core/Constant" Constant2 {
                execution_rate = "inherit"
            }
            [
                position = 9304, 8040
                hide_name = True
            ]

            component "core/Relational operator" "Relational operator1" {
                relational_op = ">="
            }
            [
                position = 9376, 7920
                hide_name = True
            ]

            component "core/Relational operator" "Relational operator2" {
                relational_op = ">="
            }
            [
                position = 9376, 8008
                hide_name = True
            ]

            component "core/Abs" Abs1 {
            }
            [
                position = 9304, 7912
                hide_name = True
            ]

            component "core/Abs" Abs2 {
            }
            [
                position = 9304, 8000
                hide_name = True
            ]

            component "core/Logical operator" "Logical operator2" {
                operator = "OR"
            }
            [
                position = 9456, 7928
                hide_name = True
            ]

            component "core/Constant" Constant3 {
                execution_rate = "inherit"
                value = "2.674"
            }
            [
                position = 9144, 7952
                hide_name = True
            ]

            component "core/Sum" Sum1 {
                signs = "+-"
            }
            [
                position = 9224, 7912
                hide_name = True
            ]

            component "core/Gain" Gain1 {
                gain = "0.001"
                multiplication = "Matrix(K*u)"
            }
            [
                position = 9144, 7904
                hide_name = True
            ]

            component "core/Sum" Sum2 {
                signs = "+-"
            }
            [
                position = 9224, 8000
                hide_name = True
            ]

            component "core/Constant" Constant4 {
                execution_rate = "inherit"
                value = "-3.08"
            }
            [
                position = 9144, 8032
                hide_name = True
            ]

            component "core/Probe" Ia {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Relay4_Ia"
                streaming_en = "True"
            }
            [
                position = 8160, 7856
            ]

            component "core/Probe" Ic {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Relay4_Ic"
                streaming_en = "True"
            }
            [
                position = 8160, 8016
            ]

            component "core/Probe" Ib {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Relay4_Ib"
                streaming_en = "True"
            }
            [
                position = 8160, 7936
            ]

            component "core/Probe" Va {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Relay4_Va"
                signal_type = "voltage"
                streaming_en = "True"
            }
            [
                position = 7768, 7856
            ]

            component "core/Probe" Vb {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Relay4_Vb"
                signal_type = "voltage"
                streaming_en = "True"
            }
            [
                position = 7768, 7936
            ]

            component "core/Probe" Vc {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Relay4_Vc"
                signal_type = "voltage"
                streaming_en = "True"
            }
            [
                position = 7768, 8016
            ]

            port meter_data {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 7920
            ]

            port Brk_cmd {
                label = "Brk_cmd"
                position = bottom:1
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 9656, 7936
            ]

            port scada_input {
                position = top:3
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8120
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7824, 7912
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7824, 7992
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7824, 7832
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8216, 7912
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8216, 7832
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8216, 7992
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 7920
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from12 {
                value = "Meter1_IaM"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9064, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from13 {
                value = "Meter1_IaP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9128, 7992
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto1 {
                value = "Meter1_IaM"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8216, 8064
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto2 {
                value = "Meter1_IaP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8984, 8048
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto3 {
                value = "input"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7248, 8120
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from14 {
                value = "input"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9488, 7984
                hide_name = True
                size = 60, 20
            ]

            junction Junction1 sp
            [
                position = 8112, 8096
            ]

            junction Junction2 sp
            [
                position = 8856, 8024
            ]

            junction Junction3 sp
            [
                position = 8112, 7856
            ]

            junction Junction4 sp
            [
                position = 8112, 7936
            ]

            junction Junction5 sp
            [
                position = 8112, 8016
            ]

            junction Junction6 sp
            [
                position = 7728, 7856
            ]

            junction Junction7 sp
            [
                position = 7728, 7936
            ]

            junction Junction8 sp
            [
                position = 7728, 8016
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect Va_ph.in "Bus Split.out" as Connection607
            [
                breakpoints = 8840, 7856
            ]
            connect VAn_rms.in "Meter Split1.VAn_RMS" as Connection608
            [
                breakpoints = 7728, 8096
            ]
            connect "Logical operator1.out" Brk_cmd as Connection611
            connect Constant1.out "Relational operator1.in1" as Connection613
            connect Constant2.out "Relational operator2.in1" as Connection614
            connect Abs1.out "Relational operator1.in" as Connection615
            connect Abs2.out "Relational operator2.in" as Connection616
            connect "Logical operator2.in" "Relational operator1.out" as Connection617
            connect "Relational operator2.out" "Logical operator2.in1" as Connection618
            connect "Logical operator2.out" "Logical operator1.in" as Connection619
            connect Sum1.out Abs1.in as Connection620
            connect Constant3.out Sum1.in1 as Connection621
            connect V_REF_from12 Gain1.in as Connection625
            connect Gain1.out Sum1.in as Connection626
            connect Sum2.out Abs2.in as Connection627
            connect Constant4.out Sum2.in1 as Connection628
            connect V_REF_from13 Sum2.in as Connection632
            connect IA_rms.in Junction1 as Connection633
            connect Junction1 "Meter Split2.IA_RMS" as Connection634
            [
                breakpoints = 8112, 8096
            ]
            connect Ia_goto1 Junction1 as Connection635
            connect "Bus Split.out3" Junction2 as Connection636
            connect Junction2 Ia_ph.in as Connection637
            [
                breakpoints = 8856, 8024
            ]
            connect Ia_goto2 Junction2 as Connection638
            connect Ic_goto3 scada_input as Connection639
            connect V_REF_from14 "Logical operator1.in1" as Connection640
            connect Ia.in Junction3 as Connection642
            connect Junction3 "Meter Split2.IA" as Connection643
            connect Ia_goto Junction3 as Connection644
            connect Ib.in Junction4 as Connection646
            connect Junction4 "Meter Split2.IB" as Connection647
            connect Ib_goto Junction4 as Connection648
            connect Ic.in Junction5 as Connection650
            connect Junction5 "Meter Split2.IC" as Connection651
            connect Ic_goto Junction5 as Connection652
            connect Va.in Junction6 as Connection656
            connect Junction6 "Meter Split1.VAn" as Connection657
            connect Va_goto Junction6 as Connection658
            connect Vb.in Junction7 as Connection659
            connect Junction7 "Meter Split1.VBn" as Connection660
            connect Vb_goto Junction7 as Connection661
            connect Vc.in Junction8 as Connection662
            connect Junction8 "Meter Split1.VCn" as Connection663
            connect Vc_goto Junction8 as Connection664
        }
        [
            position = 6928, 8120
            hide_name = True
            size = 104, 80
        ]

        component "core/Ground" gnd4 {
        }
        [
            position = 3720, 8552
        ]

        component "core/Ground" gnd5 {
        }
        [
            position = 6792, 8536
        ]

        component "core/SCADA Input" "relay state 4" {
            execution_rate = "ex_rate"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 6864, 8024
        ]

        component "core/SCADA Input" "relay state 2" {
            execution_rate = "ex_rate"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 3824, 8032
        ]

        component "core/Probe" V_ref {
        }
        [
            position = 2976, 7992
        ]

        component "core/ETH VE Receive" "ETH VE Receive3" {
            configuration = "[{\'signal_name\': \'utc_Year\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'utc_Month\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'utc_Day\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'utc_Hour\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'utc_Minute\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'utc_Second\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}]"
            execution_rate = "ex_rate"
            protocol = "TCP/IP"
            signal_names_dict = ""
            src_ip = "192.168.0.101"
        }
        [
            position = 3624, 7880
            size = 80, 144
        ]

        component "core/Probe" utc_Year1 {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "utc_Year1"
            streaming_en = "True"
        }
        [
            position = 3744, 7792
        ]

        component "core/Probe" utc_Month1 {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "utc_Month1"
            streaming_en = "True"
        }
        [
            position = 3816, 7792
        ]

        component "core/Probe" utc_Day1 {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "utc_Day1"
            streaming_en = "True"
        }
        [
            position = 3888, 7792
        ]

        component "core/Probe" utc_Hour1 {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "utc_Hour1"
            streaming_en = "True"
        }
        [
            position = 3960, 7792
        ]

        component "core/Probe" utc_Minute1 {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "utc_Minute1"
            streaming_en = "True"
        }
        [
            position = 4032, 7792
        ]

        component "core/Probe" utc_Second1 {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "utc_Second1"
            streaming_en = "True"
        }
        [
            position = 4112, 7792
        ]

        component "core/SCADA Input" utc_Year {
            execution_rate = "ex_rate"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 4376, 7760
        ]

        component "core/SCADA Input" utc_Month {
            execution_rate = "ex_rate"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 4376, 7824
        ]

        component "core/SCADA Input" utc_Day {
            execution_rate = "ex_rate"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 4376, 7888
        ]

        component "core/SCADA Input" utc_Hour {
            execution_rate = "ex_rate"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 4376, 7952
        ]

        component "core/SCADA Input" utc_Minute {
            execution_rate = "ex_rate"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 4376, 8016
        ]

        component "core/SCADA Input" utc_Second {
            execution_rate = "ex_rate"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 4376, 8080
        ]

        component "core/Probe" utc_Year2 {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "utc_Year2"
            streaming_en = "True"
        }
        [
            position = 4480, 7760
        ]

        component "core/Probe" utc_Month2 {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "utc_Month2"
            streaming_en = "True"
        }
        [
            position = 4480, 7824
        ]

        component "core/Probe" utc_Day2 {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "utc_Day2"
            streaming_en = "True"
        }
        [
            position = 4480, 7888
        ]

        component "core/Probe" utc_Hour2 {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "utc_Hour2"
            streaming_en = "True"
        }
        [
            position = 4480, 7952
        ]

        component "core/Probe" utc_Minute2 {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "utc_Minute2"
            streaming_en = "True"
        }
        [
            position = 4480, 8016
        ]

        component "core/Probe" utc_Second2 {
            override_signal_name = "True"
            signal_access = "Inherit"
            signal_name = "utc_Second2"
            streaming_en = "True"
        }
        [
            position = 4480, 8080
        ]

        tag V_REF_goto {
            value = "V_REF"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 2880, 7968
            hide_name = True
            size = 60, 20
        ]

        tag Goto701 {
            value = "output1"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 3192, 8464
            hide_name = True
            size = 60, 20
        ]

        tag From701 {
            value = "output1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 2960, 8704
            hide_name = True
            size = 60, 20
        ]

        tag From734 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 2960, 8736
            hide_name = True
            size = 60, 20
        ]

        tag Goto702 {
            value = "output2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 4448, 8464
            hide_name = True
            size = 60, 20
        ]

        tag From735 {
            value = "output2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 4216, 8704
            hide_name = True
            size = 60, 20
        ]

        tag From736 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 4216, 8736
            hide_name = True
            size = 60, 20
        ]

        tag Goto703 {
            value = "output3"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 5400, 8464
            hide_name = True
            size = 60, 20
        ]

        tag From737 {
            value = "output3"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 5168, 8704
            hide_name = True
            size = 60, 20
        ]

        tag From738 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 5168, 8736
            hide_name = True
            size = 60, 20
        ]

        tag Goto704 {
            value = "output4"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 7352, 8464
            hide_name = True
            size = 60, 20
        ]

        tag From739 {
            value = "output4"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 7120, 8704
            hide_name = True
            size = 60, 20
        ]

        tag From740 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 7120, 8736
            hide_name = True
            size = 60, 20
        ]

        tag Goto705 {
            value = "output5"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8440, 8464
            hide_name = True
            size = 60, 20
        ]

        tag From741 {
            value = "output5"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8208, 8704
            hide_name = True
            size = 60, 20
        ]

        tag From742 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8208, 8736
            hide_name = True
            size = 60, 20
        ]

        tag Goto706 {
            value = "output6"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9336, 8464
            hide_name = True
            size = 60, 20
        ]

        tag From743 {
            value = "output6"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9104, 8704
            hide_name = True
            size = 60, 20
        ]

        tag From744 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9104, 8736
            hide_name = True
            size = 60, 20
        ]

        tag Goto707 {
            value = "output7"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 10048, 8464
            hide_name = True
            size = 60, 20
        ]

        tag From745 {
            value = "output7"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9816, 8704
            hide_name = True
            size = 60, 20
        ]

        tag From746 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9816, 8736
            hide_name = True
            size = 60, 20
        ]

        tag Goto708 {
            value = "output15"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 5664, 9824
            hide_name = True
            size = 60, 20
        ]

        tag From747 {
            value = "output15"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 5432, 10064
            hide_name = True
            size = 60, 20
        ]

        tag From748 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 5432, 10096
            hide_name = True
            size = 60, 20
        ]

        tag Goto709 {
            value = "output16"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 6544, 9824
            hide_name = True
            size = 60, 20
        ]

        tag From749 {
            value = "output16"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 6312, 10064
            hide_name = True
            size = 60, 20
        ]

        tag From750 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 6312, 10096
            hide_name = True
            size = 60, 20
        ]

        tag Goto710 {
            value = "output17"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 7312, 9824
            hide_name = True
            size = 60, 20
        ]

        tag From751 {
            value = "output17"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 7080, 10064
            hide_name = True
            size = 60, 20
        ]

        tag From752 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 7080, 10096
            hide_name = True
            size = 60, 20
        ]

        tag Goto711 {
            value = "output18"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8088, 9824
            hide_name = True
            size = 60, 20
        ]

        tag From753 {
            value = "output18"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 7856, 10064
            hide_name = True
            size = 60, 20
        ]

        tag From754 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 7856, 10096
            hide_name = True
            size = 60, 20
        ]

        tag Goto712 {
            value = "output19"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9072, 9824
            hide_name = True
            size = 60, 20
        ]

        tag From755 {
            value = "output19"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8840, 10064
            hide_name = True
            size = 60, 20
        ]

        tag From756 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8840, 10096
            hide_name = True
            size = 60, 20
        ]

        tag Goto713 {
            value = "output20"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9856, 9824
            hide_name = True
            size = 60, 20
        ]

        tag From757 {
            value = "output20"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9624, 10064
            hide_name = True
            size = 60, 20
        ]

        tag From758 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9624, 10096
            hide_name = True
            size = 60, 20
        ]

        tag Goto714 {
            value = "output21"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 10544, 9824
            hide_name = True
            size = 60, 20
        ]

        tag From759 {
            value = "output21"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10312, 10064
            hide_name = True
            size = 60, 20
        ]

        tag From760 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10312, 10096
            hide_name = True
            size = 60, 20
        ]

        tag From761 {
            value = "Meter1_IaM"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4384, 7328
            hide_name = True
            size = 76, 20
        ]

        tag From762 {
            value = "Meter2_IaM"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4384, 7352
            hide_name = True
            size = 76, 20
        ]

        tag From763 {
            value = "Meter3_IaM"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4384, 7376
            hide_name = True
            size = 76, 20
        ]

        tag From764 {
            value = "Meter4_IaM"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4384, 7400
            hide_name = True
            size = 76, 20
        ]

        tag From765 {
            value = "Meter5_IaM"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4384, 7424
            hide_name = True
            size = 76, 20
        ]

        tag From766 {
            value = "Meter6_IaM"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4384, 7448
            hide_name = True
            size = 76, 20
        ]

        tag From767 {
            value = "Meter7_IaM"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4384, 7472
            hide_name = True
            size = 76, 20
        ]

        tag From768 {
            value = "Meter15_IaM"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4384, 7496
            hide_name = True
            size = 76, 20
        ]

        tag From769 {
            value = "Meter16_IaM"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4384, 7520
            hide_name = True
            size = 76, 20
        ]

        tag From770 {
            value = "Meter17_IaM"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4384, 7544
            hide_name = True
            size = 76, 20
        ]

        tag From771 {
            value = "Meter18_IaM"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4384, 7568
            hide_name = True
            size = 76, 20
        ]

        tag From772 {
            value = "Meter19_IaM"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4384, 7592
            hide_name = True
            size = 76, 20
        ]

        tag From773 {
            value = "Meter20_IaM"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4384, 7616
            hide_name = True
            size = 76, 20
        ]

        tag From774 {
            value = "Meter21_IaM"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4384, 7640
            hide_name = True
            size = 76, 20
        ]

        tag From775 {
            value = "Meter1_IaP"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4752, 7328
            hide_name = True
            size = 76, 20
        ]

        tag From776 {
            value = "Meter2_IaP"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4752, 7352
            hide_name = True
            size = 76, 20
        ]

        tag From777 {
            value = "Meter3_IaP"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4752, 7376
            hide_name = True
            size = 76, 20
        ]

        tag From778 {
            value = "Meter4_IaP"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4752, 7400
            hide_name = True
            size = 76, 20
        ]

        tag From779 {
            value = "Meter5_IaP"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4752, 7424
            hide_name = True
            size = 76, 20
        ]

        tag From780 {
            value = "Meter6_IaP"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4752, 7448
            hide_name = True
            size = 76, 20
        ]

        tag From781 {
            value = "Meter7_IaP"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4752, 7472
            hide_name = True
            size = 76, 20
        ]

        tag From782 {
            value = "Meter15_IaP"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4752, 7496
            hide_name = True
            size = 76, 20
        ]

        tag From783 {
            value = "Meter16_IaP"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4752, 7520
            hide_name = True
            size = 76, 20
        ]

        tag From784 {
            value = "Meter17_IaP"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4752, 7544
            hide_name = True
            size = 76, 20
        ]

        tag From785 {
            value = "Meter18_IaP"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4752, 7568
            hide_name = True
            size = 76, 20
        ]

        tag From786 {
            value = "Meter19_IaP"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4752, 7592
            hide_name = True
            size = 76, 20
        ]

        tag From787 {
            value = "Meter20_IaP"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4752, 7616
            hide_name = True
            size = 76, 20
        ]

        tag From788 {
            value = "Meter21_IaP"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 4752, 7640
            hide_name = True
            size = 76, 20
        ]

        tag From795 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 3744, 8104
            hide_name = True
            size = 60, 20
        ]

        tag From796 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 6816, 8104
            hide_name = True
            size = 60, 20
        ]

        junction Junction1081 sp
        [
            position = 2800, 7968
        ]

        junction Junction1418 pe
        [
            position = 3104, 8352
        ]

        junction Junction1424 pe
        [
            position = 5312, 8352
        ]

        junction Junction1425 pe
        [
            position = 5288, 8368
        ]

        junction Junction1426 pe
        [
            position = 5264, 8384
        ]

        junction Junction1433 pe
        [
            position = 8000, 8352
        ]

        junction Junction1434 pe
        [
            position = 7976, 8368
        ]

        junction Junction1435 pe
        [
            position = 7952, 8384
        ]

        junction Junction1436 pe
        [
            position = 8352, 8352
        ]

        junction Junction1437 pe
        [
            position = 8328, 8368
        ]

        junction Junction1438 pe
        [
            position = 8304, 8384
        ]

        junction Junction1439 pe
        [
            position = 9248, 8352
        ]

        junction Junction1440 pe
        [
            position = 9224, 8368
        ]

        junction Junction1441 pe
        [
            position = 9200, 8384
        ]

        junction Junction1445 pe
        [
            position = 6456, 9704
        ]

        junction Junction1446 pe
        [
            position = 6432, 9720
        ]

        junction Junction1447 pe
        [
            position = 6408, 9736
        ]

        junction Junction1448 pe
        [
            position = 7224, 9704
        ]

        junction Junction1449 pe
        [
            position = 7200, 9720
        ]

        junction Junction1450 pe
        [
            position = 7176, 9736
        ]

        junction Junction1451 pe
        [
            position = 8000, 9704
        ]

        junction Junction1452 pe
        [
            position = 7976, 9720
        ]

        junction Junction1453 pe
        [
            position = 7952, 9736
        ]

        junction Junction1454 pe
        [
            position = 8672, 9704
        ]

        junction Junction1455 pe
        [
            position = 8640, 9720
        ]

        junction Junction1456 pe
        [
            position = 8608, 9736
        ]

        junction Junction1457 pe
        [
            position = 8984, 9704
        ]

        junction Junction1458 pe
        [
            position = 8960, 9720
        ]

        junction Junction1459 pe
        [
            position = 8936, 9736
        ]

        junction Junction1460 pe
        [
            position = 9768, 9704
        ]

        junction Junction1461 pe
        [
            position = 9744, 9720
        ]

        junction Junction1462 pe
        [
            position = 9720, 9736
        ]

        junction Junction1493 pe
        [
            position = 5552, 9720
        ]

        junction Junction1494 pe
        [
            position = 5576, 9704
        ]

        junction Junction1495 pe
        [
            position = 5528, 9736
        ]

        junction Junction1496 pe
        [
            position = 4952, 9912
        ]

        junction Junction1506 pe
        [
            position = 4360, 8352
        ]

        junction Junction1507 pe
        [
            position = 4336, 8368
        ]

        junction Junction1508 pe
        [
            position = 4312, 8384
        ]

        junction Junction1509 pe
        [
            position = 7264, 8352
        ]

        junction Junction1510 pe
        [
            position = 7240, 8368
        ]

        junction Junction1511 pe
        [
            position = 7216, 8384
        ]

        junction Junction1512 sp
        [
            position = 2824, 7968
        ]

        junction Junction1514 pe
        [
            position = 2384, 8368
        ]

        junction Junction1515 pe
        [
            position = 2896, 8352
        ]

        junction Junction1516 pe
        [
            position = 3080, 8368
        ]

        junction Junction1517 pe
        [
            position = 3056, 8384
        ]

        junction Junction1518 pe
        [
            position = 2384, 8664
        ]

        comment Comment26 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:18pt;">115kV LINE VOLTAGE</span></p></body></html> ENDCOMMENT 
        [
            position = 2144, 8176
        ]

        comment Comment18 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Substation 1</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">D115kV/Yg22kV</p></body></html> ENDCOMMENT 
        [
            position = 2600, 8120
        ]

        comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus MV1 </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 1W</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 1Var</p></body></html> ENDCOMMENT 
        [
            position = 3040, 8248
        ]

        comment Comment27 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus MV2 </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 38.59MW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 5.42MVar</p></body></html> ENDCOMMENT 
        [
            position = 4272, 8256
        ]

        comment Comment29 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus MV3</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 38.59MW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 5.42MVar</p></body></html> ENDCOMMENT 
        [
            position = 5224, 8256
        ]

        comment Comment30 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus MV5</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 38.15MW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 5.47MVar</p></body></html> ENDCOMMENT 
        [
            position = 8280, 8256
        ]

        comment Comment33 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:18pt;">120kV LINE VOLTAGE</span> </p></body></html> ENDCOMMENT 
        [
            position = 4712, 9600
        ]

        comment Comment34 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Substation 3</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">D120kV/Yg22kV    </p></body></html> ENDCOMMENT 
        [
            position = 5184, 9520
        ]

        comment Comment35 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus MV15 </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 1W</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 1W     </p></body></html> ENDCOMMENT 
        [
            position = 5504, 9608
        ]

        comment Comment36 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus MV16 </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 38.59MW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 5.42MW</p></body></html> ENDCOMMENT 
        [
            position = 6376, 9608
        ]

        comment Comment42 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:36pt;">NOP3</span></p></body></html> ENDCOMMENT 
        [
            position = 7744, 9128
        ]

        comment Comment56 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">slack bus </p></body></html> ENDCOMMENT 
        [
            position = 2912, 8416
        ]

        comment Comment58 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus MV6</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 30.05MW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 5.19MVar</p></body></html> ENDCOMMENT 
        [
            position = 9168, 8256
        ]

        comment Comment59 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:36pt;">NOP2</span> </p></body></html> ENDCOMMENT 
        [
            position = 10168, 8208
        ]

        comment Comment60 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:36pt;">NOP1</span> </p></body></html> ENDCOMMENT 
        [
            position = 7576, 8176
        ]

        comment Comment62 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus MV19 </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 32.82MW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 5.02MW</p></body></html> ENDCOMMENT 
        [
            position = 8904, 9600
        ]

        comment Comment63 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus MV20</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 38.59MW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 5.42MW</p></body></html> ENDCOMMENT 
        [
            position = 9680, 9608
        ]

        comment Comment64 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:36pt;">Fault</span>  </p></body></html> ENDCOMMENT 
        [
            position = 5952, 8120
        ]

        comment Comment65 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus MV4</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 34.95MW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 5.11MVar</p></body></html> ENDCOMMENT 
        [
            position = 7192, 8256
        ]

        comment Comment66 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus MV17 </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 38.15MW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 5.47MW  </p></body></html> ENDCOMMENT 
        [
            position = 7144, 9608
        ]

        comment Comment67 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus MV18 </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 27.46MW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 5.35MW</p></body></html> ENDCOMMENT 
        [
            position = 7928, 9616
        ]

        comment Comment68 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus MV21</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 38.59MW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 5.42MW</p></body></html> ENDCOMMENT 
        [
            position = 10360, 9608
        ]

        comment Comment69 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus MV7</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = -29.05MW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = -3.10MVar</p></body></html> ENDCOMMENT 
        [
            position = 9880, 8264
        ]

        comment Comment70 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">CB2</p></body></html> ENDCOMMENT 
        [
            position = 5384, 9768
        ]

        comment Comment71 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">CB1</p></body></html> ENDCOMMENT 
        [
            position = 2800, 8416
        ]

        comment Comment55 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Voltage reference</p></body></html> ENDCOMMENT 
        [
            position = 2784, 7832
        ]

        connect gps.in "Time Synchronization Status1.GPS" as Connection141
        connect "Time Synchronization Status1.PTP" ptp.in as Connection142
        connect Substation_D-Yg2.prm_1 HV3.a_node as Connection363
        connect Substation_D-Yg2.prm_2 HV3.b_node as Connection364
        connect Substation_D-Yg2.prm_3 HV3.c_node as Connection365
        connect "switch state 3.out" NOP3.ctrl_in as Connection444
        connect L3-4_1.P3 fault1.P2 as Connection9211
        connect fault1.P1 L3-4_1.P1 as Connection9212
        connect L3-4_1.P5 fault1.P3 as Connection9213
        connect L3-4_2.P4 fault1.P6 as Connection9225
        connect fault1.P5 L3-4_2.P2 as Connection9226
        connect fault1.P7 L3-4_2.P6 as Connection9227
        connect L5-19.P4 NOP3.b_out as Connection9453
        connect L5-19.P2 NOP3.a_out as Connection9454
        connect L5-19.P6 NOP3.c_out as Connection9455
        connect Junction1081 Vref.out as Connection7523
        connect "RMS value1.in" Junction1081 as Connection7524
        connect Vref_rms.in "RMS value1.out" as Connection7525
        connect From701 Meter1.meter_data as Connection4196
        connect 3ph_Meter1.A- Pg1.A as Connection6817
        connect 3ph_Meter1.B- Pg1.B as Connection6818
        connect 3ph_Meter1.C- Pg1.C as Connection6819
        connect Pg1.N 3ph_Meter1.GND as Connection6820
        connect Goto701 3ph_Meter1.Out as Connection6821
        connect From734 Meter1.ref as Connection6822
        connect L1-2.P2 Junction1418 as Connection9608
        connect 3ph_Meter1.A+ Junction1418 as Connection9610
        connect From735 Meter2.meter_data as Connection9620
        connect 3ph_Meter2.A- Pg2.A as Connection9621
        connect 3ph_Meter2.B- Pg2.B as Connection9622
        connect 3ph_Meter2.C- Pg2.C as Connection9623
        connect Goto702 3ph_Meter2.Out as Connection9625
        connect From736 Meter2.ref as Connection9626
        connect From737 Meter3.meter_data as Connection9636
        connect 3ph_Meter3.A- Pg3.A as Connection9637
        connect 3ph_Meter3.B- Pg3.B as Connection9638
        connect 3ph_Meter3.C- Pg3.C as Connection9639
        connect Pg3.N 3ph_Meter3.GND as Connection9640
        connect Goto703 3ph_Meter3.Out as Connection9641
        connect From738 Meter3.ref as Connection9642
        connect L2-3.P1 Junction1424 as Connection9646
        connect Junction1424 L3-4_1.P2 as Connection9647
        connect 3ph_Meter3.A+ Junction1424 as Connection9648
        connect L3-4_1.P4 Junction1425 as Connection9649
        connect Junction1425 L2-3.P3 as Connection9650
        connect 3ph_Meter3.B+ Junction1425 as Connection9651
        connect L2-3.P5 Junction1426 as Connection9652
        connect Junction1426 L3-4_1.P6 as Connection9653
        connect 3ph_Meter3.C+ Junction1426 as Connection9654
        connect From739 Meter4.meter_data as Connection9656
        connect 3ph_Meter4.A- Pg4.A as Connection9657
        connect 3ph_Meter4.B- Pg4.B as Connection9658
        connect 3ph_Meter4.C- Pg4.C as Connection9659
        connect Goto704 3ph_Meter4.Out as Connection9661
        connect From740 Meter4.ref as Connection9662
        connect From741 Meter5.meter_data as Connection9679
        connect 3ph_Meter5.A- Pg5.A as Connection9680
        connect 3ph_Meter5.B- Pg5.B as Connection9681
        connect 3ph_Meter5.C- Pg5.C as Connection9682
        connect Pg5.N 3ph_Meter5.GND as Connection9683
        connect Goto705 3ph_Meter5.Out as Connection9684
        connect From742 Meter5.ref as Connection9685
        connect NOP3.a_in Junction1433 as Connection9698
        connect Junction1433 L4-5.P1 as Connection9699
        [
            breakpoints = 8000, 8352
        ]
        connect NOP3.b_in Junction1434 as Connection9701
        connect Junction1434 L4-5.P3 as Connection9702
        [
            breakpoints = 7976, 8368
        ]
        connect L4-5.P5 Junction1435 as Connection9704
        connect Junction1435 NOP3.c_in as Connection9705
        [
            breakpoints = 7952, 8384
        ]
        connect L5-6.P2 Junction1436 as Connection9707
        connect Junction1436 Junction1433 as Connection9708
        connect 3ph_Meter5.A+ Junction1436 as Connection9709
        connect L5-6.P4 Junction1437 as Connection9710
        connect Junction1437 Junction1434 as Connection9711
        connect 3ph_Meter5.B+ Junction1437 as Connection9712
        connect L5-6.P6 Junction1438 as Connection9713
        connect Junction1438 Junction1435 as Connection9714
        connect 3ph_Meter5.C+ Junction1438 as Connection9715
        connect From743 Meter6.meter_data as Connection9716
        connect 3ph_Meter6.A- Pg6.A as Connection9717
        connect 3ph_Meter6.B- Pg6.B as Connection9718
        connect 3ph_Meter6.C- Pg6.C as Connection9719
        connect Pg6.N 3ph_Meter6.GND as Connection9720
        connect Goto706 3ph_Meter6.Out as Connection9721
        connect From744 Meter6.ref as Connection9722
        connect From745 Meter7.meter_data as Connection9723
        connect 3ph_Meter7.A- Pg7.A as Connection9724
        connect 3ph_Meter7.B- Pg7.B as Connection9725
        connect 3ph_Meter7.C- Pg7.C as Connection9726
        connect Pg7.N 3ph_Meter7.GND as Connection9727
        connect Goto707 3ph_Meter7.Out as Connection9728
        connect From746 Meter7.ref as Connection9729
        connect L6-7.P2 Junction1439 as Connection9733
        connect Junction1439 L5-6.P1 as Connection9734
        connect 3ph_Meter6.A+ Junction1439 as Connection9735
        connect L6-7.P4 Junction1440 as Connection9736
        connect Junction1440 L5-6.P3 as Connection9737
        connect 3ph_Meter6.B+ Junction1440 as Connection9738
        connect L6-7.P6 Junction1441 as Connection9739
        connect Junction1441 L5-6.P5 as Connection9740
        connect 3ph_Meter6.C+ Junction1441 as Connection9741
        connect L6-7.P1 3ph_Meter7.A+ as Connection9742
        connect L6-7.P3 3ph_Meter7.B+ as Connection9743
        connect L6-7.P5 3ph_Meter7.C+ as Connection9744
        connect From747 Meter15.meter_data as Connection9749
        connect 3ph_Meter15.A- Pg15.A as Connection9750
        connect 3ph_Meter15.B- Pg15.B as Connection9751
        connect 3ph_Meter15.C- Pg15.C as Connection9752
        connect Pg15.N 3ph_Meter15.GND as Connection9753
        connect Goto708 3ph_Meter15.Out as Connection9754
        connect From748 Meter15.ref as Connection9755
        connect From749 Meter16.meter_data as Connection9765
        connect 3ph_Meter16.A- Pg16.A as Connection9766
        connect 3ph_Meter16.B- Pg16.B as Connection9767
        connect 3ph_Meter16.C- Pg16.C as Connection9768
        connect Pg16.N 3ph_Meter16.GND as Connection9769
        connect Goto709 3ph_Meter16.Out as Connection9770
        connect From750 Meter16.ref as Connection9771
        connect L16-17.P2 Junction1445 as Connection9775
        connect Junction1445 L15-16.P1 as Connection9776
        connect 3ph_Meter16.A+ Junction1445 as Connection9777
        connect L16-17.P4 Junction1446 as Connection9778
        connect Junction1446 L15-16.P3 as Connection9779
        connect 3ph_Meter16.B+ Junction1446 as Connection9780
        connect L15-16.P5 Junction1447 as Connection9781
        connect Junction1447 L16-17.P6 as Connection9782
        connect 3ph_Meter16.C+ Junction1447 as Connection9783
        connect From751 Meter17.meter_data as Connection9784
        connect 3ph_Meter17.A- Pg17.A as Connection9785
        connect 3ph_Meter17.B- Pg17.B as Connection9786
        connect 3ph_Meter17.C- Pg17.C as Connection9787
        connect Pg17.N 3ph_Meter17.GND as Connection9788
        connect Goto710 3ph_Meter17.Out as Connection9789
        connect From752 Meter17.ref as Connection9790
        connect L16-17.P1 Junction1448 as Connection9794
        connect Junction1448 L17-18.P2 as Connection9795
        connect 3ph_Meter17.A+ Junction1448 as Connection9796
        connect L17-18.P4 Junction1449 as Connection9797
        connect Junction1449 L16-17.P3 as Connection9798
        connect 3ph_Meter17.B+ Junction1449 as Connection9799
        connect L16-17.P5 Junction1450 as Connection9800
        connect Junction1450 L17-18.P6 as Connection9801
        connect 3ph_Meter17.C+ Junction1450 as Connection9802
        connect From753 Meter18.meter_data as Connection9806
        connect 3ph_Meter18.A- Pg18.A as Connection9807
        connect 3ph_Meter18.B- Pg18.B as Connection9808
        connect 3ph_Meter18.C- Pg18.C as Connection9809
        connect Pg18.N 3ph_Meter18.GND as Connection9810
        connect Goto711 3ph_Meter18.Out as Connection9811
        connect From754 Meter18.ref as Connection9812
        connect L17-18.P1 Junction1451 as Connection9813
        connect Junction1451 L18-19.P2 as Connection9814
        connect 3ph_Meter18.A+ Junction1451 as Connection9815
        connect L18-19.P4 Junction1452 as Connection9816
        connect Junction1452 L17-18.P3 as Connection9817
        connect 3ph_Meter18.B+ Junction1452 as Connection9818
        connect L17-18.P5 Junction1453 as Connection9819
        connect Junction1453 L18-19.P6 as Connection9820
        connect 3ph_Meter18.C+ Junction1453 as Connection9821
        connect L18-19.P1 Junction1454 as Connection9826
        connect Junction1454 L5-19.P1 as Connection9827
        [
            breakpoints = 8672, 9704
        ]
        connect L18-19.P3 Junction1455 as Connection9829
        connect Junction1455 L5-19.P3 as Connection9830
        [
            breakpoints = 8640, 9720; 8640, 9720
        ]
        connect L18-19.P5 Junction1456 as Connection9832
        [
            breakpoints = 8592, 9736
        ]
        connect Junction1456 L5-19.P5 as Connection9833
        [
            breakpoints = 8608, 9736
        ]
        connect From755 Meter19.meter_data as Connection9835
        connect 3ph_Meter19.A- Pg19.A as Connection9836
        connect 3ph_Meter19.B- Pg19.B as Connection9837
        connect 3ph_Meter19.C- Pg19.C as Connection9838
        connect Pg19.N 3ph_Meter19.GND as Connection9839
        connect Goto712 3ph_Meter19.Out as Connection9840
        connect From756 Meter19.ref as Connection9841
        connect L19-20.P2 Junction1457 as Connection9842
        connect Junction1457 Junction1454 as Connection9843
        connect 3ph_Meter19.A+ Junction1457 as Connection9844
        connect L19-20.P4 Junction1458 as Connection9845
        connect Junction1458 Junction1455 as Connection9846
        connect 3ph_Meter19.B+ Junction1458 as Connection9847
        connect L19-20.P6 Junction1459 as Connection9848
        connect Junction1459 Junction1456 as Connection9849
        connect 3ph_Meter19.C+ Junction1459 as Connection9850
        connect From757 Meter20.meter_data as Connection9851
        connect 3ph_Meter20.A- Pg20.A as Connection9852
        connect 3ph_Meter20.B- Pg20.B as Connection9853
        connect 3ph_Meter20.C- Pg20.C as Connection9854
        connect Pg20.N 3ph_Meter20.GND as Connection9855
        connect Goto713 3ph_Meter20.Out as Connection9856
        connect From758 Meter20.ref as Connection9857
        connect From759 Meter21.meter_data as Connection9858
        connect 3ph_Meter21.A- Pg21.A as Connection9859
        connect 3ph_Meter21.B- Pg21.B as Connection9860
        connect 3ph_Meter21.C- Pg21.C as Connection9861
        connect Pg21.N 3ph_Meter21.GND as Connection9862
        connect Goto714 3ph_Meter21.Out as Connection9863
        connect From760 Meter21.ref as Connection9864
        connect L20-21.P1 3ph_Meter21.A+ as Connection9865
        connect L20-21.P3 3ph_Meter21.B+ as Connection9866
        connect L20-21.P5 3ph_Meter21.C+ as Connection9867
        connect L20-21.P2 Junction1460 as Connection9871
        connect Junction1460 L19-20.P1 as Connection9872
        connect 3ph_Meter20.A+ Junction1460 as Connection9873
        connect L19-20.P3 Junction1461 as Connection9874
        connect Junction1461 L20-21.P4 as Connection9875
        connect 3ph_Meter20.B+ Junction1461 as Connection9876
        connect L20-21.P6 Junction1462 as Connection9877
        connect Junction1462 L19-20.P5 as Connection9878
        connect 3ph_Meter20.C+ Junction1462 as Connection9879
        connect input1.out "fault1.Fault in" as Connection9884
        [
            breakpoints = 6024, 8272
        ]
        connect Meter14_IaM.in "ETH VE Receive1.Meter14_IaM" as Connection9886
        connect Meter13_IaM.in "ETH VE Receive1.Meter13_IaM" as Connection9887
        [
            breakpoints = 3760, 7280; 3760, 7336
        ]
        connect Meter12_IaM.in "ETH VE Receive1.Meter12_IaM" as Connection9890
        [
            breakpoints = 3840, 7280; 3840, 7352
        ]
        connect Meter11_IaM.in "ETH VE Receive1.Meter11_IaM" as Connection9891
        [
            breakpoints = 3920, 7280; 3920, 7368
        ]
        connect Meter10_IaM.in "ETH VE Receive1.Meter10_IaM" as Connection9892
        [
            breakpoints = 4000, 7280; 4000, 7384
        ]
        connect Meter9_IaM.in "ETH VE Receive1.Meter9_IaM" as Connection9893
        [
            breakpoints = 4080, 7280; 4080, 7400
        ]
        connect Meter8_IaM.in "ETH VE Receive1.Meter8_IaM" as Connection9894
        [
            breakpoints = 4160, 7280; 4160, 7416
        ]
        connect Meter14_IaP.in "ETH VE Receive2.Meter14_IaP" as Connection9895
        connect Meter13_IaP.in "ETH VE Receive2.Meter13_IaP" as Connection9896
        [
            breakpoints = 3760, 7528; 3760, 7584
        ]
        connect Meter12_IaP.in "ETH VE Receive2.Meter12_IaP" as Connection9897
        [
            breakpoints = 3840, 7528; 3840, 7600
        ]
        connect Meter11_IaP.in "ETH VE Receive2.Meter11_IaP" as Connection9898
        [
            breakpoints = 3920, 7528; 3920, 7616
        ]
        connect Meter10_IaP.in "ETH VE Receive2.Meter10_IaP" as Connection9899
        [
            breakpoints = 4000, 7528; 4000, 7632
        ]
        connect Meter9_IaP.in "ETH VE Receive2.Meter9_IaP" as Connection9900
        [
            breakpoints = 4080, 7528; 4080, 7648
        ]
        connect Meter8_IaP.in "ETH VE Receive2.Meter8_IaP" as Connection9901
        [
            breakpoints = 4160, 7528; 4160, 7664
        ]
        connect "ETH VE Send1.Meter1_IaM" From761 as Connection9902
        [
            breakpoints = 4480, 7376; 4480, 7328
        ]
        connect From762 "ETH VE Send1.Meter2_IaM" as Connection9903
        [
            breakpoints = 4472, 7352; 4472, 7392
        ]
        connect From763 "ETH VE Send1.Meter3_IaM" as Connection9904
        [
            breakpoints = 4464, 7376; 4464, 7408
        ]
        connect From764 "ETH VE Send1.Meter4_IaM" as Connection9905
        [
            breakpoints = 4456, 7400; 4456, 7424
        ]
        connect From765 "ETH VE Send1.Meter5_IaM" as Connection9906
        [
            breakpoints = 4448, 7424; 4448, 7440
        ]
        connect From767 "ETH VE Send1.Meter7_IaM" as Connection9908
        connect "ETH VE Send1.Meter6_IaM" From766 as Connection9909
        connect "ETH VE Send1.Meter15_IaM" From768 as Connection9910
        connect "ETH VE Send1.Meter16_IaM" From769 as Connection9911
        [
            breakpoints = 4448, 7504; 4448, 7520
        ]
        connect From770 "ETH VE Send1.Meter17_IaM" as Connection9912
        [
            breakpoints = 4456, 7544; 4456, 7520
        ]
        connect From771 "ETH VE Send1.Meter18_IaM" as Connection9913
        [
            breakpoints = 4464, 7568; 4464, 7536
        ]
        connect From772 "ETH VE Send1.Meter19_IaM" as Connection9914
        [
            breakpoints = 4472, 7592; 4472, 7552
        ]
        connect From773 "ETH VE Send1.Meter20_IaM" as Connection9915
        [
            breakpoints = 4480, 7616; 4480, 7568
        ]
        connect From774 "ETH VE Send1.Meter21_IaM" as Connection9916
        [
            breakpoints = 4488, 7640; 4488, 7584
        ]
        connect "ETH VE Send2.Meter1_IaP" From775 as Connection9917
        [
            breakpoints = 4848, 7376; 4848, 7328
        ]
        connect From776 "ETH VE Send2.Meter2_IaP" as Connection9918
        [
            breakpoints = 4840, 7352; 4840, 7392
        ]
        connect From777 "ETH VE Send2.Meter3_IaP" as Connection9919
        [
            breakpoints = 4832, 7376; 4832, 7408
        ]
        connect From778 "ETH VE Send2.Meter4_IaP" as Connection9920
        [
            breakpoints = 4824, 7400; 4824, 7424
        ]
        connect From779 "ETH VE Send2.Meter5_IaP" as Connection9921
        [
            breakpoints = 4816, 7424; 4816, 7440
        ]
        connect From781 "ETH VE Send2.Meter7_IaP" as Connection9922
        connect "ETH VE Send2.Meter6_IaP" From780 as Connection9923
        connect "ETH VE Send2.Meter15_IaP" From782 as Connection9924
        connect "ETH VE Send2.Meter16_IaP" From783 as Connection9925
        [
            breakpoints = 4816, 7504; 4816, 7520
        ]
        connect From784 "ETH VE Send2.Meter17_IaP" as Connection9926
        [
            breakpoints = 4824, 7544; 4824, 7520
        ]
        connect From785 "ETH VE Send2.Meter18_IaP" as Connection9927
        [
            breakpoints = 4832, 7568; 4832, 7536
        ]
        connect From786 "ETH VE Send2.Meter19_IaP" as Connection9928
        [
            breakpoints = 4840, 7592; 4840, 7552
        ]
        connect From787 "ETH VE Send2.Meter20_IaP" as Connection9929
        [
            breakpoints = 4848, 7616; 4848, 7568
        ]
        connect From788 "ETH VE Send2.Meter21_IaP" as Connection9930
        [
            breakpoints = 4856, 7640; 4856, 7584
        ]
        connect L15-16.P4 Junction1493 as Connection10339
        connect Junction1493 3ph_Meter15.B+ as Connection10340
        [
            breakpoints = 5552, 9720; 5552, 9720
        ]
        connect Substation_D-Yg2.sec_2 Junction1493 as Connection10341
        connect 3ph_Meter15.A+ Junction1494 as Connection10342
        connect Junction1494 L15-16.P2 as Connection10343
        [
            breakpoints = 5576, 9704; 5576, 9704
        ]
        connect Substation_D-Yg2.sec_1 Junction1494 as Connection10344
        [
            breakpoints = 5328, 9624; 5328, 9704
        ]
        connect 3ph_Meter15.C+ Junction1495 as Connection10345
        connect Junction1495 L15-16.P6 as Connection10346
        [
            breakpoints = 5528, 9736; 5528, 9736
        ]
        connect Substation_D-Yg2.sec_3 Junction1495 as Connection10347
        [
            breakpoints = 5328, 9816; 5328, 9736
        ]
        connect HV3.n_node Junction1496 as Connection10349
        connect Junction1496 gnd2.node as Connection10350
        connect Substation_D-Yg2.n2 Junction1496 as Connection10351
        connect L1-2.P3 3ph_Meter22.B+ as Connection10355
        connect L1-2.P1 3ph_Meter22.A+ as Connection10356
        connect L1-2.P5 3ph_Meter22.C+ as Connection10357
        connect From795 Meter22.ref as Connection10368
        connect Meter22.meter_data 3ph_Meter22.Out as Connection10369
        connect From796 Meter23.ref as Connection10380
        connect Meter23.meter_data 3ph_Meter23.Out as Connection10381
        connect relay2.b_in 3ph_Meter22.B- as Connection10408
        connect 3ph_Meter22.A- relay2.a_in as Connection10409
        [
            breakpoints = 3760, 8352; 3840, 8352
        ]
        connect 3ph_Meter2.A+ Junction1506 as Connection10410
        connect Junction1506 L2-3.P2 as Connection10411
        [
            breakpoints = 4360, 8352; 4360, 8352; 4360, 8352; 4360, 8352; 4360, 8352
        ]
        connect relay2.a_out Junction1506 as Connection10412
        [
            breakpoints = 3936, 8352; 4360, 8352
        ]
        connect L2-3.P4 Junction1507 as Connection10413
        connect Junction1507 3ph_Meter2.B+ as Connection10414
        [
            breakpoints = 4336, 8368; 4336, 8368; 4336, 8368; 4336, 8368; 4336, 8368
        ]
        connect relay2.b_out Junction1507 as Connection10415
        connect 3ph_Meter2.C+ Junction1508 as Connection10416
        connect Junction1508 L2-3.P6 as Connection10417
        [
            breakpoints = 4312, 8384; 4312, 8384; 4312, 8384; 4312, 8384; 4312, 8384
        ]
        connect relay2.c_out Junction1508 as Connection10418
        [
            breakpoints = 3936, 8384; 4272, 8384
        ]
        connect 3ph_Meter22.C- relay2.c_in as Connection10419
        [
            breakpoints = 3760, 8384; 3840, 8384
        ]
        connect 3ph_Meter23.B- relay4.b_in as Connection10423
        connect 3ph_Meter23.A- relay4.a_in as Connection10424
        [
            breakpoints = 6832, 8352; 6880, 8352
        ]
        connect 3ph_Meter23.C- relay4.c_in as Connection10425
        [
            breakpoints = 6832, 8384; 6880, 8384
        ]
        connect gnd3.node fault1.P8 as Connection10435
        connect Pg2.N 3ph_Meter2.GND as Connection10436
        [
            breakpoints = 4272, 8568
        ]
        connect 3ph_Meter22.GND gnd4.node as Connection10437
        connect Pg4.N 3ph_Meter4.GND as Connection10438
        [
            breakpoints = 7176, 8576
        ]
        connect gnd5.node 3ph_Meter23.GND as Connection10439
        connect 3ph_Meter23.B+ L3-4_2.P3 as Connection10440
        connect L3-4_2.P1 3ph_Meter23.A+ as Connection10441
        connect L3-4_2.P5 3ph_Meter23.C+ as Connection10442
        connect L4-5.P2 Junction1509 as Connection10446
        connect Junction1509 relay4.a_out as Connection10447
        connect 3ph_Meter4.A+ Junction1509 as Connection10448
        connect L4-5.P4 Junction1510 as Connection10449
        connect Junction1510 relay4.b_out as Connection10450
        connect 3ph_Meter4.B+ Junction1510 as Connection10451
        connect L4-5.P6 Junction1511 as Connection10452
        connect Junction1511 relay4.c_out as Connection10453
        connect 3ph_Meter4.C+ Junction1511 as Connection10454
        connect Meter23.Brk_cmd relay4.ctrl_in as Connection10455
        connect Meter22.Brk_cmd relay2.ctrl_in as Connection10456
        connect "relay state 4.out" Meter23.scada_input as Connection10457
        connect "relay state 2.out" Meter22.scada_input as Connection10458
        connect V_REF_goto Junction1512 as Connection10459
        connect Junction1512 Junction1081 as Connection10460
        connect V_ref.in Junction1512 as Connection10461
        connect HV1.n_node Junction1514 as Connection10466
        connect Vref.n_node Junction1514 as Connection10468
        connect Substation_D-Yg1.prm_2 HV1.b_node as Connection10496
        connect HV1.a_node Substation_D-Yg1.prm_1 as Connection10497
        connect HV1.c_node Substation_D-Yg1.prm_3 as Connection10498
        connect Vref.p_node Junction1515 as Connection10499
        connect Junction1515 Junction1418 as Connection10500
        [
            breakpoints = 2896, 8352; 2896, 8352; 2896, 8352; 2896, 8352
        ]
        connect Substation_D-Yg1.sec_1 Junction1515 as Connection10501
        [
            breakpoints = 2736, 8352; 2896, 8352
        ]
        connect 3ph_Meter1.B+ Junction1516 as Connection10502
        connect Junction1516 L1-2.P4 as Connection10503
        [
            breakpoints = 3080, 8368; 3080, 8368; 3080, 8368; 3080, 8368
        ]
        connect Substation_D-Yg1.sec_2 Junction1516 as Connection10504
        connect L1-2.P6 Junction1517 as Connection10505
        connect Junction1517 3ph_Meter1.C+ as Connection10506
        [
            breakpoints = 3056, 8384; 3056, 8384; 3056, 8384; 3056, 8384
        ]
        connect Substation_D-Yg1.sec_3 Junction1517 as Connection10507
        [
            breakpoints = 2736, 8384; 3016, 8384
        ]
        connect Junction1514 Junction1518 as Connection10508
        [
            breakpoints = 2384, 8368; 2384, 8368; 2384, 8600; 2384, 8608; 2384, 8656
        ]
        connect Junction1518 gnd1.node as Connection10509
        connect Substation_D-Yg1.n2 Junction1518 as Connection10510
        connect utc_Year1.in "ETH VE Receive3.utc_Year" as Connection10518
        connect utc_Month1.in "ETH VE Receive3.utc_Month" as Connection10519
        connect utc_Day1.in "ETH VE Receive3.utc_Day" as Connection10520
        [
            breakpoints = 3856, 7792; 3856, 7872
        ]
        connect utc_Hour1.in "ETH VE Receive3.utc_Hour" as Connection10521
        connect utc_Minute1.in "ETH VE Receive3.utc_Minute" as Connection10522
        connect utc_Second1.in "ETH VE Receive3.utc_Second" as Connection10523
        [
            breakpoints = 4072, 7792; 4072, 7920
        ]
        connect utc_Year2.in utc_Year.out as Connection10524
        connect utc_Month2.in utc_Month.out as Connection10525
        connect utc_Day2.in utc_Day.out as Connection10526
        connect utc_Hour2.in utc_Hour.out as Connection10527
        connect utc_Minute2.in utc_Minute.out as Connection10528
        connect utc_Second2.in utc_Second.out as Connection10529
    }

    default {
        "core/Abs" {
            execution_rate = "inherit"
        }

        "core/Bus Join" {
            inputs = "2"
            execution_rate = "inherit"
        }

        "core/Bus Split" {
            outputs = "2"
            execution_rate = "inherit"
        }

        "core/C function" {
            input_terminals = "real in;"
            input_terminals_show_labels = "False;"
            input_terminals_feedthrough = "True;"
            input_terminals_dimensions = "inherit;"
            output_terminals = "real out;"
            output_terminals_show_labels = "False;"
            output_terminals_feedthrough = "True;"
            output_terminals_dimensions = "inherit;"
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            library_load_type = "Compile-time load"
            dll_file_path = ""
            dll_file_path_full = ""
            arm_a9_file_path = ""
            arm_a9_file_path_full = ""
            arm_a53_file_path = ""
            arm_a53_file_path_full = ""
            h_file_path = ""
            h_file_path_full = ""
            add_src_path = ""
            add_src_path_full = ""
            convert_to_relative_dll = "True"
            convert_to_relative_a = "True"
            convert_to_relative_src = "True"
            arb_defs = ""
            add_macros = ""
            skip_pre_cmpl_check = "False"
            generate_for_hil = "True"
            execution_rate = "inherit"
            _supported_platforms = "[\'generic\']"
            refresh = "refresh"
        }

        "core/Constant" {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
            _tunable = "False"
        }

        "core/ETH VE Setup" {
            mac = "34e6d77d021"
            override_device_id = "False"
            ip_addr = "192.168.0.10"
            eth_port = ""
            device_id = "0"
            ip_addr0 = "None"
            eth_port0 = ""
            device_id0 = "0"
            ip_addr1 = "192.168.0.2"
            eth_port1 = ""
            device_id1 = "1"
            ip_addr2 = "192.168.0.3"
            eth_port2 = ""
            device_id2 = "2"
            ip_addr3 = "192.168.0.4"
            eth_port3 = ""
            device_id3 = "3"
            ip_addr4 = "192.168.0.5"
            eth_port4 = ""
            device_id4 = "4"
            ip_addr5 = "192.168.0.6"
            eth_port5 = ""
            device_id5 = "5"
            ip_addr6 = "192.168.0.7"
            eth_port6 = ""
            device_id6 = "6"
            ip_addr7 = "192.168.0.8"
            eth_port7 = ""
            device_id7 = "7"
            ip_addr8 = "192.168.0.9"
            eth_port8 = ""
            device_id8 = "8"
            ip_addr9 = "192.168.0.10"
            eth_port9 = ""
            device_id9 = "9"
            ip_addr10 = "192.168.0.11"
            eth_port10 = ""
            device_id10 = "10"
            ip_addr11 = "192.168.0.12"
            eth_port11 = ""
            device_id11 = "11"
            ip_addr12 = "192.168.0.13"
            eth_port12 = ""
            device_id12 = "12"
            ip_addr13 = "192.168.0.14"
            eth_port13 = ""
            device_id13 = "13"
            ip_addr14 = "192.168.0.15"
            eth_port14 = ""
            device_id14 = "14"
            ip_addr15 = "192.168.0.16"
            eth_port15 = ""
            device_id15 = "15"
            subnet_mask = "255.255.255.0"
            execution_rate = "100e-6"
            hil_id = "0"
            num_of_variables = "10"
            ethernet_port_per_device = "{ \"HIL100\": {}, \"HIL104\": {}, \"HIL402\": {}, \"HIL404\": {}, \"HIL602+\": {}, \"HIL603\": {}, \"HIL604\": {}, \"HIL606\": {}, \"VHIL+\": {} }"
            hil_device_config = "{
                \'0\' : {
                },
                \'1\' : {
                },
                \'2\' : {
                },
                \'3\' : {
                },
                \'4\' : {
                },
                \'5\' : {
                },
                \'6\' : {
                },
                \'7\' : {
                },
                \'8\' : {
                },
                \'9\' : {
                },
                \'10\' : {
                },
                \'11\' : {
                },
                \'12\' : {
                },
                \'13\' : {
                },
                \'14\' : {
                },
                \'15\' : {
                }
            }"
        }

        "core/Gain" {
            gain = "1"
            multiplication = "Element-wise(K.*u)"
            _tunable = "False"
            execution_rate = "inherit"
        }

        "core/Logical operator" {
            operator = "AND"
            inputs = "2"
            execution_rate = "inherit"
        }

        "core/Probe" {
            signal_access = "inherit"
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        "core/RMS value" {
            op_mode = "PLL based"
            frequency = "50"
            period_timeout = "0.5"
            period_deadband = "0"
            filter_en = "False"
            lpf_cutoff = "500"
            frequency_src = "Internal"
            execution_rate = "inherit"
        }

        "core/Relational operator" {
            relational_op = "=="
            execution_rate = "inherit"
        }

        "core/SCADA Input" {
            signal_access = "inherit"
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        "core/Sum" {
            signs = "2"
            execution_rate = "inherit"
        }

        "core/Constant Impedance Load" {
            fn = "60"
            conn_type = "Y"
            enable_neutral = "False"
            set_balanced = "True"
            Vn_3ph = "480"
            Sn_3ph = "1.0e6"
            pf_mode_3ph = "Unit"
            pf_3ph = "0.9"
            VAn = "480/(3**0.5)"
            VAB = "480"
            SAn = "1.0e6/3"
            SAB = "1.0e6/3"
            pf_modeA = "Unit"
            pfA = "0.9"
            VBn = "480/(3**0.5)"
            VBC = "480"
            SBn = "1.0e6/3"
            SBC = "1.0e6/3"
            pf_modeB = "Unit"
            pfB = "0.9"
            VCn = "480/(3**0.5)"
            VCA = "480"
            SCn = "1.0e6/3"
            SCA = "1.0e6/3"
            pf_modeC = "Unit"
            pfC = "0.9"
        }

        "core/Dynamic Grid Fault" {
            ctrl_method = "SCADA input"
            Rph_ph = "0.1"
            Rph_n = "0.1"
            execution_rate = "100e-6"
        }

        "core/ETH VE Receive" {
            hil_id = "0"
            number_of_inputs = "1"
            input_type = "real"
            protocol = "UDP"
            endianness = "Little Endian"
            local_receive_port = "55000"
            specify_remote_port = "False"
            remote_connection_port = "55055"
            specify_remote_ip = "False"
            src_ip = "192.168.0.1"
            execution_rate = "100e-6"
            configuration = ""
            signal_names_dict = "{}"
            generate_configuration = "Generate configuration"
            _supported_platforms = "[\'hil\']"
        }

        "core/ETH VE Send" {
            hil_id = "0"
            protocol = "UDP"
            endianness = "Little Endian"
            specify_local_port = "False"
            local_send_port = "55055"
            dest_ip = "192.168.0.1"
            destination_port = "55000"
            stream_source = "New data stream"
            stream_source_id = "1000"
            append_index = "1"
            choose_stream_source = ""
            sample_time = "1e-3"
            execution_rate = "inherit"
            number_of_inputs = "1"
            configuration = ""
            signal_names_dict = "{}"
            generate_configuration = "Generate configuration"
            _supported_platforms = "[\'hil\']"
        }

        "core/Meter Split" {
            van = "True"
            vbn = "True"
            vcn = "True"
            van_rms = "False"
            vbn_rms = "False"
            vcn_rms = "False"
            vln_rms = "False"
            vn = "False"
            vn_rms = "False"
            vab = "False"
            vbc = "False"
            vca = "False"
            vab_rms = "False"
            vbc_rms = "False"
            vca_rms = "False"
            vll_rms = "False"
            ia = "False"
            ib = "False"
            ic = "False"
            ia_rms = "False"
            ib_rms = "False"
            ic_rms = "False"
            i_rms = "False"
            ineutral = "False"
            in_rms = "False"
            freq = "False"
            power_p = "False"
            power_q = "False"
            power_s = "False"
            power_pf = "False"
            enable_extra_in = "No"
            power_pa = "False"
            power_pb = "False"
            power_pc = "False"
            power_qa = "False"
            power_qb = "False"
            power_qc = "False"
            power_sa = "False"
            power_sb = "False"
            power_sc = "False"
            power_pfa = "False"
            power_pfb = "False"
            power_pfc = "False"
        }

        "core/RL Section" {
            model_def = "R-L"
            unit_sys = "imperial"
            num_of_phases = "3"
            resistance_per_l = "1"
            resistance_per_l_mile = "1"
            inductance_per_l = "1e-3"
            inductance_per_l_mile = "1e-3"
            length = "1.0"
            length_mile = "1.0"
            power = "500.0"
            voltage = "11.0"
            frequency = "50.0"
            R_value = "21.55"
            L_value = "0.00842"
            embedded_coupling = "False"
            ratio_type = "Automatic"
            ratio = "0.1"
        }

        "core/Three Phase Two Winding Transformer" {
            input = "SC and OC tests"
            Sn = "160000.0"
            f = "50.0"
            V1 = "10000.0"
            V2 = "400.0"
            usc1 = "4.0"
            Psc1 = "2350.0"
            R1 = "4.58984375"
            L1 = ".0370093710364"
            R2 = ".00734375"
            L2 = "5.92149936583e-05"
            r1 = ".00734375"
            l1 = ".0186029389059"
            r2 = ".00734375"
            l2 = ".0186029389059"
            core_model = "Linear"
            ioc1 = "0.7"
            Poc1 = "460.0"
            Rm = "217391.304348"
            Lm = "311.709196788"
            flux_vals_SI = "[0, 1910.3, 2419.7]"
            current_vals_SI = "[0, 0.66653, 277.72]"
            rm = "347.826086957"
            lm = "156.68213163"
            flux_vals_pu = "[0, 1.2, 1.52]"
            current_vals_pu = "[0, 0.0024, 1]"
            flux_vals_SCOC = "[0, 1.2, 1.52]"
            current_vals_SCOC = "[0, 0.0024, 1]"
            upper_flux_vals_pu = "[0.2, 1.2, 1.52]"
            upper_flux_vals_SI = "[318.33, 1910.3, 2419.7]"
            upper_flux_vals_SCOC = "[0.2, 1.2, 1.52]"
            hysteresis_number = "1"
            execution_rate = "100e-6"
            import_from_SI2SCOC = "Import from SI"
            import_from_pu2SCOC = "Import from PU"
            import_from_SCOC2SI = "Import from SC OC"
            import_from_pu2SI = "Import from PU"
            import_from_SCOC2pu = "Import from SC OC"
            import_from_SI2pu = "Import from SI"
            preview_flux_current = "Preview SI"
            winding_1_connection = "Y"
            winding_2_connection = "Y"
            clock_number = "0"
            embedded_cpl = "None"
            coupling_type = "core"
            ratio_type = "Automatic"
            ratio = "0.1"
            Rshunt = "inf"
        }

        "core/Three Phase Voltage Source" {
            init_rms_value = "0.0"
            init_frequency = "50.0"
            init_phase = "0.0"
        }

        "core/Three-phase Meter" {
            R = "1e5"
            n_cycles = "1"
            Ts = "100e-6"
            enable_probes = "True"
            enable_out = "True"
            remove_snubber = "False"
            enable_bandwidth = "False"
            bandwidth = "10e3"
            VAn = "True"
            VBn = "True"
            VCn = "True"
            VAB = "False"
            VBC = "False"
            VCA = "False"
            VN = "False"
            IA = "True"
            IB = "True"
            IC = "True"
            IN = "False"
            freq = "False"
            VLn_rms = "False"
            VLL_rms = "False"
            VLn_avg_rms = "False"
            VLL_avg_rms = "False"
            VN_rms = "False"
            I_rms = "False"
            I_avg_rms = "False"
            IN_rms = "False"
            P_method = "alpha-beta"
            enable_extra_out = "False"
            P_meas = "False"
        }

        "core/Time Synchronization Status" {
            execution_rate = "100e-6"
        }

        "core/Triple Pole Single Throw Contactor" {
            signal_access = "inherit"
            ctrl_src = "Digital input"
            Sa = "1"
            Sa_logic = "active high"
            enable_fb_out = "False"
            fb_out_type = "real"
            execution_rate = "inherit"
            initial_state = "off"
            on_delay = "0"
            off_delay = "0"
        }

        "core/Voltage Measurement" {
            signal_access = "inherit"
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            sig_output_filt_and_full_bw = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        # The Schematic API is imported as 'mdl'
        # To get the model file path, use 'mdl.get_model_file_path()'
        # To print information to the console, use info()
        f = 50
        w = 2*np.pi*f
        
        if "ex_rate" not in mdl.get_ns_vars():
            ex_rate = 2e-4
            
        # line voltage (phase-to-phase voltage)
        V_ll = 22000
        # phase voltage (line-to-line voltage)
        V_ln = V_ll/np.sqrt(3)
        
        Vnom_ph_to_gnd = V_ll/np.sqrt(3)
        
        HV1_H = 115000/np.sqrt(3)
        HV3_H = 120000/np.sqrt(3)
        
        load = {"1": {"P": 1, "Q": 1},
                "2": {"P": 38.59e6, "Q": 5.42e6},
                "3": {"P": 38.59e6, "Q": 5.42e6},
                "4": {"P": 34.95e6, "Q": 5.11e6},
                "5": {"P": 38.15e6, "Q": 5.47e6},
                "6": {"P": 30.05e6, "Q": 5.19e6},
                "7": {"P": -29.05e6, "Q": -3.10e6},
                "15": {"P": 1, "Q": 1},
                "16": {"P": 38.59e6, "Q": 5.42e6},
                "17": {"P": 38.15e6, "Q": 5.47e6},
                "18": {"P": 27.46e6, "Q": 5.35e6},
                "19": {"P": 32.82e6, "Q": 5.02e6},
                "20": {"P": 38.59e6, "Q": 5.42e6},
                "21": {"P": 38.59e6, "Q": 5.42e6}}
        
        S_TR1 = 150e6
        S_TR3 = 220e6
        
        for bus in load:
            load[bus]["pf"] = np.cos(np.arctan2(load[bus]["Q"], load[bus]["P"]))
            load[bus]["S"] = load[bus]["P"]/load[bus]["pf"]
        
        branch ={"1-2": {"R": 0.000845366,   "X": 0.000284806},
                 "2-3": {"R": 0.000845366, "X": 0.000284806},
                 "3-4": {"R": 0.000845366, "X": 0.000284806},
                 "4-5": {"R": 3.90909e-5, "X": 2.39876e-5},
                 "5-6": {"R": 0.001065536, "X": 0.00075818},
                 "6-7": {"R": 0.000394176, "X": 0.000135417},
                 "15-16": {"R": 0.000394176, "X": 0.000135417},
                 "16-17": {"R": 0.000394176, "X": 0.000135417},
                 "17-18": {"R": 0.000394176, "X": 0.000135417},
                 "18-19": {"R": 0.000394176, "X": 0.000135417},
                 "19-20": {"R": 0.000394176, "X": 0.000135417},
                 "20-21": {"R": 0.000394176, "X": 0.000135417},
                 "5-19": {"R": 0.000394176, "X": 0.000135417}}
        
        for branch_id in branch:
            branch[branch_id]["L"] = branch[branch_id]["X"]/w
        
        # Line element length values
        line_len = 1
        
        config1 = {
          'port': 502,
          'ip_addr': '192.168.0.103',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2001,2002,2003',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
    ENDCODE
}
