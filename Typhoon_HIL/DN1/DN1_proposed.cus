<ui_settings>
    <version>2.8</version>
    <model_locked>False</model_locked>
    <canvas_bg_color>#ffffff</canvas_bg_color>
    <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts.
# NOTE: This code is always executed prior to simulation start.

# The variable 'SETTINGS_DIR' holds the directory where the loaded Panel .cus file is located.
# Also you can call the 'get_settings_dir_path()' function in any
# Macro and Expression script to get the same directory.
SETTINGS_DIR = get_settings_dir_path()

# The 'add_to_python_path(folder)' function can be used to add a custom folder
# with Python files and packages to the PYTHONPATH. After a folder is added, all Python
# files and Python packages from it can be imported into the SCADA Namespace.

# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# Numpy module is imported as 'np'
# Scipy module is imported as 'sp'
# Schematic Editor model namespace is imported as 'scm'
# Function for printing to the HIL SCADA Message log is imported as 'printf'.

Vnom_ph_to_ph = 22e3

Vnom_ph_to_gnd = Vnom_ph_to_ph/np.sqrt(3)]]></initialization_code>
    <components>
        <component_data>
                <id>a8a859df78f411eeae580013eff25608</id>
                <name><![CDATA[UTC Time]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
import datetime
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
now = datetime.datetime.now()
utc_now = now.utcnow()
# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": str(utc_now),  # "text": "Text Value"

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>250</updateRate>
                <widget_settings>
                    <x>1032</x>
                    <y>16</y>
                    <width>504</width>
                    <height>64</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>b1f34bba78f411ee98f30013eff25608</id>
                <name><![CDATA[PTP Status]]></name>
                <type>TraceDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Signals</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing values that will be displayed
# specify data (one pairs of "names" and "values" parts are mandatory)
data = {
    # analog like signals/data names: ["Analog 1 name","Analog 2 name","Analog N name"]
    "analog_names": [],

    # analog data values: [aVal1,aVal2,aVal3]
    "analog_values": [],

    # digital like signals/data names: ["Digital 1 name","Digital 2 name","Digital 3 name"]
    "digital_names": [],

    # digital data values: [dVal1,dVal2,aVal3]
    "digital_values": [],
    }
displayValue = data
]]></code>
                <analog_signals><![CDATA[['ptp']]]></analog_signals>
                <digital_signals><![CDATA[[]]]></digital_signals>
                <streaming_analog_signals><![CDATA[[]]]></streaming_analog_signals>
                <streaming_digital_signals><![CDATA[[]]]></streaming_digital_signals>
                <analog_signals_scaling_factors><![CDATA[{'ptp': 1.0}]]></analog_signals_scaling_factors>
                <streaming_analog_signals_scaling_factors><![CDATA[{}]]></streaming_analog_signals_scaling_factors>
                <update_rate>1000</update_rate>
                <execution_rate>None</execution_rate>
                <background_color>white</background_color>
                <widget_settings>
                    <x>1144</x>
                    <y>288</y>
                    <width>400</width>
                    <height>200</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <x_title><![CDATA[x axes]]></x_title>
                    <y_title><![CDATA[y axes]]></y_title>
                    <y_range_min>-100.0</y_range_min>
                    <y_range_max>100.0</y_range_max>
                    <time_window>10</time_window>
                    <auto_scale_enabled>True</auto_scale_enabled>
                    <legend_enabled>True</legend_enabled>
                    <x_axis_title_enabled>False</x_axis_title_enabled>
                    <y_axis_title_enabled>False</y_axis_title_enabled>
                    <use_reference_curve>False</use_reference_curve>
                    <reference_curve_code><![CDATA[# NOTE: Global namespace variables are available
# Selected time window is available through variable 'timeWindow'
# Selected update rate is available through variable 'updateRate'

# reference curve data point
curveData = 12.0

# specify curve options ('data' part is mandatory)
refCurveData1 = {
    # reference curve data point
    "data": curveData,

    # curve line style: 'solid', 'dashed', 'dashdot', 'dotted'
    "line_style": "dashed",

    # curve line color: 'red', 'green', 'blue', 'cyan', 'magenta', 'yellow'
    "line_color": 'red',

    # curve line width: float number
    "line_width": 2.0,
    
    # reference curve title
    "title": "Reference curve",

    # show a title in the legend
    "show_in_legend": True
}

# list of reference curves data: [ref1, ref2,...refN]
referenceCurves = [refCurveData1]

]]></reference_curve_code>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>b1f34bbb78f411eead3c0013eff25608</id>
                <name><![CDATA[GPS Status]]></name>
                <type>TraceDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Signals</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# mandatory variable used for storing values that will be displayed
# specify data (one pairs of "names" and "values" parts are mandatory)
data = {
    # analog like signals/data names: ["Analog 1 name","Analog 2 name","Analog N name"]
    "analog_names": [],

    # analog data values: [aVal1,aVal2,aVal3]
    "analog_values": [],

    # digital like signals/data names: ["Digital 1 name","Digital 2 name","Digital 3 name"]
    "digital_names": [],

    # digital data values: [dVal1,dVal2,aVal3]
    "digital_values": [],
    }
displayValue = data
]]></code>
                <analog_signals><![CDATA[['gps']]]></analog_signals>
                <digital_signals><![CDATA[[]]]></digital_signals>
                <streaming_analog_signals><![CDATA[[]]]></streaming_analog_signals>
                <streaming_digital_signals><![CDATA[[]]]></streaming_digital_signals>
                <analog_signals_scaling_factors><![CDATA[{'gps': 1.0}]]></analog_signals_scaling_factors>
                <streaming_analog_signals_scaling_factors><![CDATA[{}]]></streaming_analog_signals_scaling_factors>
                <update_rate>1000</update_rate>
                <execution_rate>None</execution_rate>
                <background_color>white</background_color>
                <widget_settings>
                    <x>1144</x>
                    <y>80</y>
                    <width>400</width>
                    <height>200</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <x_title><![CDATA[x axes]]></x_title>
                    <y_title><![CDATA[y axes]]></y_title>
                    <y_range_min>-100.0</y_range_min>
                    <y_range_max>100.0</y_range_max>
                    <time_window>10</time_window>
                    <auto_scale_enabled>True</auto_scale_enabled>
                    <legend_enabled>True</legend_enabled>
                    <x_axis_title_enabled>False</x_axis_title_enabled>
                    <y_axis_title_enabled>False</y_axis_title_enabled>
                    <use_reference_curve>False</use_reference_curve>
                    <reference_curve_code><![CDATA[# NOTE: Global namespace variables are available
# Selected time window is available through variable 'timeWindow'
# Selected update rate is available through variable 'updateRate'

# reference curve data point
curveData = 12.0

# specify curve options ('data' part is mandatory)
refCurveData1 = {
    # reference curve data point
    "data": curveData,

    # curve line style: 'solid', 'dashed', 'dashdot', 'dotted'
    "line_style": "dashed",

    # curve line color: 'red', 'green', 'blue', 'cyan', 'magenta', 'yellow'
    "line_color": 'red',

    # curve line width: float number
    "line_width": 2.0,
    
    # reference curve title
    "title": "Reference curve",

    # show a title in the legend
    "show_in_legend": True
}

# list of reference curves data: [ref1, ref2,...refN]
referenceCurves = [refCurveData1]

]]></reference_curve_code>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>7da92a32cad511eea594655232d2d4c9</id>
                <name><![CDATA[Set grid _ capture variables]]></name>
                <type>Macro</type>
                <description><![CDATA[]]></description>
                <on_click_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed on button click.
# HIL API is imported as 'hil'

]]></on_click_code>
                <on_start_code active="True"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
global Vdata_dict
global Idata_dict

hil.set_source_sine_waveform('Vs', rms=round(22e3/(3**0.5), 4), frequency=60.0, phase=0.0, harmonics_pu=())

Vkeys = ["Meter14.VAn_rms", "Meter14.Va_ph",
         "Meter13.VAn_rms", "Meter13.Va_ph",
         "Meter12.VAn_rms", "Meter12.Va_ph",
         "Meter11.VAn_rms", "Meter11.Va_ph",
         "Meter10.VAn_rms", "Meter10.Va_ph",
         "Meter9.VAn_rms", "Meter9.Va_ph",
         "Meter8.VAn_rms", "Meter8.Va_ph"]

Vdata_array = hil.read_analog_signals(signals=Vkeys)
Vdata_dict = dict(zip(Vkeys, Vdata_array))

Ikeys = ["Meter14.IA_rms", "Meter14.Ia_ph",
         "Meter13.IA_rms", "Meter13.Ia_ph",
         "Meter12.IA_rms", "Meter12.Ia_ph",
         "Meter11.IA_rms", "Meter11.Ia_ph",
         "Meter10.IA_rms", "Meter10.Ia_ph",
         "Meter9.IA_rms", "Meter9.Ia_ph",
         "Meter8.IA_rms", "Meter8.Ia_ph"]


Idata_array = hil.read_analog_signals(signals=Ikeys)
Idata_dict = dict(zip(Ikeys, Idata_array))]]></on_start_code>
                <on_timer_code active="True"><![CDATA[# NOTE: The code specified in this handler will be executed on timer event.
# HIL API is imported as 'hil'

global Vdata_dict
global Idata_dict

Vkeys = ["Meter14.VAn_rms", "Meter14.Va_ph",
         "Meter13.VAn_rms", "Meter13.Va_ph",
         "Meter12.VAn_rms", "Meter12.Va_ph",
         "Meter11.VAn_rms", "Meter11.Va_ph",
         "Meter10.VAn_rms", "Meter10.Va_ph",
         "Meter9.VAn_rms", "Meter9.Va_ph",
         "Meter8.VAn_rms", "Meter8.Va_ph"]

Vdata_array = hil.read_analog_signals(signals=Vkeys)
Vdata_dict = dict(zip(Vkeys, Vdata_array))

Ikeys = ["Meter14.IA_rms", "Meter14.Ia_ph",
         "Meter13.IA_rms", "Meter13.Ia_ph",
         "Meter12.IA_rms", "Meter12.Ia_ph",
         "Meter11.IA_rms", "Meter11.Ia_ph",
         "Meter10.IA_rms", "Meter10.Ia_ph",
         "Meter9.IA_rms", "Meter9.Ia_ph",
         "Meter8.IA_rms", "Meter8.Ia_ph"]

Idata_array = hil.read_analog_signals(signals=Ikeys)
Idata_dict = dict(zip(Ikeys, Idata_array))]]></on_timer_code>
                <run_each>250</run_each>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'

]]></on_stop_code>
                <widget_settings>
                    <x>1632</x>
                    <y>24</y>
                    <width>176</width>
                    <height>40</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>cdde8346cadd11eea594655232d2d4c9</id>
                <name><![CDATA[BUS14]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['cdde8347cadd11eea594655232d2d4c9', 'cdde8348cadd11eea594655232d2d4c9', 'cdde8349cadd11eea594655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "14"]]></initialization_code>
                <widget_settings>
                    <x>232</x>
                    <y>24</y>
                    <width>96</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>cdde8347cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Meter14_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000

]]></code>
                <signal_name><![CDATA[Meter701.Va_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>72</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>cdde8348cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Meter14_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter701.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>96</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>cdde8349cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Sub-Panel]]></name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['cdde834acadd11eea594655232d2d4c9', 'cdde834dcadd11eea594655232d2d4c9', 'cdde8351cadd11eea594655232d2d4c9', 'cdde8352cadd11eea594655232d2d4c9', 'cdde8353cadd11eea594655232d2d4c9']]]></components_ids>
                <working_mode>Embedded</working_mode>
                <canvas_window_visible>False</canvas_window_visible>
                <canvas_window_geometry><![CDATA[None]]></canvas_window_geometry>
                <canvas_window_state><![CDATA[None]]></canvas_window_state>
                <canvas_window_in_fullscreen>False</canvas_window_in_fullscreen>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <use_background_image>True</use_background_image>
                <image><![CDATA[../../../../Program Files/Typhoon HIL Control Center 2024.1/examples/models/power systems/references/satisfaction-meter-md.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>72</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>cdde834acadd11eea594655232d2d4c9</id>
                <name><![CDATA[Current measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['cdde834bcadd11eea594655232d2d4c9', 'cdde834ccadd11eea594655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>480</x>
                    <y>376</y>
                    <width>256</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>cdde834bcadd11eea594655232d2d4c9</id>
                <name><![CDATA[Ia RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter718.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>104</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>cdde834ccadd11eea594655232d2d4c9</id>
                <name><![CDATA[Ia phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter718.Ia_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>120</x>
                    <y>8</y>
                    <width>120</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>cdde834dcadd11eea594655232d2d4c9</id>
                <name><![CDATA[Voltage measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['cdde834ecadd11eea594655232d2d4c9', 'cdde834fcadd11eea594655232d2d4c9', 'cdde8350cadd11eea594655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>400</x>
                    <y>480</y>
                    <width>440</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>cdde834ecadd11eea594655232d2d4c9</id>
                <name><![CDATA[Va RMS (pu)]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/Vnom_ph_to_gnd
]]></code>
                <signal_name><![CDATA[Bus675.V1_rms]]></signal_name>
                <unit><![CDATA[pu]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>144</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>cdde834fcadd11eea594655232d2d4c9</id>
                <name><![CDATA[Va phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(bus)]
]]></code>
                <signal_name><![CDATA[Meter718.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>288</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>cdde8350cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Va RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter718.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>cdde8351cadd11eea594655232d2d4c9</id>
                <name><![CDATA[P load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed
global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


P= 3*VAn_rms*IA_rms*(np.cos(np.deg2rad(Va_ph-Ia_ph)))
displayValue = P/1e3]]></code>
                <signal_name><![CDATA[Meter717.Va_rms]]></signal_name>
                <unit><![CDATA[kW]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>432</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>150.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>cdde8352cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Q load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

import numpy as np
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed

global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


Q= 3*VAn_rms*IA_rms*(np.sin(np.deg2rad(Va_ph-Ia_ph)))
displayValue = Q/1e3]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[kVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>608</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>cdde8353cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Text display]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": "Bus {} Load".format(bus),

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>512</x>
                    <y>176</y>
                    <width>160</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>dfa7b7c8cadd11eea594655232d2d4c9</id>
                <name><![CDATA[BUS13]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['dfa7b7c9cadd11eea594655232d2d4c9', 'dfa7b7cacadd11eea594655232d2d4c9', 'dfa7b7cbcadd11eea594655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "13"]]></initialization_code>
                <widget_settings>
                    <x>328</x>
                    <y>24</y>
                    <width>96</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>dfa7b7c9cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Meter13_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000

]]></code>
                <signal_name><![CDATA[Meter701.Va_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>72</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>dfa7b7cacadd11eea594655232d2d4c9</id>
                <name><![CDATA[Meter13_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter701.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>96</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>dfa7b7cbcadd11eea594655232d2d4c9</id>
                <name><![CDATA[Sub-Panel]]></name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['dfa7b7cccadd11eea594655232d2d4c9', 'dfa7b7cfcadd11eea594655232d2d4c9', 'dfa7b7d3cadd11eea594655232d2d4c9', 'dfa7b7d4cadd11eea594655232d2d4c9', 'dfa7b7d5cadd11eea594655232d2d4c9']]]></components_ids>
                <working_mode>Embedded</working_mode>
                <canvas_window_visible>False</canvas_window_visible>
                <canvas_window_geometry><![CDATA[None]]></canvas_window_geometry>
                <canvas_window_state><![CDATA[None]]></canvas_window_state>
                <canvas_window_in_fullscreen>False</canvas_window_in_fullscreen>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <use_background_image>True</use_background_image>
                <image><![CDATA[../../../../Program Files/Typhoon HIL Control Center 2024.1/examples/models/power systems/references/satisfaction-meter-md.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>72</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>dfa7b7cccadd11eea594655232d2d4c9</id>
                <name><![CDATA[Current measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['dfa7b7cdcadd11eea594655232d2d4c9', 'dfa7b7cecadd11eea594655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>480</x>
                    <y>376</y>
                    <width>256</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>dfa7b7cdcadd11eea594655232d2d4c9</id>
                <name><![CDATA[Ia RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter718.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>104</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>dfa7b7cecadd11eea594655232d2d4c9</id>
                <name><![CDATA[Ia phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter718.Ia_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>120</x>
                    <y>8</y>
                    <width>120</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>dfa7b7cfcadd11eea594655232d2d4c9</id>
                <name><![CDATA[Voltage measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['dfa7b7d0cadd11eea594655232d2d4c9', 'dfa7b7d1cadd11eea594655232d2d4c9', 'dfa7b7d2cadd11eea594655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>400</x>
                    <y>480</y>
                    <width>440</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>dfa7b7d0cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Va RMS (pu)]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/Vnom_ph_to_gnd
]]></code>
                <signal_name><![CDATA[Bus675.V1_rms]]></signal_name>
                <unit><![CDATA[pu]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>144</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>dfa7b7d1cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Va phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(bus)]
]]></code>
                <signal_name><![CDATA[Meter718.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>288</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>dfa7b7d2cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Va RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter718.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>dfa7b7d3cadd11eea594655232d2d4c9</id>
                <name><![CDATA[P load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed
global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


P= 3*VAn_rms*IA_rms*(np.cos(np.deg2rad(Va_ph-Ia_ph)))
displayValue = P/1e3]]></code>
                <signal_name><![CDATA[Meter717.Va_rms]]></signal_name>
                <unit><![CDATA[kW]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>432</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>150.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>dfa7b7d4cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Q load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

import numpy as np
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed

global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


Q= 3*VAn_rms*IA_rms*(np.sin(np.deg2rad(Va_ph-Ia_ph)))
displayValue = Q/1e3]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[kVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>608</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>dfa7b7d5cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Text display]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": "Bus {} Load".format(bus),

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>512</x>
                    <y>176</y>
                    <width>160</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>e4df2618cadd11eea594655232d2d4c9</id>
                <name><![CDATA[BUS12]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['e4df2619cadd11eea594655232d2d4c9', 'e4df261acadd11eea594655232d2d4c9', 'e4df261bcadd11eea594655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "12"]]></initialization_code>
                <widget_settings>
                    <x>424</x>
                    <y>24</y>
                    <width>96</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>e4df2619cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Meter12_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter701.Va_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>72</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e4df261acadd11eea594655232d2d4c9</id>
                <name><![CDATA[Meter12_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter701.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>96</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e4df261bcadd11eea594655232d2d4c9</id>
                <name><![CDATA[Sub-Panel]]></name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['e4df261ccadd11eea594655232d2d4c9', 'e4df261fcadd11eea594655232d2d4c9', 'e4df2623cadd11eea594655232d2d4c9', 'e4df2624cadd11eea594655232d2d4c9', 'e4df2625cadd11eea594655232d2d4c9']]]></components_ids>
                <working_mode>Embedded</working_mode>
                <canvas_window_visible>False</canvas_window_visible>
                <canvas_window_geometry><![CDATA[None]]></canvas_window_geometry>
                <canvas_window_state><![CDATA[None]]></canvas_window_state>
                <canvas_window_in_fullscreen>False</canvas_window_in_fullscreen>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <use_background_image>True</use_background_image>
                <image><![CDATA[../../../../Program Files/Typhoon HIL Control Center 2024.1/examples/models/power systems/references/satisfaction-meter-md.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>72</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>e4df261ccadd11eea594655232d2d4c9</id>
                <name><![CDATA[Current measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['e4df261dcadd11eea594655232d2d4c9', 'e4df261ecadd11eea594655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>480</x>
                    <y>376</y>
                    <width>256</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>e4df261dcadd11eea594655232d2d4c9</id>
                <name><![CDATA[Ia RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter718.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>104</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e4df261ecadd11eea594655232d2d4c9</id>
                <name><![CDATA[Ia phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter718.Ia_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>120</x>
                    <y>8</y>
                    <width>120</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e4df261fcadd11eea594655232d2d4c9</id>
                <name><![CDATA[Voltage measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['e4df2620cadd11eea594655232d2d4c9', 'e4df2621cadd11eea594655232d2d4c9', 'e4df2622cadd11eea594655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>400</x>
                    <y>480</y>
                    <width>440</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>e4df2620cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Va RMS (pu)]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/Vnom_ph_to_gnd
]]></code>
                <signal_name><![CDATA[Bus675.V1_rms]]></signal_name>
                <unit><![CDATA[pu]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>144</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e4df2621cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Va phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(bus)]
]]></code>
                <signal_name><![CDATA[Meter718.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>288</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e4df2622cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Va RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter718.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e4df2623cadd11eea594655232d2d4c9</id>
                <name><![CDATA[P load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed
global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


P= 3*VAn_rms*IA_rms*(np.cos(np.deg2rad(Va_ph-Ia_ph)))
displayValue = P/1e3]]></code>
                <signal_name><![CDATA[Meter717.Va_rms]]></signal_name>
                <unit><![CDATA[kW]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>432</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>150.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e4df2624cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Q load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

import numpy as np
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed

global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


Q= 3*VAn_rms*IA_rms*(np.sin(np.deg2rad(Va_ph-Ia_ph)))
displayValue = Q/1e3]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[kVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>608</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e4df2625cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Text display]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": "Bus {} Load".format(bus),

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>512</x>
                    <y>176</y>
                    <width>160</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>e6bee1f8cadd11eea594655232d2d4c9</id>
                <name><![CDATA[BUS11]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['e6bee1f9cadd11eea594655232d2d4c9', 'e6bee1facadd11eea594655232d2d4c9', 'e6bee1fbcadd11eea594655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "11"]]></initialization_code>
                <widget_settings>
                    <x>520</x>
                    <y>24</y>
                    <width>96</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>e6bee1f9cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Meter11_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter701.Va_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>72</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e6bee1facadd11eea594655232d2d4c9</id>
                <name><![CDATA[Meter11_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter701.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>96</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e6bee1fbcadd11eea594655232d2d4c9</id>
                <name><![CDATA[Sub-Panel]]></name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['e6bee1fccadd11eea594655232d2d4c9', 'e6bee1ffcadd11eea594655232d2d4c9', 'e6bee203cadd11eea594655232d2d4c9', 'e6bee204cadd11eea594655232d2d4c9', 'e6bee205cadd11eea594655232d2d4c9']]]></components_ids>
                <working_mode>Embedded</working_mode>
                <canvas_window_visible>False</canvas_window_visible>
                <canvas_window_geometry><![CDATA[None]]></canvas_window_geometry>
                <canvas_window_state><![CDATA[None]]></canvas_window_state>
                <canvas_window_in_fullscreen>False</canvas_window_in_fullscreen>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <use_background_image>True</use_background_image>
                <image><![CDATA[../../../../Program Files/Typhoon HIL Control Center 2024.1/examples/models/power systems/references/satisfaction-meter-md.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>72</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>e6bee1fccadd11eea594655232d2d4c9</id>
                <name><![CDATA[Current measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['e6bee1fdcadd11eea594655232d2d4c9', 'e6bee1fecadd11eea594655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>480</x>
                    <y>376</y>
                    <width>256</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>e6bee1fdcadd11eea594655232d2d4c9</id>
                <name><![CDATA[Ia RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter718.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>104</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e6bee1fecadd11eea594655232d2d4c9</id>
                <name><![CDATA[Ia phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter718.Ia_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>120</x>
                    <y>8</y>
                    <width>120</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e6bee1ffcadd11eea594655232d2d4c9</id>
                <name><![CDATA[Voltage measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['e6bee200cadd11eea594655232d2d4c9', 'e6bee201cadd11eea594655232d2d4c9', 'e6bee202cadd11eea594655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>400</x>
                    <y>480</y>
                    <width>440</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>e6bee200cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Va RMS (pu)]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/Vnom_ph_to_gnd
]]></code>
                <signal_name><![CDATA[Bus675.V1_rms]]></signal_name>
                <unit><![CDATA[pu]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>144</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e6bee201cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Va phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(bus)]
]]></code>
                <signal_name><![CDATA[Meter718.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>288</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e6bee202cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Va RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter718.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e6bee203cadd11eea594655232d2d4c9</id>
                <name><![CDATA[P load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed
global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


P= 3*VAn_rms*IA_rms*(np.cos(np.deg2rad(Va_ph-Ia_ph)))
displayValue = P/1e3]]></code>
                <signal_name><![CDATA[Meter717.Va_rms]]></signal_name>
                <unit><![CDATA[kW]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>432</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>150.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e6bee204cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Q load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

import numpy as np
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed

global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


Q= 3*VAn_rms*IA_rms*(np.sin(np.deg2rad(Va_ph-Ia_ph)))
displayValue = Q/1e3]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[kVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>608</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e6bee205cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Text display]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": "Bus {} Load".format(bus),

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>512</x>
                    <y>176</y>
                    <width>160</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>e956f4f0cadd11eea594655232d2d4c9</id>
                <name><![CDATA[BUS10]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['e956f4f1cadd11eea594655232d2d4c9', 'e956f4f2cadd11eea594655232d2d4c9', 'e956f4f3cadd11eea594655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "10"]]></initialization_code>
                <widget_settings>
                    <x>616</x>
                    <y>24</y>
                    <width>96</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>e956f4f1cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Meter10_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter701.Va_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>72</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e956f4f2cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Meter10_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter701.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>96</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e956f4f3cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Sub-Panel]]></name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['e956f4f4cadd11eea594655232d2d4c9', 'e956f4f7cadd11eea594655232d2d4c9', 'e956f4fbcadd11eea594655232d2d4c9', 'e956f4fccadd11eea594655232d2d4c9', 'e956f4fdcadd11eea594655232d2d4c9']]]></components_ids>
                <working_mode>Embedded</working_mode>
                <canvas_window_visible>False</canvas_window_visible>
                <canvas_window_geometry><![CDATA[None]]></canvas_window_geometry>
                <canvas_window_state><![CDATA[None]]></canvas_window_state>
                <canvas_window_in_fullscreen>False</canvas_window_in_fullscreen>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <use_background_image>True</use_background_image>
                <image><![CDATA[../../../../Program Files/Typhoon HIL Control Center 2024.1/examples/models/power systems/references/satisfaction-meter-md.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>72</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>e956f4f4cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Current measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['e956f4f5cadd11eea594655232d2d4c9', 'e956f4f6cadd11eea594655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>480</x>
                    <y>376</y>
                    <width>256</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>e956f4f5cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Ia RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter718.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>104</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e956f4f6cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Ia phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter718.Ia_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>120</x>
                    <y>8</y>
                    <width>120</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e956f4f7cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Voltage measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['e956f4f8cadd11eea594655232d2d4c9', 'e956f4f9cadd11eea594655232d2d4c9', 'e956f4facadd11eea594655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>400</x>
                    <y>480</y>
                    <width>440</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>e956f4f8cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Va RMS (pu)]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/Vnom_ph_to_gnd
]]></code>
                <signal_name><![CDATA[Bus675.V1_rms]]></signal_name>
                <unit><![CDATA[pu]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>144</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e956f4f9cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Va phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(bus)]
]]></code>
                <signal_name><![CDATA[Meter718.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>288</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e956f4facadd11eea594655232d2d4c9</id>
                <name><![CDATA[Va RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter718.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e956f4fbcadd11eea594655232d2d4c9</id>
                <name><![CDATA[P load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed
global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


P= 3*VAn_rms*IA_rms*(np.cos(np.deg2rad(Va_ph-Ia_ph)))
displayValue = P/1e3]]></code>
                <signal_name><![CDATA[Meter717.Va_rms]]></signal_name>
                <unit><![CDATA[kW]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>432</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>150.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e956f4fccadd11eea594655232d2d4c9</id>
                <name><![CDATA[Q load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

import numpy as np
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed

global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


Q= 3*VAn_rms*IA_rms*(np.sin(np.deg2rad(Va_ph-Ia_ph)))
displayValue = Q/1e3]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[kVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>608</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>e956f4fdcadd11eea594655232d2d4c9</id>
                <name><![CDATA[Text display]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": "Bus {} Load".format(bus),

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>512</x>
                    <y>176</y>
                    <width>160</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>eb7d81eacadd11eea594655232d2d4c9</id>
                <name><![CDATA[BUS9]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['eb7d81ebcadd11eea594655232d2d4c9', 'eb7d81eccadd11eea594655232d2d4c9', 'eb7d81edcadd11eea594655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "9"]]></initialization_code>
                <widget_settings>
                    <x>712</x>
                    <y>24</y>
                    <width>96</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>eb7d81ebcadd11eea594655232d2d4c9</id>
                <name><![CDATA[Meter9_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter701.Va_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>72</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>eb7d81eccadd11eea594655232d2d4c9</id>
                <name><![CDATA[Meter9_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter701.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>96</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>eb7d81edcadd11eea594655232d2d4c9</id>
                <name><![CDATA[Sub-Panel]]></name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['eb7d81eecadd11eea594655232d2d4c9', 'eb7d81f1cadd11eea594655232d2d4c9', 'eb7d81f5cadd11eea594655232d2d4c9', 'eb7d81f6cadd11eea594655232d2d4c9', 'eb7d81f7cadd11eea594655232d2d4c9']]]></components_ids>
                <working_mode>Embedded</working_mode>
                <canvas_window_visible>False</canvas_window_visible>
                <canvas_window_geometry><![CDATA[None]]></canvas_window_geometry>
                <canvas_window_state><![CDATA[None]]></canvas_window_state>
                <canvas_window_in_fullscreen>False</canvas_window_in_fullscreen>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <use_background_image>True</use_background_image>
                <image><![CDATA[../../../../Program Files/Typhoon HIL Control Center 2024.1/examples/models/power systems/references/satisfaction-meter-md.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>72</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>eb7d81eecadd11eea594655232d2d4c9</id>
                <name><![CDATA[Current measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['eb7d81efcadd11eea594655232d2d4c9', 'eb7d81f0cadd11eea594655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>480</x>
                    <y>376</y>
                    <width>256</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>eb7d81efcadd11eea594655232d2d4c9</id>
                <name><![CDATA[Ia RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter718.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>104</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>eb7d81f0cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Ia phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter718.Ia_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>120</x>
                    <y>8</y>
                    <width>120</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>eb7d81f1cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Voltage measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['eb7d81f2cadd11eea594655232d2d4c9', 'eb7d81f3cadd11eea594655232d2d4c9', 'eb7d81f4cadd11eea594655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>400</x>
                    <y>480</y>
                    <width>440</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>eb7d81f2cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Va RMS (pu)]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/Vnom_ph_to_gnd
]]></code>
                <signal_name><![CDATA[Bus675.V1_rms]]></signal_name>
                <unit><![CDATA[pu]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>144</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>eb7d81f3cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Va phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(bus)]
]]></code>
                <signal_name><![CDATA[Meter718.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>288</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>eb7d81f4cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Va RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter718.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>eb7d81f5cadd11eea594655232d2d4c9</id>
                <name><![CDATA[P load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed
global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


P= 3*VAn_rms*IA_rms*(np.cos(np.deg2rad(Va_ph-Ia_ph)))
displayValue = P/1e3]]></code>
                <signal_name><![CDATA[Meter717.Va_rms]]></signal_name>
                <unit><![CDATA[kW]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>432</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>150.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>eb7d81f6cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Q load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

import numpy as np
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed

global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


Q= 3*VAn_rms*IA_rms*(np.sin(np.deg2rad(Va_ph-Ia_ph)))
displayValue = Q/1e3]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[kVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>608</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>eb7d81f7cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Text display]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": "Bus {} Load".format(bus),

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>512</x>
                    <y>176</y>
                    <width>160</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>eda7b698cadd11eea594655232d2d4c9</id>
                <name><![CDATA[BUS8]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['eda7b699cadd11eea594655232d2d4c9', 'eda7b69acadd11eea594655232d2d4c9', 'eda7b69bcadd11eea594655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "8"]]></initialization_code>
                <widget_settings>
                    <x>808</x>
                    <y>24</y>
                    <width>96</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>eda7b699cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Meter8_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter701.Va_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>72</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>eda7b69acadd11eea594655232d2d4c9</id>
                <name><![CDATA[Meter8_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter701.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>96</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>eda7b69bcadd11eea594655232d2d4c9</id>
                <name><![CDATA[Sub-Panel]]></name>
                <name_position><![CDATA[Top]]></name_position>
                <type>SubPanel</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['eda7b69ccadd11eea594655232d2d4c9', 'eda7b69fcadd11eea594655232d2d4c9', 'eda7b6a3cadd11eea594655232d2d4c9', 'eda7b6a4cadd11eea594655232d2d4c9', 'eda7b6a5cadd11eea594655232d2d4c9']]]></components_ids>
                <working_mode>Embedded</working_mode>
                <canvas_window_visible>False</canvas_window_visible>
                <canvas_window_geometry><![CDATA[None]]></canvas_window_geometry>
                <canvas_window_state><![CDATA[None]]></canvas_window_state>
                <canvas_window_in_fullscreen>False</canvas_window_in_fullscreen>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <use_background_image>True</use_background_image>
                <image><![CDATA[../../../../Program Files/Typhoon HIL Control Center 2024.1/examples/models/power systems/references/satisfaction-meter-md.png]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>72</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>eda7b69ccadd11eea594655232d2d4c9</id>
                <name><![CDATA[Current measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['eda7b69dcadd11eea594655232d2d4c9', 'eda7b69ecadd11eea594655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>480</x>
                    <y>376</y>
                    <width>256</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>eda7b69dcadd11eea594655232d2d4c9</id>
                <name><![CDATA[Ia RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]/1000]]></code>
                <signal_name><![CDATA[Meter718.Ia_rms]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>104</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>eda7b69ecadd11eea594655232d2d4c9</id>
                <name><![CDATA[Ia phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter718.Ia_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>120</x>
                    <y>8</y>
                    <width>120</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>eda7b69fcadd11eea594655232d2d4c9</id>
                <name><![CDATA[Voltage measurement]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['eda7b6a0cadd11eea594655232d2d4c9', 'eda7b6a1cadd11eea594655232d2d4c9', 'eda7b6a2cadd11eea594655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>400</x>
                    <y>480</y>
                    <width>440</width>
                    <height>96</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>3</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>eda7b6a0cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Va RMS (pu)]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/Vnom_ph_to_gnd
]]></code>
                <signal_name><![CDATA[Bus675.V1_rms]]></signal_name>
                <unit><![CDATA[pu]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>144</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>eda7b6a1cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Va phase]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed

global Vdata_dict

displayValue = Vdata_dict["Meter{}.Va_ph".format(bus)]
]]></code>
                <signal_name><![CDATA[Meter718.Va_ph]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>288</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>eda7b6a2cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Va RMS]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------

# mandatory variable used for storing value
# that will be displayed
global Vdata_dict

displayValue = Vdata_dict["Meter{}.VAn_rms".format(bus)]/1000
]]></code>
                <signal_name><![CDATA[Meter718.Va_rms]]></signal_name>
                <unit><![CDATA[kV]]></unit>
                <automatic_unit>True</automatic_unit>
                <decimals><![CDATA[4]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>8</y>
                    <width>144</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[4]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>eda7b6a3cadd11eea594655232d2d4c9</id>
                <name><![CDATA[P load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed
global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


P= 3*VAn_rms*IA_rms*(np.cos(np.deg2rad(Va_ph-Ia_ph)))
displayValue = P/1e3]]></code>
                <signal_name><![CDATA[Meter717.Va_rms]]></signal_name>
                <unit><![CDATA[kW]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>432</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>150.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>eda7b6a4cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Q load]]></name>
                <type>Gauge</type>
                <description><![CDATA[None]]></description>
                <data_type>Expression</data_type>
                <code><![CDATA[#----------------------- MANDATORY IMPORT --------------------------
# HIL Control Panel API

import numpy as np
# NOTE: Only read functions are available from HIL Control Panel API
#-------------------------------------------------------------------
# mandatory variable used for storing value
# that will be displayed

global Vdata_dict
global Idata_dict

VAn_rms = Vdata_dict["Meter{}.VAn_rms".format(bus)]
Va_ph = Vdata_dict["Meter{}.Va_ph".format(bus)]
IA_rms = Idata_dict["Meter{}.IA_rms".format(bus)]
Ia_ph = Idata_dict["Meter{}.Ia_ph".format(bus)]


Q= 3*VAn_rms*IA_rms*(np.sin(np.deg2rad(Va_ph-Ia_ph)))
displayValue = Q/1e3]]></code>
                <signal_name><![CDATA[]]></signal_name>
                <unit><![CDATA[kVAr]]></unit>
                <automatic_unit>True</automatic_unit>
                <updateRate>1000</updateRate>
                <decimals>3</decimals>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>608</x>
                    <y>232</y>
                    <width>176</width>
                    <height>136</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>eda7b6a5cadd11eea594655232d2d4c9</id>
                <name><![CDATA[Text display]]></name>
                <type>TextDisplay</type>
                <description><![CDATA[]]></description>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# specify Text Display options ('text' part is mandatory)
textDisplayData = {

    # label text
    "text": "Bus {} Load".format(bus),

    # text color: 'red', 'green', 'blue', 'orange', 'black'
    "text_color": 'black',
}

# mandatory variable used for storing value that will be displayed
displayValue = textDisplayData
]]></code>
                <updateRate>1000</updateRate>
                <widget_settings>
                    <x>512</x>
                    <y>176</y>
                    <width>160</width>
                    <height>56</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[3]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>True</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>1dbc0514cade11eea594655232d2d4c9</id>
                <name><![CDATA[Signal data logger]]></name>
                <type>SignalDataLogger</type>
                <description><![CDATA[]]></description>
                <data_type>Expression</data_type>
                <expression_code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
import datetime
# mandatory variable used for storing values that will be logged into the data file
# specify logging data ("names" and "values" parts are mandatory)
global Idata_dict

utc_time = datetime.datetime.now(datetime.timezone.utc)
utc_Year = utc_time.strftime("%Y")
utc_Month = utc_time.strftime("%m")
utc_Day = utc_time.strftime("%d")
utc_Hour = utc_time.strftime("%H")
utc_Minute = utc_time.strftime("%M")
utc_Second = utc_time.strftime("%S.%f")

utc_Year_float = float(utc_Year)
utc_Month_float = float(utc_Month)
utc_Day_float = float(utc_Day)
utc_Hour_float = float(utc_Hour)
utc_Minute_float = float(utc_Minute)
utc_Second_float = float(utc_Second)

utc_Year_widget = panel.get_widget_by_fqn("utc_Year")
panel.set_property_value(utc_Year_widget, api_const.PROP_WIDGET_VALUE, utc_Year_float)
hil.model_write('utc_Year', utc_Year_float)

utc_Month_widget = panel.get_widget_by_fqn("utc_Month")
panel.set_property_value(utc_Month_widget, api_const.PROP_WIDGET_VALUE, utc_Month_float)
hil.model_write('utc_Month', utc_Month_float)

utc_Day_widget = panel.get_widget_by_fqn("utc_Day")
panel.set_property_value(utc_Day_widget, api_const.PROP_WIDGET_VALUE, utc_Day_float)
hil.model_write('utc_Day', utc_Day_float)

utc_Hour_widget = panel.get_widget_by_fqn("utc_Hour")
panel.set_property_value(utc_Hour_widget, api_const.PROP_WIDGET_VALUE, utc_Hour_float)
hil.model_write('utc_Hour', utc_Hour_float)

utc_Minute_widget = panel.get_widget_by_fqn("utc_Minute")
panel.set_property_value(utc_Minute_widget, api_const.PROP_WIDGET_VALUE, utc_Minute_float)
hil.model_write('utc_Minute', utc_Minute_float)

utc_Second_widget = panel.get_widget_by_fqn("utc_Second")
panel.set_property_value(utc_Second_widget, api_const.PROP_WIDGET_VALUE, utc_Second_float)
hil.model_write('utc_Second', utc_Second_float)

data_name = list(Idata_dict.keys())
data_value = list(Idata_dict.values())

data = {
    # signals/data names: ["Signal 1 name","Signal 2 name","Signal 3 name"]
    "names": ["Year", "Month", "Day", "Hour", "Minute", "Second",
    data_name[0], data_name[1], data_name[2], data_name[3], data_name[4], data_name[5],
    data_name[6], data_name[7], data_name[8], data_name[9], data_name[10], data_name[11],
    data_name[12], data_name[13]],

    # signals/data values: [sigVal1,sigVal2,sigVal3]
    "values": [utc_Year_float, utc_Month_float, utc_Day_float,
    utc_Hour_float, utc_Minute_float, utc_Second_float,
    data_value[0], data_value[1], data_value[2], data_value[3], data_value[4], data_value[5],
    data_value[6], data_value[7], data_value[8], data_value[9], data_value[10], data_value[11],
    data_value[12], data_value[13]],
    }]]></expression_code>
                <analog_signals><![CDATA[[]]]></analog_signals>
                <digital_signals><![CDATA[[]]]></digital_signals>
                <update_rate>250</update_rate>
                <use_slower_update_rate>False</use_slower_update_rate>
                <slower_update_rate>2</slower_update_rate>
                <widget_settings>
                    <x>1600</x>
                    <y>104</y>
                    <width>120</width>
                    <height>120</height>
                    <appearance><![CDATA[Raised]]></appearance>
                    <hierarchy_position><![CDATA[1]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <data_file_settings>
                    <data_file_dir><![CDATA[ ]]></data_file_dir>
                    <data_file_name><![CDATA[DN1_data]]></data_file_name>
                    <use_panel_file_dir>True</use_panel_file_dir>
                    <data_file_format><![CDATA[csv]]></data_file_format>
                    <use_file_name_suffix><![CDATA[True]]></use_file_name_suffix>
                    <start_logging_on_sim_start><![CDATA[False]]></start_logging_on_sim_start>
                </data_file_settings>
            </component_data>
        <component_data>
                <id>b654e4f6cc3411eea59e655232d2d4c9</id>
                <name><![CDATA[Image]]></name>
                <type>Image</type>
                <description><![CDATA[]]></description>
                <image><![CDATA[ThreeFeeder.jpg]]></image>
                <image_scaling><![CDATA[Keep aspect ratio]]></image_scaling>
                <widget_settings>
                    <x>0</x>
                    <y>136</y>
                    <width>1200</width>
                    <height>800</height>
                    <background_color><![CDATA[#efefef]]></background_color>
                    <background_type><![CDATA[Transparent]]></background_type>
                    <is_background>True</is_background>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>25c7153ecc5811eea5ab655232d2d4c9</id>
                <name><![CDATA[BUS1]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['25c7153fcc5811eea5ab655232d2d4c9', '25c71540cc5811eea5ab655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "1"]]></initialization_code>
                <widget_settings>
                    <x>224</x>
                    <y>824</y>
                    <width>96</width>
                    <height>88</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>25c7153fcc5811eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter1_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter1_IaM]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>25c71540cc5811eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter1_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter1_IaP]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>24</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>5d074fbecc5811eea5ab655232d2d4c9</id>
                <name><![CDATA[BUS2]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['5d074fbfcc5811eea5ab655232d2d4c9', '5d074fc0cc5811eea5ab655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "2"]]></initialization_code>
                <widget_settings>
                    <x>320</x>
                    <y>824</y>
                    <width>96</width>
                    <height>88</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>5d074fbfcc5811eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter2_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter2_IaM]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>5d074fc0cc5811eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter2_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter2_IaP]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>24</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>70cb1c06cc5811eea5ab655232d2d4c9</id>
                <name><![CDATA[BUS3]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['70cb1c07cc5811eea5ab655232d2d4c9', '70cb1c08cc5811eea5ab655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "3"]]></initialization_code>
                <widget_settings>
                    <x>416</x>
                    <y>824</y>
                    <width>96</width>
                    <height>88</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>70cb1c07cc5811eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter3_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter3_IaM]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>70cb1c08cc5811eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter3_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter3_IaP]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>24</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>542e68fcccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[BUS4]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['542e68fdccf611eea5ab655232d2d4c9', '542e68feccf611eea5ab655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "4"]]></initialization_code>
                <widget_settings>
                    <x>512</x>
                    <y>824</y>
                    <width>96</width>
                    <height>88</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>542e68fdccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter4_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter4_IaM]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>542e68feccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter4_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter4_IaP]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>24</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>5692c476ccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[BUS5]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['5692c477ccf611eea5ab655232d2d4c9', '5692c478ccf611eea5ab655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "5"]]></initialization_code>
                <widget_settings>
                    <x>608</x>
                    <y>824</y>
                    <width>96</width>
                    <height>88</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>5692c477ccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter5_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter5_IaM]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>5692c478ccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter5_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter5_IaP]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>24</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>59593d52ccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[BUS6]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['59593d53ccf611eea5ab655232d2d4c9', '59593d54ccf611eea5ab655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "6"]]></initialization_code>
                <widget_settings>
                    <x>704</x>
                    <y>824</y>
                    <width>96</width>
                    <height>88</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>59593d53ccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter6_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter6_IaM]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>59593d54ccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter6_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter6_IaP]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>24</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>5b355cdcccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[BUS7]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['5b355cddccf611eea5ab655232d2d4c9', '5b355cdeccf611eea5ab655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "7"]]></initialization_code>
                <widget_settings>
                    <x>800</x>
                    <y>824</y>
                    <width>96</width>
                    <height>88</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>5b355cddccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter7_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter7_IaM]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>5b355cdeccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter3_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter3_IaP]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>24</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>b44b2982ccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[BUS15]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['b44b2983ccf611eea5ab655232d2d4c9', 'b44b2984ccf611eea5ab655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "15"]]></initialization_code>
                <widget_settings>
                    <x>224</x>
                    <y>920</y>
                    <width>96</width>
                    <height>88</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>b44b2985ccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[BUS16]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['b44b2986ccf611eea5ab655232d2d4c9', 'b44b2987ccf611eea5ab655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "16"]]></initialization_code>
                <widget_settings>
                    <x>320</x>
                    <y>920</y>
                    <width>96</width>
                    <height>88</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>b44b2988ccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[BUS17]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['b44b2989ccf611eea5ab655232d2d4c9', 'b44b298accf611eea5ab655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "17"]]></initialization_code>
                <widget_settings>
                    <x>416</x>
                    <y>920</y>
                    <width>96</width>
                    <height>88</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>b44b298bccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[BUS18]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['b44b298cccf611eea5ab655232d2d4c9', 'b44b298dccf611eea5ab655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "18"]]></initialization_code>
                <widget_settings>
                    <x>512</x>
                    <y>920</y>
                    <width>96</width>
                    <height>88</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>b44b298eccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[BUS19]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['b44b298fccf611eea5ab655232d2d4c9', 'b44b2990ccf611eea5ab655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "19"]]></initialization_code>
                <widget_settings>
                    <x>608</x>
                    <y>920</y>
                    <width>96</width>
                    <height>88</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>b44b2991ccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[BUS20]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['b44b2992ccf611eea5ab655232d2d4c9', 'b44b2993ccf611eea5ab655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "20"]]></initialization_code>
                <widget_settings>
                    <x>704</x>
                    <y>920</y>
                    <width>96</width>
                    <height>88</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>b44b2994ccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[BUS21]]></name>
                <type>Group</type>
                <description><![CDATA[]]></description>
                <components_ids><![CDATA[['b44b2995ccf611eea5ab655232d2d4c9', 'b44b2996ccf611eea5ab655232d2d4c9']]]></components_ids>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

bus = "21"]]></initialization_code>
                <widget_settings>
                    <x>800</x>
                    <y>920</y>
                    <width>96</width>
                    <height>88</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                
                <linked_model_components_settings>
                    </linked_model_components_settings>
            </component_data>
        <component_data>
                <id>b44b2983ccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter15_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter15_IaM]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>b44b2984ccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter15_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter15_IaP]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>24</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>b44b2986ccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter16_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter16_IaM]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>b44b2987ccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter16_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter16_IaP]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>24</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>b44b2989ccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter17_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter17_IaM]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>b44b298accf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter17_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter17_IaP]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>24</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>b44b298cccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter18_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter18_IaM]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>b44b298dccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter18IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter18_IaP]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>24</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>b44b298fccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter19_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter19_IaM]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>b44b2990ccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter19_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter19_IaP]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>24</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>b44b2992ccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter20_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter20_IaM]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>b44b2993ccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter20_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter20_IaP]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>24</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>b44b2995ccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter21_IaM]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.IA_rms".format(bus)]

]]></code>
                <signal_name><![CDATA[Meter21_IaM]]></signal_name>
                <unit><![CDATA[kA]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[3]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>0.001</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>0</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>b44b2996ccf611eea5ab655232d2d4c9</id>
                <name><![CDATA[Meter21_IaP]]></name>
                <type>DigitalDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
global Idata_dict

displayValue = Idata_dict["Meter{}.Ia_ph".format(bus)]]]></code>
                <signal_name><![CDATA[Meter21_IaP]]></signal_name>
                <unit><![CDATA[°]]></unit>
                <automatic_unit>False</automatic_unit>
                <decimals><![CDATA[2]]></decimals>
                <updateRate>1000</updateRate>
                <scaling_factor>1.0</scaling_factor>
                <widget_settings>
                    <x>0</x>
                    <y>24</y>
                    <width>88</width>
                    <height>48</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position><![CDATA[2]]></hierarchy_position>
                    <is_background><![CDATA[False]]></is_background>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <green_range>(0, 0, 0, 0)</green_range>
                    <orange_range>(0, 0, 0, 0)</orange_range>
                    <red_range>(0, 0, 0, 0)</red_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>1be69098efd111ee96c3c79dae4abe65</id>
                <name><![CDATA[utc_Day]]></name>
                <type>TextBoxMacro</type>
                <description><![CDATA[]]></description>
                <on_use_code active="True"><![CDATA[# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
# NOTE: entered value is available through variable 'inputValue'

hil.model_write('utc_Day', inputValue)]]></on_use_code>
                <on_start_code active="True"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change the widget value by setting this variable.
# NOTE: If you do not specify a 'widgetValue' variable or assign 'None' to it,
# the widget value will not be changed.
widgetValue = hil.model_read('utc_HMS')
]]></on_timer_code>
                <on_start_code_source><![CDATA[Macro code]]></on_start_code_source>
                <inputValue><![CDATA[18.0]]></inputValue>
                <inputValueType>float</inputValueType>
                <unit><![CDATA[]]></unit>
                <widget_settings>
                    <x>1776</x>
                    <y>200</y>
                    <width>152</width>
                    <height>48</height>
                    <inputWidgetWidth>80</inputWidgetWidth>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>1be69099efd111ee96c3c79dae4abe65</id>
                <name><![CDATA[utc_Month]]></name>
                <type>TextBoxMacro</type>
                <description><![CDATA[]]></description>
                <on_use_code active="True"><![CDATA[# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
# NOTE: entered value is available through variable 'inputValue'

hil.model_write('utc_Month', inputValue)]]></on_use_code>
                <on_start_code active="True"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change the widget value by setting this variable.
# NOTE: If you do not specify a 'widgetValue' variable or assign 'None' to it,
# the widget value will not be changed.
widgetValue = hil.model_read('utc_HMS')
]]></on_timer_code>
                <on_start_code_source><![CDATA[Macro code]]></on_start_code_source>
                <inputValue><![CDATA[4.0]]></inputValue>
                <inputValueType>float</inputValueType>
                <unit><![CDATA[]]></unit>
                <widget_settings>
                    <x>1768</x>
                    <y>152</y>
                    <width>152</width>
                    <height>48</height>
                    <inputWidgetWidth>80</inputWidgetWidth>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>1be6909aefd111ee96c3c79dae4abe65</id>
                <name><![CDATA[utc_Second]]></name>
                <type>TextBoxMacro</type>
                <description><![CDATA[]]></description>
                <on_use_code active="True"><![CDATA[# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
# NOTE: entered value is available through variable 'inputValue'

hil.model_write('utc_Second', inputValue)]]></on_use_code>
                <on_start_code active="True"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change the widget value by setting this variable.
# NOTE: If you do not specify a 'widgetValue' variable or assign 'None' to it,
# the widget value will not be changed.
widgetValue = hil.model_read('utc_HMS')
]]></on_timer_code>
                <on_start_code_source><![CDATA[Macro code]]></on_start_code_source>
                <inputValue><![CDATA[15.943583]]></inputValue>
                <inputValueType>float</inputValueType>
                <unit><![CDATA[]]></unit>
                <widget_settings>
                    <x>1768</x>
                    <y>352</y>
                    <width>152</width>
                    <height>48</height>
                    <inputWidgetWidth>80</inputWidgetWidth>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>1be6909befd111ee96c3c79dae4abe65</id>
                <name><![CDATA[utc_Year]]></name>
                <type>TextBoxMacro</type>
                <description><![CDATA[]]></description>
                <on_use_code active="True"><![CDATA[# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
# NOTE: entered value is available through variable 'inputValue'

hil.model_write('utc_Year', inputValue)]]></on_use_code>
                <on_start_code active="True"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change the widget value by setting this variable.
# NOTE: If you do not specify a 'widgetValue' variable or assign 'None' to it,
# the widget value will not be changed.
widgetValue = hil.model_read('utc_HMS')
]]></on_timer_code>
                <on_start_code_source><![CDATA[Macro code]]></on_start_code_source>
                <inputValue><![CDATA[2024.0]]></inputValue>
                <inputValueType>float</inputValueType>
                <unit><![CDATA[]]></unit>
                <widget_settings>
                    <x>1776</x>
                    <y>104</y>
                    <width>152</width>
                    <height>48</height>
                    <inputWidgetWidth>80</inputWidgetWidth>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>1be6909cefd111ee96c3c79dae4abe65</id>
                <name><![CDATA[utc_Minute]]></name>
                <type>TextBoxMacro</type>
                <description><![CDATA[]]></description>
                <on_use_code active="True"><![CDATA[# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
# NOTE: entered value is available through variable 'inputValue'

hil.model_write('utc_Minute', inputValue)]]></on_use_code>
                <on_start_code active="True"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change the widget value by setting this variable.
# NOTE: If you do not specify a 'widgetValue' variable or assign 'None' to it,
# the widget value will not be changed.
widgetValue = hil.model_read('utc_HMS')
]]></on_timer_code>
                <on_start_code_source><![CDATA[Macro code]]></on_start_code_source>
                <inputValue><![CDATA[17.0]]></inputValue>
                <inputValueType>float</inputValueType>
                <unit><![CDATA[]]></unit>
                <widget_settings>
                    <x>1768</x>
                    <y>304</y>
                    <width>152</width>
                    <height>48</height>
                    <inputWidgetWidth>80</inputWidgetWidth>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        <component_data>
                <id>1be6909defd111ee96c3c79dae4abe65</id>
                <name><![CDATA[utc_Hour]]></name>
                <type>TextBoxMacro</type>
                <description><![CDATA[]]></description>
                <on_use_code active="True"><![CDATA[# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.
# NOTE: entered value is available through variable 'inputValue'

hil.model_write('utc_Hour', inputValue)]]></on_use_code>
                <on_start_code active="True"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it,
# widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# 'WIDGET_HANDLE' constant holds the WidgetHandle object of this widget.
# This object can be used as an argument in SCADA API functions.

# Change the widget value by setting this variable.
# NOTE: If you do not specify a 'widgetValue' variable or assign 'None' to it,
# the widget value will not be changed.
widgetValue = hil.model_read('utc_HMS')
]]></on_timer_code>
                <on_start_code_source><![CDATA[Macro code]]></on_start_code_source>
                <inputValue><![CDATA[0.0]]></inputValue>
                <inputValueType>float</inputValueType>
                <unit><![CDATA[]]></unit>
                <widget_settings>
                    <x>1776</x>
                    <y>248</y>
                    <width>152</width>
                    <height>48</height>
                    <inputWidgetWidth>80</inputWidgetWidth>
                    <appearance><![CDATA[Flat]]></appearance>
                    <hierarchy_position>1</hierarchy_position>
                    <label><![CDATA[]]></label>
                    <use_label>False</use_label>
                </widget_settings>
            </component_data>
        </components>
</ui_settings>