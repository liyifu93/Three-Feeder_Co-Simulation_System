version = 4.2

//
// Saved by sw version: 2024.1
//

model "DN1_proposed" {
    configuration {
        hil_device = "HIL402"
        hil_configuration_id = 1
        simulation_method = exact
        simulation_time_step = 1e-6
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = False
        reset_analog_outputs_on_sim_stop = True
        reset_analog_outputs_on_sim_stop_mode = Offset values
        reset_digital_outputs_on_sim_stop = True
        vhil_adio_loopback = False
        cpl_stb = False
        enb_dep_sw_detect = False
        code_section = "internal memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 0.0001
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
        user_cpu_part_option = "default"
        matrix_based_reduction = True
        cpl_dynamics_analysis = False
        export_ss_to_pickle = False
        ground_scope_core = True
        dss_num_tol = 1e-15
        cce_platform = "generic"
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_platform = "generic"
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_directory = ""
        cce_custom_type_int = ""
        cce_custom_type_uint = ""
        cce_custom_type_real = ""
        tunable_params = "component defined"
        sp_compiler_type = "C compiler"
        sig_stim = "off"
        export_resource_list = ""
        export_dependency_list = ""
        excluded_resource_list = ""
        export_out_file = ""
        export_lock_top_level = True
        export_encrypt_library = True
        export_encrypt_resources = True
        dae_solver = "BDF"
        max_sim_step = 1e-4
        simulation_time = 1.0
        abs_tol = 1e-3
        rel_tol = 1e-3
        init_sim_step = 1e-6
        r_on_sw = 1e-3
        v_on_diode = 0.2
        data_sampling_rate = 0
        feedthrough_validation_error_level = error
    }

    component Subsystem Root {
        component "core/Three Phase Voltage Source" HV2 {
            init_frequency = "f"
            init_rms_value = "HV2_H"
        }
        [
            position = 320, 6248
            size = 62, 256
        ]

        component "core/Ground" gnd1 {
        }
        [
            position = 216, 6528
        ]

        component "core/Time Synchronization Status" "Time Synchronization Status1" {
            execution_rate = "ex_rate"
        }
        [
            position = 624, 5544
            size = 80, 64
        ]

        component "core/Probe" gps {
        }
        [
            position = 760, 5528
        ]

        component "core/Probe" ptp {
        }
        [
            position = 760, 5608
        ]

        component "core/ETH VE Setup" "ETH VE Setup" {
            eth_port = "1"
            eth_port0 = "1"
            eth_port1 = "1"
            eth_port10 = "1"
            eth_port11 = "1"
            eth_port12 = "1"
            eth_port13 = "1"
            eth_port14 = "1"
            eth_port15 = "1"
            eth_port2 = "1"
            eth_port3 = "1"
            eth_port4 = "1"
            eth_port5 = "1"
            eth_port6 = "1"
            eth_port7 = "1"
            eth_port8 = "1"
            eth_port9 = "1"
            ethernet_port_per_device = "{\'HIL100\': {}, \'HIL104\': {}, \'HIL402\': {\'0\': \'1\', \'1\': \'1\', \'2\': \'1\', \'3\': \'1\', \'4\': \'1\', \'5\': \'1\', \'6\': \'1\', \'7\': \'1\', \'8\': \'1\', \'9\': \'1\', \'10\': \'1\', \'11\': \'1\', \'12\': \'1\', \'13\': \'1\', \'14\': \'1\', \'15\': \'1\'}, \'HIL404\': {\'0\': \'2\', \'1\': \'2\', \'2\': \'2\', \'3\': \'2\', \'4\': \'2\', \'5\': \'2\', \'6\': \'2\', \'7\': \'2\', \'8\': \'2\', \'9\': \'2\', \'10\': \'2\', \'11\': \'2\', \'12\': \'2\', \'13\': \'2\', \'14\': \'2\', \'15\': \'2\'}, \'HIL602+\': {}, \'HIL603\': {}, \'HIL604\': {}, \'HIL606\': {}, \'VHIL+\': {}}"
            execution_rate = "ex_rate"
            ip_addr = "192.168.0.101"
            override_device_id = "True"
        }
        [
            position = 1112, 5552
        ]

        component "core/ETH VE Send" "ETH VE Send1" {
            configuration = "[{\'signal_name\': \'Meter14_IaM\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter13_IaM\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter12_IaM\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter11_IaM\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter10_IaM\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter9_IaM\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter8_IaM\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}]"
            dest_ip = "192.168.0.103"
            destination_port = "11000"
            local_send_port = "11011"
            protocol = "TCP/IP"
            sample_time = "0.01"
            signal_names_dict = ""
            stream_source_id = "1001"
        }
        [
            position = 1488, 5592
            size = 96, 184
        ]

        component "core/ETH VE Receive" "ETH VE Receive1" {
            configuration = "[{\'signal_name\': \'Meter1_IaM\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter2_IaM\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter3_IaM\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter4_IaM\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter5_IaM\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter6_IaM\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter7_IaM\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter15_IaM\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter16_IaM\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter17_IaM\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter18_IaM\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter19_IaM\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter20_IaM\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter21_IaM\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}]"
            execution_rate = "ex_rate"
            local_receive_port = "33000"
            protocol = "TCP/IP"
            remote_connection_port = "33033"
            src_ip = "192.168.0.103"
        }
        [
            position = 2112, 5592
            size = 80, 248
        ]

        component "core/Three Phase Two Winding Transformer" Substation_D-Yg1 {
            L1 = "100"
            L2 = "1"
            Lm = "4e5"
            Poc1 = "50000.0"
            Psc1 = "50000.0"
            R1 = "600"
            R2 = "10"
            Rm = "1e8"
            Sn = "S_TR2"
            V1 = "HV2_H"
            V2 = "V_ln"
            clock_number = "11"
            current_vals_SCOC = "[0.0024, 1]"
            current_vals_SI = "[0.04919003695210766, 20.49584873000387]"
            current_vals_pu = "[0.002399999999999626, 0.9999999999978111]"
            f = "f"
            flux_vals_SCOC = "[1.2, 1.52]"
            flux_vals_SI = "[517.681881790336, 655.7303836010923]"
            flux_vals_pu = "[1.199999999999221, 1.5199999999997857]"
            input = "pu"
            ioc1 = "2.23606797749"
            l1 = "0.01"
            l2 = "0.01"
            lm = "150"
            r1 = "0.02"
            r2 = "0.02"
            rm = "350"
            usc1 = "8.0622577483"
            winding_1_connection = "D"
        }
        [
            position = 544, 6248
            size = 126, 256
        ]

        component Subsystem Meter14 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter14_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter14_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "Meter14_IaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8256, 8144
                hide_name = True
                size = 84, 20
            ]

            tag Goto2 {
                value = "Meter14_IaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9040, 8048
                hide_name = True
                size = 84, 20
            ]

            junction Junction1 sp
            [
                position = 8112, 8096
            ]

            junction Junction2 sp
            [
                position = 8856, 8024
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect From2 "Meter Split2.Input" as Connection489
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect "Meter Split1.VAn" Va_goto as Connection649
            [
                breakpoints = 7720, 7856
            ]
            connect "Meter Split2.IA" Ia_goto as Connection651
            [
                breakpoints = 8112, 7856
            ]
            connect "Meter Split2.IB" Ib_goto as Connection653
            [
                breakpoints = 8112, 7936
            ]
            connect Ic_goto "Meter Split2.IC" as Connection652
            [
                breakpoints = 8104, 8016
            ]
            connect IA_rms.in Junction1 as Connection656
            connect Junction1 "Meter Split2.IA_RMS" as Connection657
            [
                breakpoints = 8112, 8096; 8112, 8096
            ]
            connect Goto1 Junction1 as Connection658
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection665
            [
                breakpoints = 8120, 8176; 8120, 8176; 8112, 8176
            ]
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection666
            [
                breakpoints = 8120, 8256; 8120, 8256
            ]
            connect Ia_ph.in Junction2 as Connection667
            connect Junction2 "Bus Split.out3" as Connection668
            [
                breakpoints = 8856, 8024; 8856, 8024; 8848, 8024
            ]
            connect Goto2 Junction2 as Connection669
        }
        [
            position = 920, 6592
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter14 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 920, 6336
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg14 {
            SAB = "load[\"14\"][\"S\"]/3"
            SAn = "load[\"14\"][\"S\"]/3"
            SBC = "load[\"14\"][\"S\"]/3"
            SBn = "load[\"14\"][\"S\"]/3"
            SCA = "load[\"14\"][\"S\"]/3"
            SCn = "load[\"14\"][\"S\"]/3"
            Sn_3ph = "load[\"14\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/np.sqrt(3)"
            VBC = "V_ll"
            VBn = "V_ll/np.sqrt(3)"
            VCA = "V_ll"
            VCn = "V_ll/np.sqrt(3)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"14\"][\"pf\"]"
            pfB = "load[\"14\"][\"pf\"]"
            pfC = "load[\"14\"][\"pf\"]"
            pf_3ph = "load[\"14\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 920, 6480
            scale = -1, 1
            size = 96, 80
        ]

        component "core/RL Section" L14-13 {
            embedded_coupling = "True"
            inductance_per_l = "branch[\"14-13\"][\"L\"]"
            length = "line_len"
            resistance_per_l = "branch[\"14-13\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 1176, 6248
            size = 256, 56
        ]

        component "core/Voltage Measurement" Vref {
            addr = "51"
            execution_rate = "ex_rate"
            sig_output = "True"
            signal_access = "Inherit"
        }
        [
            position = 608, 5992
            scale = -1, 1
            size = 64, 32
        ]

        component "core/RMS value" "RMS value1" {
        }
        [
            position = 656, 5880
            hide_name = True
        ]

        component "core/Probe" Vref_rms {
        }
        [
            position = 744, 5880
        ]

        component Subsystem Meter13 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter13_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter13_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Goto2 {
                value = "Meter13_IaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8320, 8136
                hide_name = True
                size = 84, 20
            ]

            tag Goto3 {
                value = "Meter13_IaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9048, 8056
                hide_name = True
                size = 84, 20
            ]

            junction Junction1 sp
            [
                position = 8112, 8096
            ]

            junction Junction2 sp
            [
                position = 8856, 8024
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect IA_rms.in Junction1 as Connection603
            connect Junction1 "Meter Split2.IA_RMS" as Connection604
            [
                breakpoints = 8120, 8096; 8112, 8096
            ]
            connect "Bus Split.out3" Junction2 as Connection606
            connect Junction2 Ia_ph.in as Connection607
            connect Goto2 Junction1 as Connection615
            [
                breakpoints = 8240, 8136
            ]
            connect Goto3 Junction2 as Connection616
            [
                breakpoints = 8968, 8056
            ]
        }
        [
            position = 1592, 6592
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter13 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 1592, 6336
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg13 {
            SAB = "load[\"13\"][\"S\"]/3"
            SAn = "load[\"13\"][\"S\"]/3"
            SBC = "load[\"13\"][\"S\"]/3"
            SBn = "load[\"13\"][\"S\"]/3"
            SCA = "load[\"13\"][\"S\"]/3"
            SCn = "load[\"13\"][\"S\"]/3"
            Sn_3ph = "load[\"13\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/np.sqrt(3)"
            VBC = "V_ll"
            VBn = "V_ll/np.sqrt(3)"
            VCA = "V_ll"
            VCn = "V_ll/np.sqrt(3)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"13\"][\"pf\"]"
            pfB = "load[\"13\"][\"pf\"]"
            pfC = "load[\"13\"][\"pf\"]"
            pf_3ph = "load[\"13\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 1592, 6480
            scale = -1, 1
            size = 96, 80
        ]

        component "core/RL Section" L13-12 {
            inductance_per_l = "branch[\"13-12\"][\"L\"]"
            length = "line_len"
            resistance_per_l = "branch[\"13-12\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 1832, 6248
            size = 256, 56
        ]

        component Subsystem Meter12 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter12_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter12_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Goto3 {
                value = "Meter12_IaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8280, 8144
                hide_name = True
                size = 84, 20
            ]

            tag Goto2 {
                value = "Meter12_IaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9048, 8048
                hide_name = True
                size = 84, 20
            ]

            junction Junction1 sp
            [
                position = 8120, 8096
            ]

            junction Junction2 sp
            [
                position = 8856, 8024
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect IA_rms.in Junction1 as Connection595
            connect Junction1 "Meter Split2.IA_RMS" as Connection596
            connect Goto3 Junction1 as Connection597
            connect "Bus Split.out3" Junction2 as Connection598
            connect Junction2 Ia_ph.in as Connection599
            connect Goto2 Junction2 as Connection600
        }
        [
            position = 2208, 6592
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter12 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 2208, 6336
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg12 {
            SAB = "load[\"12\"][\"S\"]/3"
            SAn = "load[\"12\"][\"S\"]/3"
            SBC = "load[\"12\"][\"S\"]/3"
            SBn = "load[\"12\"][\"S\"]/3"
            SCA = "load[\"12\"][\"S\"]/3"
            SCn = "load[\"12\"][\"S\"]/3"
            Sn_3ph = "load[\"12\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/np.sqrt(3)"
            VBC = "V_ll"
            VBn = "V_ll/np.sqrt(3)"
            VCA = "V_ll"
            VCn = "V_ll/np.sqrt(3)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"12\"][\"pf\"]"
            pfB = "load[\"12\"][\"pf\"]"
            pfC = "load[\"12\"][\"pf\"]"
            pf_3ph = "load[\"12\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 2208, 6480
            scale = -1, 1
            size = 96, 80
        ]

        component "core/RL Section" L12-11 {
            inductance_per_l = "branch[\"13-12\"][\"L\"]"
            length = "line_len"
            resistance_per_l = "branch[\"13-12\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 2656, 6248
            size = 256, 56
        ]

        component Subsystem Meter11 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter11_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter11_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Goto3 {
                value = "Meter11_IaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8264, 8144
                hide_name = True
                size = 84, 20
            ]

            tag Goto2 {
                value = "Meter11_IaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9056, 8056
                hide_name = True
                size = 84, 20
            ]

            junction Junction1 sp
            [
                position = 8112, 8096
            ]

            junction Junction2 sp
            [
                position = 8832, 8024
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect IA_rms.in Junction1 as Connection595
            connect Junction1 "Meter Split2.IA_RMS" as Connection596
            connect Goto3 Junction1 as Connection597
            connect "Bus Split.out3" Junction2 as Connection598
            connect Junction2 Ia_ph.in as Connection599
            connect Goto2 Junction2 as Connection600
        }
        [
            position = 3016, 6592
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter11 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 3016, 6336
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg11 {
            SAB = "load[\"11\"][\"S\"]/3"
            SAn = "load[\"11\"][\"S\"]/3"
            SBC = "load[\"11\"][\"S\"]/3"
            SBn = "load[\"11\"][\"S\"]/3"
            SCA = "load[\"11\"][\"S\"]/3"
            SCn = "load[\"11\"][\"S\"]/3"
            Sn_3ph = "load[\"11\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/np.sqrt(3)"
            VBC = "V_ll"
            VBn = "V_ll/np.sqrt(3)"
            VCA = "V_ll"
            VCn = "V_ll/np.sqrt(3)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"11\"][\"pf\"]"
            pfB = "load[\"11\"][\"pf\"]"
            pfC = "load[\"11\"][\"pf\"]"
            pf_3ph = "load[\"11\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 3016, 6480
            scale = -1, 1
            size = 96, 80
        ]

        component "core/RL Section" L11-10 {
            embedded_coupling = "True"
            inductance_per_l = "branch[\"11-10\"][\"L\"]"
            length = "line_len"
            resistance_per_l = "branch[\"11-10\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 3456, 6248
            size = 256, 56
        ]

        component Subsystem Meter10 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter10_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter10_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Goto3 {
                value = "Meter10_IaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8280, 8144
                hide_name = True
                size = 84, 20
            ]

            tag Goto2 {
                value = "Meter10_IaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9040, 8048
                hide_name = True
                size = 84, 20
            ]

            junction Junction1 sp
            [
                position = 8120, 8096
            ]

            junction Junction2 sp
            [
                position = 8856, 8024
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect IA_rms.in Junction1 as Connection595
            connect Junction1 "Meter Split2.IA_RMS" as Connection596
            connect "Bus Split.out3" Junction2 as Connection598
            connect Junction2 Ia_ph.in as Connection599
            connect Junction1 Goto3 as Connection607
            [
                breakpoints = 8120, 8096; 8208, 8144
            ]
            connect Goto2 Junction2 as Connection608
            [
                breakpoints = 8968, 8048
            ]
        }
        [
            position = 3800, 6592
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter10 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 3800, 6336
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg10 {
            SAB = "load[\"10\"][\"S\"]/3"
            SAn = "load[\"10\"][\"S\"]/3"
            SBC = "load[\"10\"][\"S\"]/3"
            SBn = "load[\"10\"][\"S\"]/3"
            SCA = "load[\"10\"][\"S\"]/3"
            SCn = "load[\"10\"][\"S\"]/3"
            Sn_3ph = "load[\"10\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/np.sqrt(3)"
            VBC = "V_ll"
            VBn = "V_ll/np.sqrt(3)"
            VCA = "V_ll"
            VCn = "V_ll/np.sqrt(3)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"10\"][\"pf\"]"
            pfB = "load[\"10\"][\"pf\"]"
            pfC = "load[\"10\"][\"pf\"]"
            pf_3ph = "load[\"10\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 3800, 6480
            scale = -1, 1
            size = 96, 80
        ]

        component "core/RL Section" L10-9 {
            inductance_per_l = "branch[\"10-9\"][\"L\"]"
            length = "line_len"
            resistance_per_l = "branch[\"10-9\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 4208, 6248
            size = 256, 56
        ]

        component "core/RL Section" L9-8 {
            inductance_per_l = "branch[\"9-8\"][\"L\"]"
            length = "line_len"
            resistance_per_l = "branch[\"9-8\"][\"R\"]"
            unit_sys = "metric"
        }
        [
            position = 4952, 6248
            size = 256, 56
        ]

        component Subsystem Meter9 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter9_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter9_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Goto3 {
                value = "Meter9_IaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8264, 8144
                hide_name = True
                size = 84, 20
            ]

            tag Goto2 {
                value = "Meter9_IaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9072, 8056
                hide_name = True
                size = 84, 20
            ]

            junction Junction1 sp
            [
                position = 8112, 8096
            ]

            junction Junction2 sp
            [
                position = 8856, 8024
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect IA_rms.in Junction1 as Connection595
            connect Junction1 "Meter Split2.IA_RMS" as Connection596
            connect Goto3 Junction1 as Connection597
            connect "Bus Split.out3" Junction2 as Connection598
            connect Junction2 Ia_ph.in as Connection599
            connect Goto2 Junction2 as Connection600
        }
        [
            position = 4576, 6592
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter9 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 4576, 6336
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg9 {
            SAB = "load[\"9\"][\"S\"]/3"
            SAn = "load[\"9\"][\"S\"]/3"
            SBC = "load[\"9\"][\"S\"]/3"
            SBn = "load[\"9\"][\"S\"]/3"
            SCA = "load[\"9\"][\"S\"]/3"
            SCn = "load[\"9\"][\"S\"]/3"
            Sn_3ph = "load[\"9\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/np.sqrt(3)"
            VBC = "V_ll"
            VBn = "V_ll/np.sqrt(3)"
            VCA = "V_ll"
            VCn = "V_ll/np.sqrt(3)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"9\"][\"pf\"]"
            pfB = "load[\"9\"][\"pf\"]"
            pfC = "load[\"9\"][\"pf\"]"
            pf_3ph = "load[\"9\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 4576, 6480
            scale = -1, 1
            size = 96, 80
        ]

        component Subsystem Meter8 {
            layout = dynamic
            component "core/Probe" Vb_ph {
                addr = "17999"
            }
            [
                position = 8912, 7912
            ]

            component "core/Meter Split" "Meter Split2" {
                ia = "True"
                ia_rms = "True"
                ib = "True"
                ib_rms = "True"
                ic = "True"
                ic_rms = "True"
                van = "False"
                vbn = "False"
                vcn = "False"
            }
            [
                position = 8016, 8056
                size = 128, 464
            ]

            component "core/Probe" IC_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8256
            ]

            component "core/Meter Split" "Meter Split1" {
                van_rms = "True"
                vbn_rms = "True"
                vcn_rms = "True"
            }
            [
                position = 7632, 8056
                size = 128, 464
            ]

            component "core/Probe" Ia_ph {
                addr = "17999"
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter8_IaP"
                streaming_en = "True"
            }
            [
                position = 8912, 8024
            ]

            component "core/Probe" Va_ph {
                addr = "17999"
            }
            [
                position = 8912, 7856
            ]

            component "core/Probe" VCn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8256
            ]

            component "core/Probe" IA_rms {
                override_signal_name = "True"
                signal_access = "Inherit"
                signal_name = "Meter8_IaM"
                signal_type = "current"
                streaming_en = "True"
            }
            [
                position = 8160, 8096
            ]

            component "core/Probe" Vc_ph {
                addr = "17999"
            }
            [
                position = 8912, 7968
            ]

            component "core/Probe" Ib_ph {
                addr = "17999"
            }
            [
                position = 8912, 8080
            ]

            component "core/Probe" VAn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8096
            ]

            component "core/Probe" IB_rms {
                signal_type = "current"
            }
            [
                position = 8160, 8176
            ]

            component "core/Probe" VBn_rms {
                signal_type = "voltage"
            }
            [
                position = 7768, 8176
            ]

            component "core/Probe" Ic_ph {
                addr = "17999"
            }
            [
                position = 8912, 8136
            ]

            component "core/C function" phase_diff_6_phase {
                global_variables = "real phase_state[6];real previous_correction_ref;real previous_correction_in[6];real sample_cnt_ref;real sample_cnt_in[6];real previous_filtered_ref;real previous_filtered_in[6];real correction_ref;real correction_in[6];real zc_flag_in[6];real no_zc_flag_in[6];real zc_flag_ref;real filtered_ref;real filtered_in[6];real f3db;real omega3db;real alpha;real one_minus_alpha;real timeout;int i;"
                init_fnc = "/*Begin code section*/
f3db = 500;
omega3db = f3db * M_PI*execution_rate/2; 
alpha = cos(omega3db) -1 + sqrt(cos(omega3db)*(cos(omega3db)-4)+3);
one_minus_alpha = 1 - alpha;
timeout = 0.5/execution_rate;

previous_correction_ref = 0.0;
sample_cnt_ref = 0.0;
previous_filtered_ref = 0.0;
filtered_ref = 0.0;

for(i=0; i<6; i++){
    phase_state[i] = 0.0;
    previous_correction_in[i] = 0.0;
    sample_cnt_in[i] = 0.0;
    filtered_in[i] = 0.0;
    previous_filtered_in[i] = 0.0;
    no_zc_flag_in[i] = 0.0;
}
/*End code section*/"
                input_terminals = "real ref;real in;"
                input_terminals_dimensions = "1;6"
                input_terminals_feedthrough = "[\'\']"
                input_terminals_show_labels = "[(\'ref\', True), (\'in\', True)]"
                output_fnc = "/*Begin code section*/
for(i=0; i<6; i++){
    phase_diff[i] = phase_state[i];
}
/*End code section*/"
                output_terminals = "real phase_diff;"
                output_terminals_dimensions = "6"
                output_terminals_feedthrough = "[\'\']"
                output_terminals_show_labels = "[(\'phase_diff\', True)]"
                update_fnc = "/*Begin code section*/
sample_cnt_ref += 1.0;

previous_filtered_ref = filtered_ref;
filtered_ref = previous_filtered_ref * one_minus_alpha + ref * alpha;

if( sample_cnt_ref >= timeout){
    zc_flag_ref = 0.0;
    sample_cnt_ref = 0.0;
    previous_correction_ref = 0.0;
    for(i=0; i<6; i++){
        phase_state[i] = 0.0;
    }
}
else if( (filtered_ref >= 0) && (previous_filtered_ref < 0) ){
    zc_flag_ref = 1.0;
}
else{
    zc_flag_ref = 0.0;
}

for(i=0; i<6; i++){
    sample_cnt_in[i] += 1.0;

    previous_filtered_in[i] = filtered_in[i];
    filtered_in[i] = previous_filtered_in[i] * one_minus_alpha + in[i] * alpha;

    if( sample_cnt_in[i] >= timeout ){
        zc_flag_in[i] = 0.0;
        no_zc_flag_in[i] = 1.0;
        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = 0.0;

        phase_state[i] = 0.0;
    }
    else if( (filtered_in[i] >= 0.0) && (previous_filtered_in[i] < 0.0) ){
        zc_flag_in[i] = 1.0;
        no_zc_flag_in[i] = 0.0;
    }
    else{
        zc_flag_in[i] = 0.0;
    }
}

if( zc_flag_ref ) {
    correction_ref = - previous_filtered_ref/( filtered_ref - previous_filtered_ref );

    sample_cnt_ref += correction_ref - previous_correction_ref;
    if( (sample_cnt_ref > 1e-6) || (sample_cnt_ref < -1e-6) ){
        for(i=0; i<6; i++){
            if( !no_zc_flag_in[i] ){
                phase_state[i] = 360.0 * ( sample_cnt_in[i] + correction_ref - previous_correction_in[i] ) / sample_cnt_ref;
                
                if( (phase_state[i] > 360.0) || (phase_state[i] < -360.0) ){
                    phase_state[i] = fmod(phase_state[i], 360.0);
                }

                if (phase_state[i] < -180.0){
                    phase_state[i] += 360.0;
                }
                else if (phase_state[i] > 180.0){
                    phase_state[i] -= 360.0;
                }
            }
        }
    }
    sample_cnt_ref = 0.0;
    previous_correction_ref = correction_ref;
}

for(i=0; i<6; i++){
    if( zc_flag_in[i] ) {
        correction_in[i] = - previous_filtered_in[i]/( filtered_in[i] - previous_filtered_in[i] );

        sample_cnt_in[i] = 0.0;
        previous_correction_in[i] = correction_in[i];
    }
}
/*End code section*/"
            }
            [
                position = 8624, 8232
                size = 96, 128
            ]

            component "core/Bus Join" "Bus Join" {
                inputs = "6"
            }
            [
                position = 8432, 8096
                rotation = right
                hide_name = True
            ]

            component "core/Bus Split" "Bus Split" {
                outputs = "6"
            }
            [
                position = 8776, 8184
                rotation = left
                hide_name = True
            ]

            port meter_data {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8016
            ]

            port ref {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7160, 8072
            ]

            tag Vb_goto {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from6 {
                value = "Va"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7904
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from11 {
                value = "Ia"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Vc_goto {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Va_goto {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7768, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ib_goto {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7936
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from10 {
                value = "Ib"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8000
                hide_name = True
                size = 60, 20
            ]

            tag From1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7504, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from7 {
                value = "Vb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7928
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from8 {
                value = "Vc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 7952
                hide_name = True
                size = 60, 20
            ]

            tag From2 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7888, 8056
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8544, 8112
                rotation = right
                hide_name = True
                size = 60, 20
            ]

            tag V_REF_from9 {
                value = "Ic"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8312, 8024
                hide_name = True
                size = 60, 20
            ]

            tag Ia_goto {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 7856
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto1 {
                value = "meter_data"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8160, 8016
                hide_name = True
                size = 60, 20
            ]

            tag Ic_goto2 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7240, 8072
                hide_name = True
                size = 60, 20
            ]

            tag Goto3 {
                value = "Meter8_IaM"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8280, 8144
                hide_name = True
                size = 84, 20
            ]

            tag Goto2 {
                value = "Meter8_IaP"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 9072, 8056
                hide_name = True
                size = 84, 20
            ]

            junction Junction1 sp
            [
                position = 8112, 8096
            ]

            junction Junction2 sp
            [
                position = 8856, 8024
            ]

            comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">Phase Calculation</span></p></body></html> ENDCOMMENT 
            [
                position = 8512, 7808
            ]

            connect "Meter Split1.VCn_RMS" VCn_rms.in as Connection482
            connect VBn_rms.in "Meter Split1.VBn_RMS" as Connection481
            connect "Meter Split1.VAn_RMS" VAn_rms.in as Connection480
            connect From2 "Meter Split2.Input" as Connection489
            connect IC_rms.in "Meter Split2.IC_RMS" as Connection488
            connect IB_rms.in "Meter Split2.IB_RMS" as Connection487
            connect meter_data Ic_goto1 as Connection573
            connect From1 "Meter Split1.Input" as Connection572
            connect Ic_goto2 ref as Connection574
            connect "Meter Split1.VAn" Va_goto as Connection575
            connect "Meter Split1.VCn" Vc_goto as Connection576
            connect "Meter Split1.VBn" Vb_goto as Connection577
            connect "Meter Split2.IC" Ic_goto as Connection578
            connect Ia_goto "Meter Split2.IA" as Connection579
            connect "Meter Split2.IB" Ib_goto as Connection580
            connect "Bus Join.out" phase_diff_6_phase.in as Connection11
            connect V_REF_from phase_diff_6_phase.ref as Connection581
            connect V_REF_from6 "Bus Join.in" as Connection582
            connect V_REF_from7 "Bus Join.in1" as Connection583
            connect V_REF_from8 "Bus Join.in2" as Connection584
            connect V_REF_from11 "Bus Join.in3" as Connection585
            connect V_REF_from10 "Bus Join.in4" as Connection586
            connect V_REF_from9 "Bus Join.in5" as Connection587
            connect "Bus Split.in" phase_diff_6_phase.phase_diff as Connection588
            connect "Bus Split.out" Va_ph.in as Connection589
            connect "Bus Split.out1" Vb_ph.in as Connection590
            connect "Bus Split.out2" Vc_ph.in as Connection591
            connect "Bus Split.out4" Ib_ph.in as Connection593
            connect "Bus Split.out5" Ic_ph.in as Connection594
            connect IA_rms.in Junction1 as Connection595
            connect Junction1 "Meter Split2.IA_RMS" as Connection596
            connect Goto3 Junction1 as Connection597
            connect "Bus Split.out3" Junction2 as Connection598
            connect Junction2 Ia_ph.in as Connection599
            connect Goto2 Junction2 as Connection600
        }
        [
            position = 5288, 6592
            size = 104, 80
        ]

        component "core/Three-phase Meter" 3ph_Meter8 {
            I_rms = "True"
            Ts = "ex_rate"
            VLn_rms = "True"
            enable_probes = "False"
            freq = "True"
            n_cycles = "5"
            remove_snubber = "True"
        }
        [
            position = 5288, 6336
            rotation = right
            hide_name = True
            size = 48, 96
        ]

        component "core/Constant Impedance Load" Pg8 {
            SAB = "load[\"8\"][\"S\"]/3"
            SAn = "load[\"8\"][\"S\"]/3"
            SBC = "load[\"8\"][\"S\"]/3"
            SBn = "load[\"8\"][\"S\"]/3"
            SCA = "load[\"8\"][\"S\"]/3"
            SCn = "load[\"8\"][\"S\"]/3"
            Sn_3ph = "load[\"8\"][\"S\"]"
            VAB = "V_ll"
            VAn = "V_ll/np.sqrt(3)"
            VBC = "V_ll"
            VBn = "V_ll/np.sqrt(3)"
            VCA = "V_ll"
            VCn = "V_ll/np.sqrt(3)"
            Vn_3ph = "V_ll"
            enable_neutral = "True"
            fn = "f"
            pfA = "load[\"8\"][\"pf\"]"
            pfB = "load[\"8\"][\"pf\"]"
            pfC = "load[\"8\"][\"pf\"]"
            pf_3ph = "load[\"8\"][\"pf\"]"
            pf_modeA = "Lag"
            pf_modeB = "Lag"
            pf_modeC = "Lag"
            pf_mode_3ph = "Lag"
        }
        [
            position = 5288, 6480
            scale = -1, 1
            size = 96, 80
        ]

        component "core/ETH VE Send" "ETH VE Send2" {
            configuration = "[{\'signal_name\': \'Meter14_IaP\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter13_IaP\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter12_IaP\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter11_IaP\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter10_IaP\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter9_IaP\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Meter8_IaP\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}]"
            dest_ip = "192.168.0.103"
            destination_port = "22000"
            local_send_port = "22022"
            protocol = "TCP/IP"
            sample_time = "0.01"
            signal_names_dict = ""
            stream_source_id = "1002"
        }
        [
            position = 1840, 5592
            size = 96, 184
        ]

        component "core/Probe" Meter1_IaM {
        }
        [
            position = 2264, 5528
        ]

        component "core/Probe" Meter2_IaM {
        }
        [
            position = 2352, 5528
        ]

        component "core/Probe" Meter3_IaM {
        }
        [
            position = 2440, 5528
        ]

        component "core/Probe" Meter4_IaM {
        }
        [
            position = 2528, 5528
        ]

        component "core/Probe" Meter5_IaM {
        }
        [
            position = 2616, 5528
        ]

        component "core/Probe" Meter6_IaM {
        }
        [
            position = 2704, 5528
        ]

        component "core/Probe" Meter7_IaM {
        }
        [
            position = 2792, 5528
        ]

        component "core/Probe" Meter15_IaM {
        }
        [
            position = 2264, 5656
        ]

        component "core/Probe" Meter16_IaM {
        }
        [
            position = 2352, 5656
        ]

        component "core/Probe" Meter17_IaM {
        }
        [
            position = 2440, 5656
        ]

        component "core/Probe" Meter18_IaM {
        }
        [
            position = 2528, 5656
        ]

        component "core/Probe" Meter19_IaM {
        }
        [
            position = 2616, 5656
        ]

        component "core/Probe" Meter20_IaM {
        }
        [
            position = 2704, 5656
        ]

        component "core/Probe" Meter21_IaM {
        }
        [
            position = 2792, 5656
        ]

        component "core/ETH VE Receive" "ETH VE Receive2" {
            configuration = "[{\'signal_name\': \'Meter1_IaP\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter2_IaP\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter3_IaP\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter4_IaP\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter5_IaP\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter6_IaP\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter7_IaP\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter15_IaP\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter16_IaP\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter17_IaP\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter18_IaP\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter19_IaP\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter20_IaP\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}, {\'signal_name\': \'Meter21_IaP\', \'signal_type\': \'variable\', \'data_type\': \'real\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'1\'}]"
            execution_rate = "ex_rate"
            local_receive_port = "44000"
            protocol = "TCP/IP"
            remote_connection_port = "44044"
            src_ip = "192.168.0.103"
        }
        [
            position = 2992, 5592
            size = 80, 248
        ]

        component "core/Probe" Meter1_IaP {
        }
        [
            position = 3144, 5528
        ]

        component "core/Probe" Meter2_IaP {
        }
        [
            position = 3232, 5528
        ]

        component "core/Probe" Meter3_IaP {
        }
        [
            position = 3320, 5528
        ]

        component "core/Probe" Meter4_IaP {
        }
        [
            position = 3408, 5528
        ]

        component "core/Probe" Meter5_IaP {
        }
        [
            position = 3496, 5528
        ]

        component "core/Probe" Meter6_IaP {
        }
        [
            position = 3584, 5528
        ]

        component "core/Probe" Meter7_IaP {
        }
        [
            position = 3672, 5528
        ]

        component "core/Probe" Meter15_IaP {
        }
        [
            position = 3144, 5656
        ]

        component "core/Probe" Meter16_IaP {
        }
        [
            position = 3232, 5656
        ]

        component "core/Probe" Meter17_IaP {
        }
        [
            position = 3320, 5656
        ]

        component "core/Probe" Meter18_IaP {
        }
        [
            position = 3408, 5656
        ]

        component "core/Probe" Meter19_IaP {
        }
        [
            position = 3496, 5656
        ]

        component "core/Probe" Meter20_IaP {
        }
        [
            position = 3584, 5656
        ]

        component "core/Probe" Meter21_IaP {
        }
        [
            position = 3672, 5656
        ]

        component "core/ETH VE Send" "ETH VE Send3" {
            configuration = "[{\'signal_name\': \'Year\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Month\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Day\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Hour\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Minute\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}, {\'signal_name\': \'Second\', \'signal_type\': \'variable\', \'signal_value\': \'From input port\', \'data_type\': \'inherit\', \'length\': \'4\', \'endianess\': \'little_endian\', \'dimension\': \'inherit\'}]"
            dest_ip = "192.168.0.103"
            protocol = "TCP/IP"
            sample_time = "0.01"
            signal_names_dict = ""
            stream_source_id = "1003"
        }
        [
            position = 1488, 5880
            size = 96, 152
        ]

        component "core/SCADA Input" utc_Year {
            execution_rate = "ex_rate"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 1248, 5800
        ]

        component "core/SCADA Input" utc_Month {
            execution_rate = "ex_rate"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 1296, 5824
        ]

        component "core/SCADA Input" utc_Day {
            execution_rate = "ex_rate"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 1352, 5848
        ]

        component "core/SCADA Input" utc_Hour {
            execution_rate = "ex_rate"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 1248, 5888
        ]

        component "core/SCADA Input" utc_Minute {
            execution_rate = "ex_rate"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 1296, 5912
        ]

        component "core/SCADA Input" utc_Second {
            execution_rate = "ex_rate"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 1352, 5936
        ]

        tag Goto701 {
            value = "output14"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 1032, 6336
            hide_name = True
            size = 60, 20
        ]

        tag From701 {
            value = "output14"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 800, 6576
            hide_name = True
            size = 60, 20
        ]

        tag From734 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 800, 6608
            hide_name = True
            size = 60, 20
        ]

        tag V_REF_goto {
            value = "V_REF"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 656, 5936
            hide_name = True
            size = 60, 20
        ]

        tag Goto702 {
            value = "output13"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 1704, 6336
            hide_name = True
            size = 60, 20
        ]

        tag From735 {
            value = "output13"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 1472, 6576
            hide_name = True
            size = 60, 20
        ]

        tag From736 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 1472, 6608
            hide_name = True
            size = 60, 20
        ]

        tag Goto703 {
            value = "output12"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 2320, 6336
            hide_name = True
            size = 60, 20
        ]

        tag From737 {
            value = "output12"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 2088, 6576
            hide_name = True
            size = 60, 20
        ]

        tag From738 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 2088, 6608
            hide_name = True
            size = 60, 20
        ]

        tag Goto704 {
            value = "output11"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 3128, 6336
            hide_name = True
            size = 60, 20
        ]

        tag From739 {
            value = "output11"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 2896, 6576
            hide_name = True
            size = 60, 20
        ]

        tag From740 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 2896, 6608
            hide_name = True
            size = 60, 20
        ]

        tag Goto705 {
            value = "output10"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 3912, 6336
            hide_name = True
            size = 60, 20
        ]

        tag From741 {
            value = "output10"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 3680, 6576
            hide_name = True
            size = 60, 20
        ]

        tag From742 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 3680, 6608
            hide_name = True
            size = 60, 20
        ]

        tag Goto706 {
            value = "output9"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 4688, 6336
            hide_name = True
            size = 60, 20
        ]

        tag From743 {
            value = "output9"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 4456, 6576
            hide_name = True
            size = 60, 20
        ]

        tag From744 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 4456, 6608
            hide_name = True
            size = 60, 20
        ]

        tag Goto707 {
            value = "output8"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 5400, 6336
            hide_name = True
            size = 60, 20
        ]

        tag From745 {
            value = "output8"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 5168, 6576
            hide_name = True
            size = 60, 20
        ]

        tag From746 {
            value = "V_REF"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 5168, 6608
            hide_name = True
            size = 60, 20
        ]

        tag From747 {
            value = "Meter14_IaM"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 1328, 5520
            hide_name = True
            size = 84, 20
        ]

        tag From748 {
            value = "Meter14_IaP"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 1688, 5520
            hide_name = True
            size = 84, 20
        ]

        tag From749 {
            value = "Meter13_IaM"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 1328, 5544
            hide_name = True
            size = 84, 20
        ]

        tag From750 {
            value = "Meter13_IaP"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 1688, 5544
            hide_name = True
            size = 84, 20
        ]

        tag From751 {
            value = "Meter12_IaM"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 1328, 5568
            hide_name = True
            size = 84, 20
        ]

        tag From752 {
            value = "Meter12_IaP"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 1688, 5568
            hide_name = True
            size = 84, 20
        ]

        tag From753 {
            value = "Meter11_IaM"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 1328, 5592
            hide_name = True
            size = 84, 20
        ]

        tag From754 {
            value = "Meter11_IaP"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 1688, 5592
            hide_name = True
            size = 84, 20
        ]

        tag From755 {
            value = "Meter10_IaM"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 1328, 5616
            hide_name = True
            size = 84, 20
        ]

        tag From756 {
            value = "Meter10_IaP"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 1688, 5616
            hide_name = True
            size = 84, 20
        ]

        tag From757 {
            value = "Meter9_IaM"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 1328, 5640
            hide_name = True
            size = 84, 20
        ]

        tag From758 {
            value = "Meter8_IaM"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 1328, 5664
            hide_name = True
            size = 84, 20
        ]

        tag From759 {
            value = "Meter9_IaP"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 1688, 5640
            hide_name = True
            size = 84, 20
        ]

        tag From760 {
            value = "Meter8_IaP"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 1688, 5664
            hide_name = True
            size = 84, 20
        ]

        junction Junction86 pe
        [
            position = 216, 6472
        ]

        junction Junction87 pe
        [
            position = 944, 6232
        ]

        junction Junction88 pe
        [
            position = 920, 6248
        ]

        junction Junction89 pe
        [
            position = 896, 6264
        ]

        junction Junction1081 sp
        [
            position = 608, 5936
        ]

        junction Junction1082 pe
        [
            position = 720, 6232
        ]

        junction Junction1083 pe
        [
            position = 216, 6248
        ]

        junction Junction1087 pe
        [
            position = 2232, 6232
        ]

        junction Junction1088 pe
        [
            position = 2208, 6248
        ]

        junction Junction1089 pe
        [
            position = 2184, 6264
        ]

        junction Junction1090 pe
        [
            position = 3040, 6232
        ]

        junction Junction1091 pe
        [
            position = 3016, 6248
        ]

        junction Junction1092 pe
        [
            position = 2992, 6264
        ]

        junction Junction1093 pe
        [
            position = 3824, 6232
        ]

        junction Junction1094 pe
        [
            position = 3800, 6248
        ]

        junction Junction1095 pe
        [
            position = 3776, 6264
        ]

        junction Junction1096 pe
        [
            position = 4600, 6232
        ]

        junction Junction1097 pe
        [
            position = 4576, 6248
        ]

        junction Junction1098 pe
        [
            position = 4552, 6264
        ]

        junction Junction1099 pe
        [
            position = 1616, 6232
        ]

        junction Junction1100 pe
        [
            position = 1592, 6248
        ]

        junction Junction1101 pe
        [
            position = 1568, 6264
        ]

        comment Comment26 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:18pt;">220kV LINE VOLTAGE</span></p></body></html> ENDCOMMENT 
        [
            position = 0, 6104
        ]

        comment Comment71 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">CB1</p></body></html> ENDCOMMENT 
        [
            position = 648, 6280
        ]

        comment Comment56 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">slack bus </p></body></html> ENDCOMMENT 
        [
            position = 712, 6280
        ]

        comment Comment55 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Voltage reference</p></body></html> ENDCOMMENT 
        [
            position = 592, 5800
        ]

        comment Comment18 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Substation 2</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">D220kV/Yg22kV  </p></body></html> ENDCOMMENT 
        [
            position = 480, 6056
        ]

        comment Comment72 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus MV14 </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 1W</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 1Var</p></body></html> ENDCOMMENT 
        [
            position = 872, 6136
        ]

        comment Comment73 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus MV13 </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 38.59MW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 5.42MVar</p></body></html> ENDCOMMENT 
        [
            position = 1544, 6136
        ]

        comment Comment74 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus MV12 </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 32.82MW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 5.02MVar</p></body></html> ENDCOMMENT 
        [
            position = 2144, 6136
        ]

        comment Comment75 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus MV11 </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 27.46MW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 5.35MVar</p></body></html> ENDCOMMENT 
        [
            position = 2960, 6144
        ]

        comment Comment76 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus MV10</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 190.3MW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 81.38MVar</p></body></html> ENDCOMMENT 
        [
            position = 3736, 6144
        ]

        comment Comment60 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:36pt;">NOP1</span> </p></body></html> ENDCOMMENT 
        [
            position = 3368, 6104
        ]

        comment Comment77 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:36pt;">NOP2</span>  </p></body></html> ENDCOMMENT 
        [
            position = 5384, 6104
        ]

        comment Comment78 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus MV9</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 28.76MW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 4.95MVar</p></body></html> ENDCOMMENT 
        [
            position = 4520, 6144
        ]

        comment Comment79 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Bus MV8</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = 190.3MW</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = 81.38MVar</p></body></html> ENDCOMMENT 
        [
            position = 5216, 6144
        ]

        connect gps.in "Time Synchronization Status1.GPS" as Connection141
        connect "Time Synchronization Status1.PTP" ptp.in as Connection142
        connect gnd1.node Junction86 as Connection1546
        connect Substation_D-Yg1.prm_2 HV2.b_node as Connection1659
        connect HV2.a_node Substation_D-Yg1.prm_1 as Connection1660
        connect HV2.c_node Substation_D-Yg1.prm_3 as Connection1667
        connect Junction86 Substation_D-Yg1.n2 as Connection1672
        [
            breakpoints = 216, 6472; 568, 6472; 576, 6472
        ]
        connect From701 Meter14.meter_data as Connection4196
        connect 3ph_Meter14.A- Pg14.A as Connection6817
        connect 3ph_Meter14.B- Pg14.B as Connection6818
        connect 3ph_Meter14.C- Pg14.C as Connection6819
        connect Pg14.N 3ph_Meter14.GND as Connection6820
        connect Goto701 3ph_Meter14.Out as Connection6821
        connect From734 Meter14.ref as Connection6822
        connect L14-13.P2 Junction87 as Connection6826
        connect 3ph_Meter14.A+ Junction87 as Connection6828
        connect L14-13.P4 Junction88 as Connection6829
        connect Junction88 Substation_D-Yg1.sec_2 as Connection6830
        connect 3ph_Meter14.B+ Junction88 as Connection6831
        connect L14-13.P6 Junction89 as Connection6832
        connect Junction89 Substation_D-Yg1.sec_3 as Connection6833
        connect 3ph_Meter14.C+ Junction89 as Connection6834
        connect V_REF_goto Junction1081 as Connection7522
        connect Junction1081 Vref.out as Connection7523
        connect "RMS value1.in" Junction1081 as Connection7524
        connect Vref_rms.in "RMS value1.out" as Connection7525
        connect Junction87 Junction1082 as Connection7526
        connect Junction1082 Substation_D-Yg1.sec_1 as Connection7527
        connect Vref.p_node Junction1082 as Connection7528
        connect Junction86 Junction1083 as Connection7529
        [
            breakpoints = 216, 6464; 216, 6464; 216, 6448
        ]
        connect Junction1083 HV2.n_node as Connection7530
        [
            breakpoints = 216, 6248; 216, 6248
        ]
        connect Vref.n_node Junction1083 as Connection7531
        connect From735 Meter13.meter_data as Connection7532
        connect 3ph_Meter13.A- Pg13.A as Connection7533
        connect 3ph_Meter13.B- Pg13.B as Connection7534
        connect 3ph_Meter13.C- Pg13.C as Connection7535
        connect Pg13.N 3ph_Meter13.GND as Connection7536
        connect Goto702 3ph_Meter13.Out as Connection7537
        connect From736 Meter13.ref as Connection7538
        connect From737 Meter12.meter_data as Connection7551
        connect 3ph_Meter12.A- Pg12.A as Connection7552
        connect 3ph_Meter12.B- Pg12.B as Connection7553
        connect 3ph_Meter12.C- Pg12.C as Connection7554
        connect Pg12.N 3ph_Meter12.GND as Connection7555
        connect Goto703 3ph_Meter12.Out as Connection7556
        connect From738 Meter12.ref as Connection7557
        connect L12-11.P2 Junction1087 as Connection7561
        connect Junction1087 L13-12.P1 as Connection7562
        connect 3ph_Meter12.A+ Junction1087 as Connection7563
        connect L13-12.P3 Junction1088 as Connection7564
        connect Junction1088 L12-11.P4 as Connection7565
        connect 3ph_Meter12.B+ Junction1088 as Connection7566
        connect L12-11.P6 Junction1089 as Connection7567
        connect Junction1089 L13-12.P5 as Connection7568
        connect 3ph_Meter12.C+ Junction1089 as Connection7569
        connect From739 Meter11.meter_data as Connection7570
        connect 3ph_Meter11.A- Pg11.A as Connection7571
        connect 3ph_Meter11.B- Pg11.B as Connection7572
        connect 3ph_Meter11.C- Pg11.C as Connection7573
        connect Pg11.N 3ph_Meter11.GND as Connection7574
        connect Goto704 3ph_Meter11.Out as Connection7575
        connect From740 Meter11.ref as Connection7576
        connect L11-10.P2 Junction1090 as Connection7580
        connect Junction1090 L12-11.P1 as Connection7581
        connect 3ph_Meter11.A+ Junction1090 as Connection7582
        connect L12-11.P3 Junction1091 as Connection7583
        connect Junction1091 L11-10.P4 as Connection7584
        connect 3ph_Meter11.B+ Junction1091 as Connection7585
        connect L11-10.P6 Junction1092 as Connection7586
        connect Junction1092 L12-11.P5 as Connection7587
        connect 3ph_Meter11.C+ Junction1092 as Connection7588
        connect From741 Meter10.meter_data as Connection7589
        connect 3ph_Meter10.A- Pg10.A as Connection7590
        connect 3ph_Meter10.B- Pg10.B as Connection7591
        connect 3ph_Meter10.C- Pg10.C as Connection7592
        connect Pg10.N 3ph_Meter10.GND as Connection7593
        connect Goto705 3ph_Meter10.Out as Connection7594
        connect From742 Meter10.ref as Connection7595
        connect L10-9.P2 Junction1093 as Connection7599
        connect Junction1093 L11-10.P1 as Connection7600
        connect 3ph_Meter10.A+ Junction1093 as Connection7601
        connect L11-10.P3 Junction1094 as Connection7602
        connect Junction1094 L10-9.P4 as Connection7603
        connect 3ph_Meter10.B+ Junction1094 as Connection7604
        connect L10-9.P6 Junction1095 as Connection7605
        connect Junction1095 L11-10.P5 as Connection7606
        connect 3ph_Meter10.C+ Junction1095 as Connection7607
        connect From743 Meter9.meter_data as Connection7608
        connect 3ph_Meter9.A- Pg9.A as Connection7609
        connect 3ph_Meter9.B- Pg9.B as Connection7610
        connect 3ph_Meter9.C- Pg9.C as Connection7611
        connect Pg9.N 3ph_Meter9.GND as Connection7612
        connect Goto706 3ph_Meter9.Out as Connection7613
        connect From744 Meter9.ref as Connection7614
        connect L10-9.P1 Junction1096 as Connection7618
        connect Junction1096 L9-8.P2 as Connection7619
        connect 3ph_Meter9.A+ Junction1096 as Connection7620
        connect L9-8.P4 Junction1097 as Connection7621
        connect Junction1097 L10-9.P3 as Connection7622
        connect 3ph_Meter9.B+ Junction1097 as Connection7623
        connect L10-9.P5 Junction1098 as Connection7624
        connect Junction1098 L9-8.P6 as Connection7625
        connect 3ph_Meter9.C+ Junction1098 as Connection7626
        connect From745 Meter8.meter_data as Connection7627
        connect 3ph_Meter8.A- Pg8.A as Connection7628
        connect 3ph_Meter8.B- Pg8.B as Connection7629
        connect 3ph_Meter8.C- Pg8.C as Connection7630
        connect Pg8.N 3ph_Meter8.GND as Connection7631
        connect Goto707 3ph_Meter8.Out as Connection7632
        connect From746 Meter8.ref as Connection7633
        connect L9-8.P1 3ph_Meter8.A+ as Connection7634
        connect 3ph_Meter8.B+ L9-8.P3 as Connection7635
        connect L9-8.P5 3ph_Meter8.C+ as Connection7636
        connect "ETH VE Send1.Meter14_IaM" From747 as Connection7637
        connect From751 "ETH VE Send1.Meter12_IaM" as Connection7639
        connect From753 "ETH VE Send1.Meter11_IaM" as Connection7640
        connect From757 "ETH VE Send1.Meter9_IaM" as Connection7642
        connect "ETH VE Send1.Meter8_IaM" From758 as Connection7643
        connect From748 "ETH VE Send2.Meter14_IaP" as Connection7644
        connect From752 "ETH VE Send2.Meter12_IaP" as Connection7646
        connect From754 "ETH VE Send2.Meter11_IaP" as Connection7647
        connect From759 "ETH VE Send2.Meter9_IaP" as Connection7649
        connect From760 "ETH VE Send2.Meter8_IaP" as Connection7650
        connect Meter1_IaM.in "ETH VE Receive1.Meter1_IaM" as Connection7651
        [
            breakpoints = 2232, 5528; 2232, 5488
        ]
        connect Meter2_IaM.in "ETH VE Receive1.Meter2_IaM" as Connection7654
        connect "ETH VE Receive1.Meter3_IaM" Meter3_IaM.in as Connection7655
        [
            breakpoints = 2224, 5520; 2224, 5576; 2232, 5576; 2400, 5576; 2400, 5528
        ]
        connect Meter4_IaM.in "ETH VE Receive1.Meter4_IaM" as Connection7656
        [
            breakpoints = 2488, 5528; 2488, 5584; 2216, 5584; 2216, 5536
        ]
        connect Meter5_IaM.in "ETH VE Receive1.Meter5_IaM" as Connection7657
        [
            breakpoints = 2576, 5528; 2576, 5592; 2208, 5592; 2208, 5552
        ]
        connect Meter6_IaM.in "ETH VE Receive1.Meter6_IaM" as Connection7658
        [
            breakpoints = 2664, 5528; 2664, 5600; 2200, 5600; 2200, 5568
        ]
        connect Meter7_IaM.in "ETH VE Receive1.Meter7_IaM" as Connection7659
        [
            breakpoints = 2752, 5528; 2752, 5608; 2192, 5608; 2192, 5584
        ]
        connect Meter15_IaM.in "ETH VE Receive1.Meter15_IaM" as Connection7660
        [
            breakpoints = 2232, 5656; 2232, 5616; 2184, 5616; 2184, 5600
        ]
        connect Meter16_IaM.in "ETH VE Receive1.Meter16_IaM" as Connection7661
        [
            breakpoints = 2296, 5624; 2168, 5624
        ]
        connect Meter17_IaM.in "ETH VE Receive1.Meter17_IaM" as Connection7662
        [
            breakpoints = 2400, 5656; 2400, 5696; 2216, 5696; 2216, 5632
        ]
        connect Meter18_IaM.in "ETH VE Receive1.Meter18_IaM" as Connection7663
        [
            breakpoints = 2488, 5656; 2488, 5704; 2208, 5704; 2208, 5648
        ]
        connect "ETH VE Receive1.Meter19_IaM" Meter19_IaM.in as Connection7664
        [
            breakpoints = 2200, 5664; 2200, 5712; 2576, 5712; 2576, 5656
        ]
        connect Meter20_IaM.in "ETH VE Receive1.Meter20_IaM" as Connection7665
        [
            breakpoints = 2664, 5656; 2664, 5720; 2192, 5720; 2192, 5680
        ]
        connect Meter21_IaM.in "ETH VE Receive1.Meter21_IaM" as Connection7666
        [
            breakpoints = 2752, 5656; 2752, 5728; 2184, 5728; 2184, 5696
        ]
        connect Meter1_IaP.in "ETH VE Receive2.Meter1_IaP" as Connection7667
        [
            breakpoints = 3112, 5528; 3112, 5488
        ]
        connect Meter2_IaP.in "ETH VE Receive2.Meter2_IaP" as Connection7668
        connect "ETH VE Receive2.Meter3_IaP" Meter3_IaP.in as Connection7669
        [
            breakpoints = 3104, 5520; 3104, 5576; 3112, 5576; 3280, 5576; 3280, 5528
        ]
        connect Meter4_IaP.in "ETH VE Receive2.Meter4_IaP" as Connection7670
        [
            breakpoints = 3368, 5528; 3368, 5584; 3096, 5584; 3096, 5536
        ]
        connect Meter5_IaP.in "ETH VE Receive2.Meter5_IaP" as Connection7671
        [
            breakpoints = 3456, 5528; 3456, 5592; 3088, 5592; 3088, 5552
        ]
        connect Meter6_IaP.in "ETH VE Receive2.Meter6_IaP" as Connection7672
        [
            breakpoints = 3544, 5528; 3544, 5600; 3080, 5600; 3080, 5568
        ]
        connect Meter7_IaP.in "ETH VE Receive2.Meter7_IaP" as Connection7673
        [
            breakpoints = 3632, 5528; 3632, 5608; 3072, 5608; 3072, 5584
        ]
        connect Meter15_IaP.in "ETH VE Receive2.Meter15_IaP" as Connection7674
        [
            breakpoints = 3112, 5656; 3112, 5616; 3064, 5616; 3064, 5600
        ]
        connect Meter16_IaP.in "ETH VE Receive2.Meter16_IaP" as Connection7675
        [
            breakpoints = 3176, 5624; 3048, 5624
        ]
        connect Meter17_IaP.in "ETH VE Receive2.Meter17_IaP" as Connection7676
        [
            breakpoints = 3280, 5656; 3280, 5696; 3096, 5696; 3096, 5632
        ]
        connect Meter18_IaP.in "ETH VE Receive2.Meter18_IaP" as Connection7677
        [
            breakpoints = 3368, 5656; 3368, 5704; 3088, 5704; 3088, 5648
        ]
        connect "ETH VE Receive2.Meter19_IaP" Meter19_IaP.in as Connection7678
        [
            breakpoints = 3080, 5664; 3080, 5712; 3456, 5712; 3456, 5656
        ]
        connect Meter20_IaP.in "ETH VE Receive2.Meter20_IaP" as Connection7679
        [
            breakpoints = 3544, 5656; 3544, 5720; 3072, 5720; 3072, 5680
        ]
        connect Meter21_IaP.in "ETH VE Receive2.Meter21_IaP" as Connection7680
        [
            breakpoints = 3632, 5656; 3632, 5728; 3064, 5728; 3064, 5696
        ]
        connect From755 "ETH VE Send1.Meter10_IaM" as Connection7693
        [
            breakpoints = 1392, 5616
        ]
        connect "ETH VE Send1.Meter13_IaM" From749 as Connection7694
        [
            breakpoints = 1392, 5544
        ]
        connect From750 "ETH VE Send2.Meter13_IaP" as Connection7695
        [
            breakpoints = 1752, 5544
        ]
        connect "ETH VE Send2.Meter10_IaP" From756 as Connection7696
        [
            breakpoints = 1752, 5616
        ]
        connect L13-12.P2 Junction1099 as Connection7794
        connect Junction1099 3ph_Meter13.A+ as Connection7795
        [
            breakpoints = 1616, 6232; 1616, 6232
        ]
        connect L14-13.P1 Junction1099 as Connection7796
        connect 3ph_Meter13.B+ Junction1100 as Connection7797
        connect Junction1100 L13-12.P4 as Connection7798
        [
            breakpoints = 1592, 6248; 1592, 6248
        ]
        connect L14-13.P3 Junction1100 as Connection7799
        connect 3ph_Meter13.C+ Junction1101 as Connection7804
        connect Junction1101 L13-12.P6 as Connection7805
        [
            breakpoints = 1568, 6272; 1568, 6264; 1568, 6264
        ]
        connect L14-13.P5 Junction1101 as Connection7806
        connect utc_Month.out "ETH VE Send3.Month" as Connection7808
        [
            breakpoints = 1416, 5832; 1416, 5856
        ]
        connect utc_Hour.out "ETH VE Send3.Hour" as Connection7810
        connect utc_Minute.out "ETH VE Send3.Minute" as Connection7811
        connect utc_Second.out "ETH VE Send3.Second" as Connection7812
        connect utc_Day.out "ETH VE Send3.Day" as Connection7813
        [
            breakpoints = 1408, 5848; 1408, 5872
        ]
        connect utc_Year.out "ETH VE Send3.Year" as Connection7814
    }

    default {
        "core/Bus Join" {
            inputs = "2"
            execution_rate = "inherit"
        }

        "core/Bus Split" {
            outputs = "2"
            execution_rate = "inherit"
        }

        "core/C function" {
            input_terminals = "real in;"
            input_terminals_show_labels = "False;"
            input_terminals_feedthrough = "True;"
            input_terminals_dimensions = "inherit;"
            output_terminals = "real out;"
            output_terminals_show_labels = "False;"
            output_terminals_feedthrough = "True;"
            output_terminals_dimensions = "inherit;"
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            library_load_type = "Compile-time load"
            dll_file_path = ""
            dll_file_path_full = ""
            arm_a9_file_path = ""
            arm_a9_file_path_full = ""
            arm_a53_file_path = ""
            arm_a53_file_path_full = ""
            h_file_path = ""
            h_file_path_full = ""
            add_src_path = ""
            add_src_path_full = ""
            convert_to_relative_dll = "True"
            convert_to_relative_a = "True"
            convert_to_relative_src = "True"
            arb_defs = ""
            add_macros = ""
            skip_pre_cmpl_check = "False"
            generate_for_hil = "True"
            execution_rate = "inherit"
            _supported_platforms = "[\'generic\']"
            refresh = "refresh"
        }

        "core/ETH VE Setup" {
            mac = "34e6d77d021"
            override_device_id = "False"
            ip_addr = "192.168.0.10"
            eth_port = ""
            device_id = "0"
            ip_addr0 = "None"
            eth_port0 = ""
            device_id0 = "0"
            ip_addr1 = "192.168.0.2"
            eth_port1 = ""
            device_id1 = "1"
            ip_addr2 = "192.168.0.3"
            eth_port2 = ""
            device_id2 = "2"
            ip_addr3 = "192.168.0.4"
            eth_port3 = ""
            device_id3 = "3"
            ip_addr4 = "192.168.0.5"
            eth_port4 = ""
            device_id4 = "4"
            ip_addr5 = "192.168.0.6"
            eth_port5 = ""
            device_id5 = "5"
            ip_addr6 = "192.168.0.7"
            eth_port6 = ""
            device_id6 = "6"
            ip_addr7 = "192.168.0.8"
            eth_port7 = ""
            device_id7 = "7"
            ip_addr8 = "192.168.0.9"
            eth_port8 = ""
            device_id8 = "8"
            ip_addr9 = "192.168.0.10"
            eth_port9 = ""
            device_id9 = "9"
            ip_addr10 = "192.168.0.11"
            eth_port10 = ""
            device_id10 = "10"
            ip_addr11 = "192.168.0.12"
            eth_port11 = ""
            device_id11 = "11"
            ip_addr12 = "192.168.0.13"
            eth_port12 = ""
            device_id12 = "12"
            ip_addr13 = "192.168.0.14"
            eth_port13 = ""
            device_id13 = "13"
            ip_addr14 = "192.168.0.15"
            eth_port14 = ""
            device_id14 = "14"
            ip_addr15 = "192.168.0.16"
            eth_port15 = ""
            device_id15 = "15"
            subnet_mask = "255.255.255.0"
            execution_rate = "100e-6"
            hil_id = "0"
            num_of_variables = "10"
            ethernet_port_per_device = "{ \"HIL100\": {}, \"HIL104\": {}, \"HIL402\": {}, \"HIL404\": {}, \"HIL602+\": {}, \"HIL603\": {}, \"HIL604\": {}, \"HIL606\": {}, \"VHIL+\": {} }"
            hil_device_config = "{
                \'0\' : {
                },
                \'1\' : {
                },
                \'2\' : {
                },
                \'3\' : {
                },
                \'4\' : {
                },
                \'5\' : {
                },
                \'6\' : {
                },
                \'7\' : {
                },
                \'8\' : {
                },
                \'9\' : {
                },
                \'10\' : {
                },
                \'11\' : {
                },
                \'12\' : {
                },
                \'13\' : {
                },
                \'14\' : {
                },
                \'15\' : {
                }
            }"
        }

        "core/Probe" {
            signal_access = "inherit"
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        "core/RMS value" {
            op_mode = "PLL based"
            frequency = "50"
            period_timeout = "0.5"
            period_deadband = "0"
            filter_en = "False"
            lpf_cutoff = "500"
            frequency_src = "Internal"
            execution_rate = "inherit"
        }

        "core/SCADA Input" {
            signal_access = "inherit"
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        "core/Constant Impedance Load" {
            fn = "60"
            conn_type = "Y"
            enable_neutral = "False"
            set_balanced = "True"
            Vn_3ph = "480"
            Sn_3ph = "1.0e6"
            pf_mode_3ph = "Unit"
            pf_3ph = "0.9"
            VAn = "480/(3**0.5)"
            VAB = "480"
            SAn = "1.0e6/3"
            SAB = "1.0e6/3"
            pf_modeA = "Unit"
            pfA = "0.9"
            VBn = "480/(3**0.5)"
            VBC = "480"
            SBn = "1.0e6/3"
            SBC = "1.0e6/3"
            pf_modeB = "Unit"
            pfB = "0.9"
            VCn = "480/(3**0.5)"
            VCA = "480"
            SCn = "1.0e6/3"
            SCA = "1.0e6/3"
            pf_modeC = "Unit"
            pfC = "0.9"
        }

        "core/ETH VE Receive" {
            hil_id = "0"
            number_of_inputs = "1"
            input_type = "real"
            protocol = "UDP"
            endianness = "Little Endian"
            local_receive_port = "55000"
            specify_remote_port = "False"
            remote_connection_port = "55055"
            specify_remote_ip = "False"
            src_ip = "192.168.0.1"
            execution_rate = "100e-6"
            configuration = ""
            signal_names_dict = "{}"
            generate_configuration = "Generate configuration"
            _supported_platforms = "[\'hil\']"
        }

        "core/ETH VE Send" {
            hil_id = "0"
            protocol = "UDP"
            endianness = "Little Endian"
            specify_local_port = "False"
            local_send_port = "55055"
            dest_ip = "192.168.0.1"
            destination_port = "55000"
            stream_source = "New data stream"
            stream_source_id = "1000"
            append_index = "1"
            choose_stream_source = ""
            sample_time = "1e-3"
            execution_rate = "inherit"
            number_of_inputs = "1"
            configuration = ""
            signal_names_dict = "{}"
            generate_configuration = "Generate configuration"
            _supported_platforms = "[\'hil\']"
        }

        "core/Meter Split" {
            van = "True"
            vbn = "True"
            vcn = "True"
            van_rms = "False"
            vbn_rms = "False"
            vcn_rms = "False"
            vln_rms = "False"
            vn = "False"
            vn_rms = "False"
            vab = "False"
            vbc = "False"
            vca = "False"
            vab_rms = "False"
            vbc_rms = "False"
            vca_rms = "False"
            vll_rms = "False"
            ia = "False"
            ib = "False"
            ic = "False"
            ia_rms = "False"
            ib_rms = "False"
            ic_rms = "False"
            i_rms = "False"
            ineutral = "False"
            in_rms = "False"
            freq = "False"
            power_p = "False"
            power_q = "False"
            power_s = "False"
            power_pf = "False"
            enable_extra_in = "No"
            power_pa = "False"
            power_pb = "False"
            power_pc = "False"
            power_qa = "False"
            power_qb = "False"
            power_qc = "False"
            power_sa = "False"
            power_sb = "False"
            power_sc = "False"
            power_pfa = "False"
            power_pfb = "False"
            power_pfc = "False"
        }

        "core/RL Section" {
            model_def = "R-L"
            unit_sys = "imperial"
            num_of_phases = "3"
            resistance_per_l = "1"
            resistance_per_l_mile = "1"
            inductance_per_l = "1e-3"
            inductance_per_l_mile = "1e-3"
            length = "1.0"
            length_mile = "1.0"
            power = "500.0"
            voltage = "11.0"
            frequency = "50.0"
            R_value = "21.55"
            L_value = "0.00842"
            embedded_coupling = "False"
            ratio_type = "Automatic"
            ratio = "0.1"
        }

        "core/Three Phase Two Winding Transformer" {
            input = "SC and OC tests"
            Sn = "160000.0"
            f = "50.0"
            V1 = "10000.0"
            V2 = "400.0"
            usc1 = "4.0"
            Psc1 = "2350.0"
            R1 = "4.58984375"
            L1 = ".0370093710364"
            R2 = ".00734375"
            L2 = "5.92149936583e-05"
            r1 = ".00734375"
            l1 = ".0186029389059"
            r2 = ".00734375"
            l2 = ".0186029389059"
            core_model = "Linear"
            ioc1 = "0.7"
            Poc1 = "460.0"
            Rm = "217391.304348"
            Lm = "311.709196788"
            flux_vals_SI = "[0, 1910.3, 2419.7]"
            current_vals_SI = "[0, 0.66653, 277.72]"
            rm = "347.826086957"
            lm = "156.68213163"
            flux_vals_pu = "[0, 1.2, 1.52]"
            current_vals_pu = "[0, 0.0024, 1]"
            flux_vals_SCOC = "[0, 1.2, 1.52]"
            current_vals_SCOC = "[0, 0.0024, 1]"
            upper_flux_vals_pu = "[0.2, 1.2, 1.52]"
            upper_flux_vals_SI = "[318.33, 1910.3, 2419.7]"
            upper_flux_vals_SCOC = "[0.2, 1.2, 1.52]"
            hysteresis_number = "1"
            execution_rate = "100e-6"
            import_from_SI2SCOC = "Import from SI"
            import_from_pu2SCOC = "Import from PU"
            import_from_SCOC2SI = "Import from SC OC"
            import_from_pu2SI = "Import from PU"
            import_from_SCOC2pu = "Import from SC OC"
            import_from_SI2pu = "Import from SI"
            preview_flux_current = "Preview SI"
            winding_1_connection = "Y"
            winding_2_connection = "Y"
            clock_number = "0"
            embedded_cpl = "None"
            coupling_type = "core"
            ratio_type = "Automatic"
            ratio = "0.1"
            Rshunt = "inf"
        }

        "core/Three Phase Voltage Source" {
            init_rms_value = "0.0"
            init_frequency = "50.0"
            init_phase = "0.0"
        }

        "core/Three-phase Meter" {
            R = "1e5"
            n_cycles = "1"
            Ts = "100e-6"
            enable_probes = "True"
            enable_out = "True"
            remove_snubber = "False"
            enable_bandwidth = "False"
            bandwidth = "10e3"
            VAn = "True"
            VBn = "True"
            VCn = "True"
            VAB = "False"
            VBC = "False"
            VCA = "False"
            VN = "False"
            IA = "True"
            IB = "True"
            IC = "True"
            IN = "False"
            freq = "False"
            VLn_rms = "False"
            VLL_rms = "False"
            VLn_avg_rms = "False"
            VLL_avg_rms = "False"
            VN_rms = "False"
            I_rms = "False"
            I_avg_rms = "False"
            IN_rms = "False"
            P_method = "alpha-beta"
            enable_extra_out = "False"
            P_meas = "False"
        }

        "core/Time Synchronization Status" {
            execution_rate = "100e-6"
        }

        "core/Voltage Measurement" {
            signal_access = "inherit"
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            sig_output_filt_and_full_bw = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        # The Schematic API is imported as 'mdl'
        # To get the model file path, use 'mdl.get_model_file_path()'
        # To print information to the console, use info()
        f=50
        w=2*np.pi*f
        
        if "ex_rate" not in mdl.get_ns_vars():
            ex_rate = 1e-3
            
        # line voltage (phase-to-phase voltage)
        V_ll=22e3
        # phase voltage (line-to-line voltage)
        V_ln=V_ll/np.sqrt(3)
        
        HV2_H=220000/np.sqrt(3)
        
        S_TR2 = 550e6
        
        load = {"14": {"P": 1, "Q": 1},
                "13": {"P": 38.59e6, "Q": 5.42e6},
                "12": {"P": 32.82e6, "Q": 5.02e6},
                "11": {"P": 27.46e6, "Q": 5.35e6},
                "10": {"P": 190.3e6, "Q": 81.38e6},
                "9": {"P": 28.76e6, "Q": 4.95e6},
                "8": {"P": 190.3e6, "Q": 81.38e6}}
        
        for bus in load:
            load[bus]["pf"] = np.cos(np.arctan2(load[bus]["Q"], load[bus]["P"]))
            load[bus]["S"] = load[bus]["P"]/load[bus]["pf"]
        
        branch ={"14-13": {"R": 0.000845366, "X": 0.000284806},
                 "13-12": {"R": 0.000650678, "X": 0.000465415},
                 "12-11": {"R": 0.000186264, "X": 8.83967e-5},
                 "11-10": {"R": 8.33801e-5, "X": 3.95703e-5},
                 "10-9": {"R": 5.29711e-5, "X": 2.71261e-5},
                 "9-8": {"R": 4.96363e-5, "X": 2.64194e-5}}
        
        for branch_id in branch:
            branch[branch_id]["L"] = branch[branch_id]["X"]/w
        
        # Line element length values
        line_len = 1
    ENDCODE
}
